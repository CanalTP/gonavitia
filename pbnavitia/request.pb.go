// Code generated by protoc-gen-go. DO NOT EDIT.
// source: request.proto

package pbnavitia

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type PlaceCodeRequest_Type int32

const (
	PlaceCodeRequest_StopArea       PlaceCodeRequest_Type = 0
	PlaceCodeRequest_Network        PlaceCodeRequest_Type = 1
	PlaceCodeRequest_Company        PlaceCodeRequest_Type = 2
	PlaceCodeRequest_Line           PlaceCodeRequest_Type = 3
	PlaceCodeRequest_Route          PlaceCodeRequest_Type = 4
	PlaceCodeRequest_VehicleJourney PlaceCodeRequest_Type = 5
	PlaceCodeRequest_StopPoint      PlaceCodeRequest_Type = 6
	PlaceCodeRequest_Calendar       PlaceCodeRequest_Type = 7
)

var PlaceCodeRequest_Type_name = map[int32]string{
	0: "StopArea",
	1: "Network",
	2: "Company",
	3: "Line",
	4: "Route",
	5: "VehicleJourney",
	6: "StopPoint",
	7: "Calendar",
}
var PlaceCodeRequest_Type_value = map[string]int32{
	"StopArea":       0,
	"Network":        1,
	"Company":        2,
	"Line":           3,
	"Route":          4,
	"VehicleJourney": 5,
	"StopPoint":      6,
	"Calendar":       7,
}

func (x PlaceCodeRequest_Type) Enum() *PlaceCodeRequest_Type {
	p := new(PlaceCodeRequest_Type)
	*p = x
	return p
}
func (x PlaceCodeRequest_Type) String() string {
	return proto.EnumName(PlaceCodeRequest_Type_name, int32(x))
}
func (x *PlaceCodeRequest_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PlaceCodeRequest_Type_value, data, "PlaceCodeRequest_Type")
	if err != nil {
		return err
	}
	*x = PlaceCodeRequest_Type(value)
	return nil
}
func (PlaceCodeRequest_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{9, 0} }

type CalendarsRequest struct {
	StartDate        *string  `protobuf:"bytes,1,opt,name=start_date,json=startDate" json:"start_date,omitempty"`
	EndDate          *string  `protobuf:"bytes,2,opt,name=end_date,json=endDate" json:"end_date,omitempty"`
	Depth            *int32   `protobuf:"varint,3,opt,name=depth" json:"depth,omitempty"`
	StartPage        *int32   `protobuf:"varint,4,opt,name=start_page,json=startPage" json:"start_page,omitempty"`
	Count            *int32   `protobuf:"varint,5,opt,name=count" json:"count,omitempty"`
	Filter           *string  `protobuf:"bytes,6,opt,name=filter" json:"filter,omitempty"`
	ForbiddenUris    []string `protobuf:"bytes,7,rep,name=forbidden_uris,json=forbiddenUris" json:"forbidden_uris,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CalendarsRequest) Reset()                    { *m = CalendarsRequest{} }
func (m *CalendarsRequest) String() string            { return proto.CompactTextString(m) }
func (*CalendarsRequest) ProtoMessage()               {}
func (*CalendarsRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *CalendarsRequest) GetStartDate() string {
	if m != nil && m.StartDate != nil {
		return *m.StartDate
	}
	return ""
}

func (m *CalendarsRequest) GetEndDate() string {
	if m != nil && m.EndDate != nil {
		return *m.EndDate
	}
	return ""
}

func (m *CalendarsRequest) GetDepth() int32 {
	if m != nil && m.Depth != nil {
		return *m.Depth
	}
	return 0
}

func (m *CalendarsRequest) GetStartPage() int32 {
	if m != nil && m.StartPage != nil {
		return *m.StartPage
	}
	return 0
}

func (m *CalendarsRequest) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *CalendarsRequest) GetFilter() string {
	if m != nil && m.Filter != nil {
		return *m.Filter
	}
	return ""
}

func (m *CalendarsRequest) GetForbiddenUris() []string {
	if m != nil {
		return m.ForbiddenUris
	}
	return nil
}

type TrafficReportsRequest struct {
	ApplicationPeriodBegin *uint64  `protobuf:"varint,8,opt,name=application_period_begin,json=applicationPeriodBegin" json:"application_period_begin,omitempty"`
	ApplicationPeriodEnd   *uint64  `protobuf:"varint,9,opt,name=application_period_end,json=applicationPeriodEnd" json:"application_period_end,omitempty"`
	XCurrentDatetime       *uint64  `protobuf:"varint,10,opt,name=_current_datetime,json=CurrentDatetime" json:"_current_datetime,omitempty"`
	Depth                  *int32   `protobuf:"varint,3,opt,name=depth" json:"depth,omitempty"`
	StartPage              *int32   `protobuf:"varint,4,opt,name=start_page,json=startPage" json:"start_page,omitempty"`
	Count                  *int32   `protobuf:"varint,5,opt,name=count" json:"count,omitempty"`
	Filter                 *string  `protobuf:"bytes,6,opt,name=filter" json:"filter,omitempty"`
	ForbiddenUris          []string `protobuf:"bytes,7,rep,name=forbidden_uris,json=forbiddenUris" json:"forbidden_uris,omitempty"`
	XXX_unrecognized       []byte   `json:"-"`
}

func (m *TrafficReportsRequest) Reset()                    { *m = TrafficReportsRequest{} }
func (m *TrafficReportsRequest) String() string            { return proto.CompactTextString(m) }
func (*TrafficReportsRequest) ProtoMessage()               {}
func (*TrafficReportsRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *TrafficReportsRequest) GetApplicationPeriodBegin() uint64 {
	if m != nil && m.ApplicationPeriodBegin != nil {
		return *m.ApplicationPeriodBegin
	}
	return 0
}

func (m *TrafficReportsRequest) GetApplicationPeriodEnd() uint64 {
	if m != nil && m.ApplicationPeriodEnd != nil {
		return *m.ApplicationPeriodEnd
	}
	return 0
}

func (m *TrafficReportsRequest) GetXCurrentDatetime() uint64 {
	if m != nil && m.XCurrentDatetime != nil {
		return *m.XCurrentDatetime
	}
	return 0
}

func (m *TrafficReportsRequest) GetDepth() int32 {
	if m != nil && m.Depth != nil {
		return *m.Depth
	}
	return 0
}

func (m *TrafficReportsRequest) GetStartPage() int32 {
	if m != nil && m.StartPage != nil {
		return *m.StartPage
	}
	return 0
}

func (m *TrafficReportsRequest) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *TrafficReportsRequest) GetFilter() string {
	if m != nil && m.Filter != nil {
		return *m.Filter
	}
	return ""
}

func (m *TrafficReportsRequest) GetForbiddenUris() []string {
	if m != nil {
		return m.ForbiddenUris
	}
	return nil
}

type LineReportsRequest struct {
	Depth            *int32   `protobuf:"varint,1,opt,name=depth" json:"depth,omitempty"`
	StartPage        *int32   `protobuf:"varint,2,opt,name=start_page,json=startPage" json:"start_page,omitempty"`
	Count            *int32   `protobuf:"varint,3,opt,name=count" json:"count,omitempty"`
	Filter           *string  `protobuf:"bytes,4,opt,name=filter" json:"filter,omitempty"`
	ForbiddenUris    []string `protobuf:"bytes,5,rep,name=forbidden_uris,json=forbiddenUris" json:"forbidden_uris,omitempty"`
	SinceDatetime    *uint64  `protobuf:"varint,6,opt,name=since_datetime,json=sinceDatetime" json:"since_datetime,omitempty"`
	UntilDatetime    *uint64  `protobuf:"varint,7,opt,name=until_datetime,json=untilDatetime" json:"until_datetime,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *LineReportsRequest) Reset()                    { *m = LineReportsRequest{} }
func (m *LineReportsRequest) String() string            { return proto.CompactTextString(m) }
func (*LineReportsRequest) ProtoMessage()               {}
func (*LineReportsRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *LineReportsRequest) GetDepth() int32 {
	if m != nil && m.Depth != nil {
		return *m.Depth
	}
	return 0
}

func (m *LineReportsRequest) GetStartPage() int32 {
	if m != nil && m.StartPage != nil {
		return *m.StartPage
	}
	return 0
}

func (m *LineReportsRequest) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *LineReportsRequest) GetFilter() string {
	if m != nil && m.Filter != nil {
		return *m.Filter
	}
	return ""
}

func (m *LineReportsRequest) GetForbiddenUris() []string {
	if m != nil {
		return m.ForbiddenUris
	}
	return nil
}

func (m *LineReportsRequest) GetSinceDatetime() uint64 {
	if m != nil && m.SinceDatetime != nil {
		return *m.SinceDatetime
	}
	return 0
}

func (m *LineReportsRequest) GetUntilDatetime() uint64 {
	if m != nil && m.UntilDatetime != nil {
		return *m.UntilDatetime
	}
	return 0
}

type PlacesRequest struct {
	Q                *string       `protobuf:"bytes,1,req,name=q" json:"q,omitempty"`
	Types            []NavitiaType `protobuf:"varint,2,rep,name=types,enum=pbnavitia.NavitiaType" json:"types,omitempty"`
	Depth            *int32        `protobuf:"varint,3,req,name=depth" json:"depth,omitempty"`
	Count            *int32        `protobuf:"varint,4,req,name=count" json:"count,omitempty"`
	AdminUris        []string      `protobuf:"bytes,5,rep,name=admin_uris,json=adminUris" json:"admin_uris,omitempty"`
	SearchType       *int32        `protobuf:"varint,6,opt,name=search_type,json=searchType" json:"search_type,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *PlacesRequest) Reset()                    { *m = PlacesRequest{} }
func (m *PlacesRequest) String() string            { return proto.CompactTextString(m) }
func (*PlacesRequest) ProtoMessage()               {}
func (*PlacesRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *PlacesRequest) GetQ() string {
	if m != nil && m.Q != nil {
		return *m.Q
	}
	return ""
}

func (m *PlacesRequest) GetTypes() []NavitiaType {
	if m != nil {
		return m.Types
	}
	return nil
}

func (m *PlacesRequest) GetDepth() int32 {
	if m != nil && m.Depth != nil {
		return *m.Depth
	}
	return 0
}

func (m *PlacesRequest) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *PlacesRequest) GetAdminUris() []string {
	if m != nil {
		return m.AdminUris
	}
	return nil
}

func (m *PlacesRequest) GetSearchType() int32 {
	if m != nil && m.SearchType != nil {
		return *m.SearchType
	}
	return 0
}

type NextStopTimeRequest struct {
	DepartureFilter  *string  `protobuf:"bytes,1,req,name=departure_filter,json=departureFilter" json:"departure_filter,omitempty"`
	ArrivalFilter    *string  `protobuf:"bytes,2,req,name=arrival_filter,json=arrivalFilter" json:"arrival_filter,omitempty"`
	FromDatetime     *uint64  `protobuf:"varint,3,opt,name=from_datetime,json=fromDatetime" json:"from_datetime,omitempty"`
	Duration         *int32   `protobuf:"varint,4,req,name=duration" json:"duration,omitempty"`
	Depth            *int32   `protobuf:"varint,5,req,name=depth" json:"depth,omitempty"`
	NbStoptimes      *int32   `protobuf:"varint,7,req,name=nb_stoptimes,json=nbStoptimes" json:"nb_stoptimes,omitempty"`
	InterfaceVersion *int32   `protobuf:"varint,8,opt,name=interface_version,json=interfaceVersion" json:"interface_version,omitempty"`
	StartPage        *int32   `protobuf:"varint,9,req,name=start_page,json=startPage" json:"start_page,omitempty"`
	Count            *int32   `protobuf:"varint,10,req,name=count" json:"count,omitempty"`
	MaxDateTimes     *int32   `protobuf:"varint,11,opt,name=max_date_times,json=maxDateTimes" json:"max_date_times,omitempty"`
	ForbiddenUri     []string `protobuf:"bytes,12,rep,name=forbidden_uri,json=forbiddenUri" json:"forbidden_uri,omitempty"`
	Calendar         *string  `protobuf:"bytes,13,opt,name=calendar" json:"calendar,omitempty"`
	ShowCodes        *bool    `protobuf:"varint,14,opt,name=show_codes,json=showCodes" json:"show_codes,omitempty"`
	UntilDatetime    *uint64  `protobuf:"varint,15,opt,name=until_datetime,json=untilDatetime" json:"until_datetime,omitempty"`
	XCurrentDatetime *uint64  `protobuf:"varint,16,opt,name=_current_datetime,json=CurrentDatetime" json:"_current_datetime,omitempty"`
	RealtimeLevel    *RTLevel `protobuf:"varint,17,opt,name=realtime_level,json=realtimeLevel,enum=pbnavitia.RTLevel" json:"realtime_level,omitempty"`
	ItemsPerSchedule *int32   `protobuf:"varint,18,opt,name=items_per_schedule,json=itemsPerSchedule" json:"items_per_schedule,omitempty"`
	DisableGeojson   *bool    `protobuf:"varint,19,opt,name=disable_geojson,json=disableGeojson" json:"disable_geojson,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *NextStopTimeRequest) Reset()                    { *m = NextStopTimeRequest{} }
func (m *NextStopTimeRequest) String() string            { return proto.CompactTextString(m) }
func (*NextStopTimeRequest) ProtoMessage()               {}
func (*NextStopTimeRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *NextStopTimeRequest) GetDepartureFilter() string {
	if m != nil && m.DepartureFilter != nil {
		return *m.DepartureFilter
	}
	return ""
}

func (m *NextStopTimeRequest) GetArrivalFilter() string {
	if m != nil && m.ArrivalFilter != nil {
		return *m.ArrivalFilter
	}
	return ""
}

func (m *NextStopTimeRequest) GetFromDatetime() uint64 {
	if m != nil && m.FromDatetime != nil {
		return *m.FromDatetime
	}
	return 0
}

func (m *NextStopTimeRequest) GetDuration() int32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

func (m *NextStopTimeRequest) GetDepth() int32 {
	if m != nil && m.Depth != nil {
		return *m.Depth
	}
	return 0
}

func (m *NextStopTimeRequest) GetNbStoptimes() int32 {
	if m != nil && m.NbStoptimes != nil {
		return *m.NbStoptimes
	}
	return 0
}

func (m *NextStopTimeRequest) GetInterfaceVersion() int32 {
	if m != nil && m.InterfaceVersion != nil {
		return *m.InterfaceVersion
	}
	return 0
}

func (m *NextStopTimeRequest) GetStartPage() int32 {
	if m != nil && m.StartPage != nil {
		return *m.StartPage
	}
	return 0
}

func (m *NextStopTimeRequest) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *NextStopTimeRequest) GetMaxDateTimes() int32 {
	if m != nil && m.MaxDateTimes != nil {
		return *m.MaxDateTimes
	}
	return 0
}

func (m *NextStopTimeRequest) GetForbiddenUri() []string {
	if m != nil {
		return m.ForbiddenUri
	}
	return nil
}

func (m *NextStopTimeRequest) GetCalendar() string {
	if m != nil && m.Calendar != nil {
		return *m.Calendar
	}
	return ""
}

func (m *NextStopTimeRequest) GetShowCodes() bool {
	if m != nil && m.ShowCodes != nil {
		return *m.ShowCodes
	}
	return false
}

func (m *NextStopTimeRequest) GetUntilDatetime() uint64 {
	if m != nil && m.UntilDatetime != nil {
		return *m.UntilDatetime
	}
	return 0
}

func (m *NextStopTimeRequest) GetXCurrentDatetime() uint64 {
	if m != nil && m.XCurrentDatetime != nil {
		return *m.XCurrentDatetime
	}
	return 0
}

func (m *NextStopTimeRequest) GetRealtimeLevel() RTLevel {
	if m != nil && m.RealtimeLevel != nil {
		return *m.RealtimeLevel
	}
	return RTLevel_BASE_SCHEDULE
}

func (m *NextStopTimeRequest) GetItemsPerSchedule() int32 {
	if m != nil && m.ItemsPerSchedule != nil {
		return *m.ItemsPerSchedule
	}
	return 0
}

func (m *NextStopTimeRequest) GetDisableGeojson() bool {
	if m != nil && m.DisableGeojson != nil {
		return *m.DisableGeojson
	}
	return false
}

type StreetNetworkParams struct {
	OriginMode               *string  `protobuf:"bytes,1,opt,name=origin_mode,json=originMode" json:"origin_mode,omitempty"`
	DestinationMode          *string  `protobuf:"bytes,2,opt,name=destination_mode,json=destinationMode" json:"destination_mode,omitempty"`
	WalkingSpeed             *float64 `protobuf:"fixed64,3,opt,name=walking_speed,json=walkingSpeed" json:"walking_speed,omitempty"`
	BikeSpeed                *float64 `protobuf:"fixed64,5,opt,name=bike_speed,json=bikeSpeed" json:"bike_speed,omitempty"`
	CarSpeed                 *float64 `protobuf:"fixed64,7,opt,name=car_speed,json=carSpeed" json:"car_speed,omitempty"`
	BssSpeed                 *float64 `protobuf:"fixed64,9,opt,name=bss_speed,json=bssSpeed" json:"bss_speed,omitempty"`
	OriginFilter             *string  `protobuf:"bytes,11,opt,name=origin_filter,json=originFilter" json:"origin_filter,omitempty"`
	DestinationFilter        *string  `protobuf:"bytes,12,opt,name=destination_filter,json=destinationFilter" json:"destination_filter,omitempty"`
	MaxWalkingDurationToPt   *int32   `protobuf:"varint,13,opt,name=max_walking_duration_to_pt,json=maxWalkingDurationToPt" json:"max_walking_duration_to_pt,omitempty"`
	MaxBikeDurationToPt      *int32   `protobuf:"varint,14,opt,name=max_bike_duration_to_pt,json=maxBikeDurationToPt" json:"max_bike_duration_to_pt,omitempty"`
	MaxBssDurationToPt       *int32   `protobuf:"varint,15,opt,name=max_bss_duration_to_pt,json=maxBssDurationToPt" json:"max_bss_duration_to_pt,omitempty"`
	MaxCarDurationToPt       *int32   `protobuf:"varint,16,opt,name=max_car_duration_to_pt,json=maxCarDurationToPt" json:"max_car_duration_to_pt,omitempty"`
	EnableDirectPath         *bool    `protobuf:"varint,17,opt,name=enable_direct_path,json=enableDirectPath,def=1" json:"enable_direct_path,omitempty"`
	CarNoParkSpeed           *float64 `protobuf:"fixed64,18,opt,name=car_no_park_speed,json=carNoParkSpeed" json:"car_no_park_speed,omitempty"`
	MaxCarNoParkDurationToPt *int32   `protobuf:"varint,19,opt,name=max_car_no_park_duration_to_pt,json=maxCarNoParkDurationToPt" json:"max_car_no_park_duration_to_pt,omitempty"`
	XXX_unrecognized         []byte   `json:"-"`
}

func (m *StreetNetworkParams) Reset()                    { *m = StreetNetworkParams{} }
func (m *StreetNetworkParams) String() string            { return proto.CompactTextString(m) }
func (*StreetNetworkParams) ProtoMessage()               {}
func (*StreetNetworkParams) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

const Default_StreetNetworkParams_EnableDirectPath bool = true

func (m *StreetNetworkParams) GetOriginMode() string {
	if m != nil && m.OriginMode != nil {
		return *m.OriginMode
	}
	return ""
}

func (m *StreetNetworkParams) GetDestinationMode() string {
	if m != nil && m.DestinationMode != nil {
		return *m.DestinationMode
	}
	return ""
}

func (m *StreetNetworkParams) GetWalkingSpeed() float64 {
	if m != nil && m.WalkingSpeed != nil {
		return *m.WalkingSpeed
	}
	return 0
}

func (m *StreetNetworkParams) GetBikeSpeed() float64 {
	if m != nil && m.BikeSpeed != nil {
		return *m.BikeSpeed
	}
	return 0
}

func (m *StreetNetworkParams) GetCarSpeed() float64 {
	if m != nil && m.CarSpeed != nil {
		return *m.CarSpeed
	}
	return 0
}

func (m *StreetNetworkParams) GetBssSpeed() float64 {
	if m != nil && m.BssSpeed != nil {
		return *m.BssSpeed
	}
	return 0
}

func (m *StreetNetworkParams) GetOriginFilter() string {
	if m != nil && m.OriginFilter != nil {
		return *m.OriginFilter
	}
	return ""
}

func (m *StreetNetworkParams) GetDestinationFilter() string {
	if m != nil && m.DestinationFilter != nil {
		return *m.DestinationFilter
	}
	return ""
}

func (m *StreetNetworkParams) GetMaxWalkingDurationToPt() int32 {
	if m != nil && m.MaxWalkingDurationToPt != nil {
		return *m.MaxWalkingDurationToPt
	}
	return 0
}

func (m *StreetNetworkParams) GetMaxBikeDurationToPt() int32 {
	if m != nil && m.MaxBikeDurationToPt != nil {
		return *m.MaxBikeDurationToPt
	}
	return 0
}

func (m *StreetNetworkParams) GetMaxBssDurationToPt() int32 {
	if m != nil && m.MaxBssDurationToPt != nil {
		return *m.MaxBssDurationToPt
	}
	return 0
}

func (m *StreetNetworkParams) GetMaxCarDurationToPt() int32 {
	if m != nil && m.MaxCarDurationToPt != nil {
		return *m.MaxCarDurationToPt
	}
	return 0
}

func (m *StreetNetworkParams) GetEnableDirectPath() bool {
	if m != nil && m.EnableDirectPath != nil {
		return *m.EnableDirectPath
	}
	return Default_StreetNetworkParams_EnableDirectPath
}

func (m *StreetNetworkParams) GetCarNoParkSpeed() float64 {
	if m != nil && m.CarNoParkSpeed != nil {
		return *m.CarNoParkSpeed
	}
	return 0
}

func (m *StreetNetworkParams) GetMaxCarNoParkDurationToPt() int32 {
	if m != nil && m.MaxCarNoParkDurationToPt != nil {
		return *m.MaxCarNoParkDurationToPt
	}
	return 0
}

type JourneysRequest struct {
	Origin                   []*LocationContext   `protobuf:"bytes,1,rep,name=origin" json:"origin,omitempty"`
	Destination              []*LocationContext   `protobuf:"bytes,2,rep,name=destination" json:"destination,omitempty"`
	Datetimes                []uint64             `protobuf:"varint,3,rep,name=datetimes" json:"datetimes,omitempty"`
	Clockwise                *bool                `protobuf:"varint,4,req,name=clockwise" json:"clockwise,omitempty"`
	ForbiddenUris            []string             `protobuf:"bytes,5,rep,name=forbidden_uris,json=forbiddenUris" json:"forbidden_uris,omitempty"`
	MaxDuration              *int32               `protobuf:"varint,6,req,name=max_duration,json=maxDuration" json:"max_duration,omitempty"`
	MaxTransfers             *int32               `protobuf:"varint,7,req,name=max_transfers,json=maxTransfers" json:"max_transfers,omitempty"`
	StreetnetworkParams      *StreetNetworkParams `protobuf:"bytes,8,opt,name=streetnetwork_params,json=streetnetworkParams" json:"streetnetwork_params,omitempty"`
	Wheelchair               *bool                `protobuf:"varint,9,opt,name=wheelchair,def=0" json:"wheelchair,omitempty"`
	ShowCodes                *bool                `protobuf:"varint,11,opt,name=show_codes,json=showCodes" json:"show_codes,omitempty"`
	Details                  *bool                `protobuf:"varint,13,opt,name=details" json:"details,omitempty"`
	RealtimeLevel            *RTLevel             `protobuf:"varint,14,opt,name=realtime_level,json=realtimeLevel,enum=pbnavitia.RTLevel" json:"realtime_level,omitempty"`
	MaxExtraSecondPass       *int32               `protobuf:"varint,15,opt,name=max_extra_second_pass,json=maxExtraSecondPass,def=0" json:"max_extra_second_pass,omitempty"`
	WalkingTransferPenalty   *int32               `protobuf:"varint,16,opt,name=walking_transfer_penalty,json=walkingTransferPenalty,def=120" json:"walking_transfer_penalty,omitempty"`
	DirectPathDuration       *int32               `protobuf:"varint,17,opt,name=direct_path_duration,json=directPathDuration" json:"direct_path_duration,omitempty"`
	BikeInPt                 *bool                `protobuf:"varint,18,opt,name=bike_in_pt,json=bikeInPt" json:"bike_in_pt,omitempty"`
	AllowedId                []string             `protobuf:"bytes,19,rep,name=allowed_id,json=allowedId" json:"allowed_id,omitempty"`
	FreeRadiusFrom           *int32               `protobuf:"varint,20,opt,name=free_radius_from,json=freeRadiusFrom,def=0" json:"free_radius_from,omitempty"`
	FreeRadiusTo             *int32               `protobuf:"varint,21,opt,name=free_radius_to,json=freeRadiusTo,def=0" json:"free_radius_to,omitempty"`
	MinNbJourneys            *int32               `protobuf:"varint,22,opt,name=min_nb_journeys,json=minNbJourneys" json:"min_nb_journeys,omitempty"`
	NightBusFilterMaxFactor  *float64             `protobuf:"fixed64,23,opt,name=night_bus_filter_max_factor,json=nightBusFilterMaxFactor,def=1.5" json:"night_bus_filter_max_factor,omitempty"`
	NightBusFilterBaseFactor *int32               `protobuf:"varint,24,opt,name=night_bus_filter_base_factor,json=nightBusFilterBaseFactor,def=900" json:"night_bus_filter_base_factor,omitempty"`
	TimeframeDuration        *uint32              `protobuf:"varint,25,opt,name=timeframe_duration,json=timeframeDuration" json:"timeframe_duration,omitempty"`
	XXX_unrecognized         []byte               `json:"-"`
}

func (m *JourneysRequest) Reset()                    { *m = JourneysRequest{} }
func (m *JourneysRequest) String() string            { return proto.CompactTextString(m) }
func (*JourneysRequest) ProtoMessage()               {}
func (*JourneysRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

const Default_JourneysRequest_Wheelchair bool = false
const Default_JourneysRequest_MaxExtraSecondPass int32 = 0
const Default_JourneysRequest_WalkingTransferPenalty int32 = 120
const Default_JourneysRequest_FreeRadiusFrom int32 = 0
const Default_JourneysRequest_FreeRadiusTo int32 = 0
const Default_JourneysRequest_NightBusFilterMaxFactor float64 = 1.5
const Default_JourneysRequest_NightBusFilterBaseFactor int32 = 900

func (m *JourneysRequest) GetOrigin() []*LocationContext {
	if m != nil {
		return m.Origin
	}
	return nil
}

func (m *JourneysRequest) GetDestination() []*LocationContext {
	if m != nil {
		return m.Destination
	}
	return nil
}

func (m *JourneysRequest) GetDatetimes() []uint64 {
	if m != nil {
		return m.Datetimes
	}
	return nil
}

func (m *JourneysRequest) GetClockwise() bool {
	if m != nil && m.Clockwise != nil {
		return *m.Clockwise
	}
	return false
}

func (m *JourneysRequest) GetForbiddenUris() []string {
	if m != nil {
		return m.ForbiddenUris
	}
	return nil
}

func (m *JourneysRequest) GetMaxDuration() int32 {
	if m != nil && m.MaxDuration != nil {
		return *m.MaxDuration
	}
	return 0
}

func (m *JourneysRequest) GetMaxTransfers() int32 {
	if m != nil && m.MaxTransfers != nil {
		return *m.MaxTransfers
	}
	return 0
}

func (m *JourneysRequest) GetStreetnetworkParams() *StreetNetworkParams {
	if m != nil {
		return m.StreetnetworkParams
	}
	return nil
}

func (m *JourneysRequest) GetWheelchair() bool {
	if m != nil && m.Wheelchair != nil {
		return *m.Wheelchair
	}
	return Default_JourneysRequest_Wheelchair
}

func (m *JourneysRequest) GetShowCodes() bool {
	if m != nil && m.ShowCodes != nil {
		return *m.ShowCodes
	}
	return false
}

func (m *JourneysRequest) GetDetails() bool {
	if m != nil && m.Details != nil {
		return *m.Details
	}
	return false
}

func (m *JourneysRequest) GetRealtimeLevel() RTLevel {
	if m != nil && m.RealtimeLevel != nil {
		return *m.RealtimeLevel
	}
	return RTLevel_BASE_SCHEDULE
}

func (m *JourneysRequest) GetMaxExtraSecondPass() int32 {
	if m != nil && m.MaxExtraSecondPass != nil {
		return *m.MaxExtraSecondPass
	}
	return Default_JourneysRequest_MaxExtraSecondPass
}

func (m *JourneysRequest) GetWalkingTransferPenalty() int32 {
	if m != nil && m.WalkingTransferPenalty != nil {
		return *m.WalkingTransferPenalty
	}
	return Default_JourneysRequest_WalkingTransferPenalty
}

func (m *JourneysRequest) GetDirectPathDuration() int32 {
	if m != nil && m.DirectPathDuration != nil {
		return *m.DirectPathDuration
	}
	return 0
}

func (m *JourneysRequest) GetBikeInPt() bool {
	if m != nil && m.BikeInPt != nil {
		return *m.BikeInPt
	}
	return false
}

func (m *JourneysRequest) GetAllowedId() []string {
	if m != nil {
		return m.AllowedId
	}
	return nil
}

func (m *JourneysRequest) GetFreeRadiusFrom() int32 {
	if m != nil && m.FreeRadiusFrom != nil {
		return *m.FreeRadiusFrom
	}
	return Default_JourneysRequest_FreeRadiusFrom
}

func (m *JourneysRequest) GetFreeRadiusTo() int32 {
	if m != nil && m.FreeRadiusTo != nil {
		return *m.FreeRadiusTo
	}
	return Default_JourneysRequest_FreeRadiusTo
}

func (m *JourneysRequest) GetMinNbJourneys() int32 {
	if m != nil && m.MinNbJourneys != nil {
		return *m.MinNbJourneys
	}
	return 0
}

func (m *JourneysRequest) GetNightBusFilterMaxFactor() float64 {
	if m != nil && m.NightBusFilterMaxFactor != nil {
		return *m.NightBusFilterMaxFactor
	}
	return Default_JourneysRequest_NightBusFilterMaxFactor
}

func (m *JourneysRequest) GetNightBusFilterBaseFactor() int32 {
	if m != nil && m.NightBusFilterBaseFactor != nil {
		return *m.NightBusFilterBaseFactor
	}
	return Default_JourneysRequest_NightBusFilterBaseFactor
}

func (m *JourneysRequest) GetTimeframeDuration() uint32 {
	if m != nil && m.TimeframeDuration != nil {
		return *m.TimeframeDuration
	}
	return 0
}

type PlacesNearbyRequest struct {
	Uri              *string       `protobuf:"bytes,1,req,name=uri" json:"uri,omitempty"`
	Distance         *float64      `protobuf:"fixed64,2,req,name=distance" json:"distance,omitempty"`
	Types            []NavitiaType `protobuf:"varint,3,rep,name=types,enum=pbnavitia.NavitiaType" json:"types,omitempty"`
	Depth            *int32        `protobuf:"varint,4,req,name=depth" json:"depth,omitempty"`
	Count            *int32        `protobuf:"varint,5,req,name=count" json:"count,omitempty"`
	StartPage        *int32        `protobuf:"varint,6,req,name=start_page,json=startPage" json:"start_page,omitempty"`
	Filter           *string       `protobuf:"bytes,7,opt,name=filter" json:"filter,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *PlacesNearbyRequest) Reset()                    { *m = PlacesNearbyRequest{} }
func (m *PlacesNearbyRequest) String() string            { return proto.CompactTextString(m) }
func (*PlacesNearbyRequest) ProtoMessage()               {}
func (*PlacesNearbyRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

func (m *PlacesNearbyRequest) GetUri() string {
	if m != nil && m.Uri != nil {
		return *m.Uri
	}
	return ""
}

func (m *PlacesNearbyRequest) GetDistance() float64 {
	if m != nil && m.Distance != nil {
		return *m.Distance
	}
	return 0
}

func (m *PlacesNearbyRequest) GetTypes() []NavitiaType {
	if m != nil {
		return m.Types
	}
	return nil
}

func (m *PlacesNearbyRequest) GetDepth() int32 {
	if m != nil && m.Depth != nil {
		return *m.Depth
	}
	return 0
}

func (m *PlacesNearbyRequest) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *PlacesNearbyRequest) GetStartPage() int32 {
	if m != nil && m.StartPage != nil {
		return *m.StartPage
	}
	return 0
}

func (m *PlacesNearbyRequest) GetFilter() string {
	if m != nil && m.Filter != nil {
		return *m.Filter
	}
	return ""
}

type PlaceUriRequest struct {
	Uri              *string `protobuf:"bytes,1,req,name=uri" json:"uri,omitempty"`
	Depth            *int32  `protobuf:"varint,2,opt,name=depth,def=1" json:"depth,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PlaceUriRequest) Reset()                    { *m = PlaceUriRequest{} }
func (m *PlaceUriRequest) String() string            { return proto.CompactTextString(m) }
func (*PlaceUriRequest) ProtoMessage()               {}
func (*PlaceUriRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{8} }

const Default_PlaceUriRequest_Depth int32 = 1

func (m *PlaceUriRequest) GetUri() string {
	if m != nil && m.Uri != nil {
		return *m.Uri
	}
	return ""
}

func (m *PlaceUriRequest) GetDepth() int32 {
	if m != nil && m.Depth != nil {
		return *m.Depth
	}
	return Default_PlaceUriRequest_Depth
}

type PlaceCodeRequest struct {
	Type             *PlaceCodeRequest_Type `protobuf:"varint,1,req,name=type,enum=pbnavitia.PlaceCodeRequest_Type" json:"type,omitempty"`
	TypeCode         *string                `protobuf:"bytes,2,req,name=type_code,json=typeCode" json:"type_code,omitempty"`
	Code             *string                `protobuf:"bytes,3,req,name=code" json:"code,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *PlaceCodeRequest) Reset()                    { *m = PlaceCodeRequest{} }
func (m *PlaceCodeRequest) String() string            { return proto.CompactTextString(m) }
func (*PlaceCodeRequest) ProtoMessage()               {}
func (*PlaceCodeRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{9} }

func (m *PlaceCodeRequest) GetType() PlaceCodeRequest_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return PlaceCodeRequest_StopArea
}

func (m *PlaceCodeRequest) GetTypeCode() string {
	if m != nil && m.TypeCode != nil {
		return *m.TypeCode
	}
	return ""
}

func (m *PlaceCodeRequest) GetCode() string {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return ""
}

type PTRefRequest struct {
	RequestedType    *NavitiaType `protobuf:"varint,1,req,name=requested_type,json=requestedType,enum=pbnavitia.NavitiaType" json:"requested_type,omitempty"`
	Filter           *string      `protobuf:"bytes,2,req,name=filter" json:"filter,omitempty"`
	Depth            *int32       `protobuf:"varint,3,req,name=depth" json:"depth,omitempty"`
	StartPage        *int32       `protobuf:"varint,4,req,name=start_page,json=startPage" json:"start_page,omitempty"`
	Count            *int32       `protobuf:"varint,5,req,name=count" json:"count,omitempty"`
	ShowCodes        *bool        `protobuf:"varint,7,opt,name=show_codes,json=showCodes" json:"show_codes,omitempty"`
	OdtLevel         *OdtLevel    `protobuf:"varint,8,opt,name=odt_level,json=odtLevel,enum=pbnavitia.OdtLevel" json:"odt_level,omitempty"`
	ForbiddenUri     []string     `protobuf:"bytes,6,rep,name=forbidden_uri,json=forbiddenUri" json:"forbidden_uri,omitempty"`
	Datetime         *uint64      `protobuf:"varint,9,opt,name=datetime" json:"datetime,omitempty"`
	SinceDatetime    *uint64      `protobuf:"varint,10,opt,name=since_datetime,json=sinceDatetime" json:"since_datetime,omitempty"`
	UntilDatetime    *uint64      `protobuf:"varint,11,opt,name=until_datetime,json=untilDatetime" json:"until_datetime,omitempty"`
	DisableGeojson   *bool        `protobuf:"varint,12,opt,name=disable_geojson,json=disableGeojson" json:"disable_geojson,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *PTRefRequest) Reset()                    { *m = PTRefRequest{} }
func (m *PTRefRequest) String() string            { return proto.CompactTextString(m) }
func (*PTRefRequest) ProtoMessage()               {}
func (*PTRefRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{10} }

func (m *PTRefRequest) GetRequestedType() NavitiaType {
	if m != nil && m.RequestedType != nil {
		return *m.RequestedType
	}
	return NavitiaType_LINE
}

func (m *PTRefRequest) GetFilter() string {
	if m != nil && m.Filter != nil {
		return *m.Filter
	}
	return ""
}

func (m *PTRefRequest) GetDepth() int32 {
	if m != nil && m.Depth != nil {
		return *m.Depth
	}
	return 0
}

func (m *PTRefRequest) GetStartPage() int32 {
	if m != nil && m.StartPage != nil {
		return *m.StartPage
	}
	return 0
}

func (m *PTRefRequest) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *PTRefRequest) GetShowCodes() bool {
	if m != nil && m.ShowCodes != nil {
		return *m.ShowCodes
	}
	return false
}

func (m *PTRefRequest) GetOdtLevel() OdtLevel {
	if m != nil && m.OdtLevel != nil {
		return *m.OdtLevel
	}
	return OdtLevel_scheduled
}

func (m *PTRefRequest) GetForbiddenUri() []string {
	if m != nil {
		return m.ForbiddenUri
	}
	return nil
}

func (m *PTRefRequest) GetDatetime() uint64 {
	if m != nil && m.Datetime != nil {
		return *m.Datetime
	}
	return 0
}

func (m *PTRefRequest) GetSinceDatetime() uint64 {
	if m != nil && m.SinceDatetime != nil {
		return *m.SinceDatetime
	}
	return 0
}

func (m *PTRefRequest) GetUntilDatetime() uint64 {
	if m != nil && m.UntilDatetime != nil {
		return *m.UntilDatetime
	}
	return 0
}

func (m *PTRefRequest) GetDisableGeojson() bool {
	if m != nil && m.DisableGeojson != nil {
		return *m.DisableGeojson
	}
	return false
}

type CarCO2EmissionRequest struct {
	Origin           *LocationContext `protobuf:"bytes,1,opt,name=origin" json:"origin,omitempty"`
	Destination      *LocationContext `protobuf:"bytes,2,opt,name=destination" json:"destination,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *CarCO2EmissionRequest) Reset()                    { *m = CarCO2EmissionRequest{} }
func (m *CarCO2EmissionRequest) String() string            { return proto.CompactTextString(m) }
func (*CarCO2EmissionRequest) ProtoMessage()               {}
func (*CarCO2EmissionRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{11} }

func (m *CarCO2EmissionRequest) GetOrigin() *LocationContext {
	if m != nil {
		return m.Origin
	}
	return nil
}

func (m *CarCO2EmissionRequest) GetDestination() *LocationContext {
	if m != nil {
		return m.Destination
	}
	return nil
}

type DirectPathRequest struct {
	Origin              *LocationContext     `protobuf:"bytes,1,opt,name=origin" json:"origin,omitempty"`
	Destination         *LocationContext     `protobuf:"bytes,2,opt,name=destination" json:"destination,omitempty"`
	Datetime            *uint64              `protobuf:"varint,3,opt,name=datetime" json:"datetime,omitempty"`
	Clockwise           *bool                `protobuf:"varint,4,req,name=clockwise" json:"clockwise,omitempty"`
	StreetnetworkParams *StreetNetworkParams `protobuf:"bytes,5,opt,name=streetnetwork_params,json=streetnetworkParams" json:"streetnetwork_params,omitempty"`
	XXX_unrecognized    []byte               `json:"-"`
}

func (m *DirectPathRequest) Reset()                    { *m = DirectPathRequest{} }
func (m *DirectPathRequest) String() string            { return proto.CompactTextString(m) }
func (*DirectPathRequest) ProtoMessage()               {}
func (*DirectPathRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{12} }

func (m *DirectPathRequest) GetOrigin() *LocationContext {
	if m != nil {
		return m.Origin
	}
	return nil
}

func (m *DirectPathRequest) GetDestination() *LocationContext {
	if m != nil {
		return m.Destination
	}
	return nil
}

func (m *DirectPathRequest) GetDatetime() uint64 {
	if m != nil && m.Datetime != nil {
		return *m.Datetime
	}
	return 0
}

func (m *DirectPathRequest) GetClockwise() bool {
	if m != nil && m.Clockwise != nil {
		return *m.Clockwise
	}
	return false
}

func (m *DirectPathRequest) GetStreetnetworkParams() *StreetNetworkParams {
	if m != nil {
		return m.StreetnetworkParams
	}
	return nil
}

type StreetNetworkRoutingMatrixRequest struct {
	Origins          []*LocationContext `protobuf:"bytes,1,rep,name=origins" json:"origins,omitempty"`
	Destinations     []*LocationContext `protobuf:"bytes,2,rep,name=destinations" json:"destinations,omitempty"`
	Mode             *string            `protobuf:"bytes,3,opt,name=mode" json:"mode,omitempty"`
	Speed            *float32           `protobuf:"fixed32,4,opt,name=speed" json:"speed,omitempty"`
	MaxDuration      *int32             `protobuf:"varint,5,opt,name=max_duration,json=maxDuration" json:"max_duration,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *StreetNetworkRoutingMatrixRequest) Reset()         { *m = StreetNetworkRoutingMatrixRequest{} }
func (m *StreetNetworkRoutingMatrixRequest) String() string { return proto.CompactTextString(m) }
func (*StreetNetworkRoutingMatrixRequest) ProtoMessage()    {}
func (*StreetNetworkRoutingMatrixRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{13}
}

func (m *StreetNetworkRoutingMatrixRequest) GetOrigins() []*LocationContext {
	if m != nil {
		return m.Origins
	}
	return nil
}

func (m *StreetNetworkRoutingMatrixRequest) GetDestinations() []*LocationContext {
	if m != nil {
		return m.Destinations
	}
	return nil
}

func (m *StreetNetworkRoutingMatrixRequest) GetMode() string {
	if m != nil && m.Mode != nil {
		return *m.Mode
	}
	return ""
}

func (m *StreetNetworkRoutingMatrixRequest) GetSpeed() float32 {
	if m != nil && m.Speed != nil {
		return *m.Speed
	}
	return 0
}

func (m *StreetNetworkRoutingMatrixRequest) GetMaxDuration() int32 {
	if m != nil && m.MaxDuration != nil {
		return *m.MaxDuration
	}
	return 0
}

type MatchingRoute struct {
	LineUri            *string `protobuf:"bytes,1,opt,name=line_uri,json=lineUri" json:"line_uri,omitempty"`
	StartStopPointUri  *string `protobuf:"bytes,2,opt,name=start_stop_point_uri,json=startStopPointUri" json:"start_stop_point_uri,omitempty"`
	DestinationCodeKey *string `protobuf:"bytes,3,opt,name=destination_code_key,json=destinationCodeKey" json:"destination_code_key,omitempty"`
	DestinationCode    *string `protobuf:"bytes,4,opt,name=destination_code,json=destinationCode" json:"destination_code,omitempty"`
	XXX_unrecognized   []byte  `json:"-"`
}

func (m *MatchingRoute) Reset()                    { *m = MatchingRoute{} }
func (m *MatchingRoute) String() string            { return proto.CompactTextString(m) }
func (*MatchingRoute) ProtoMessage()               {}
func (*MatchingRoute) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{14} }

func (m *MatchingRoute) GetLineUri() string {
	if m != nil && m.LineUri != nil {
		return *m.LineUri
	}
	return ""
}

func (m *MatchingRoute) GetStartStopPointUri() string {
	if m != nil && m.StartStopPointUri != nil {
		return *m.StartStopPointUri
	}
	return ""
}

func (m *MatchingRoute) GetDestinationCodeKey() string {
	if m != nil && m.DestinationCodeKey != nil {
		return *m.DestinationCodeKey
	}
	return ""
}

func (m *MatchingRoute) GetDestinationCode() string {
	if m != nil && m.DestinationCode != nil {
		return *m.DestinationCode
	}
	return ""
}

type Request struct {
	RequestedApi         *API                               `protobuf:"varint,1,req,name=requested_api,json=requestedApi,enum=pbnavitia.API" json:"requested_api,omitempty"`
	Places               *PlacesRequest                     `protobuf:"bytes,2,opt,name=places" json:"places,omitempty"`
	NextStopTimes        *NextStopTimeRequest               `protobuf:"bytes,3,opt,name=next_stop_times,json=nextStopTimes" json:"next_stop_times,omitempty"`
	PlacesNearby         *PlacesNearbyRequest               `protobuf:"bytes,4,opt,name=places_nearby,json=placesNearby" json:"places_nearby,omitempty"`
	Journeys             *JourneysRequest                   `protobuf:"bytes,5,opt,name=journeys" json:"journeys,omitempty"`
	Ptref                *PTRefRequest                      `protobuf:"bytes,6,opt,name=ptref" json:"ptref,omitempty"`
	PlaceUri             *PlaceUriRequest                   `protobuf:"bytes,7,opt,name=place_uri,json=placeUri" json:"place_uri,omitempty"`
	TrafficReports       *TrafficReportsRequest             `protobuf:"bytes,13,opt,name=traffic_reports,json=trafficReports" json:"traffic_reports,omitempty"`
	Calendars            *CalendarsRequest                  `protobuf:"bytes,9,opt,name=calendars" json:"calendars,omitempty"`
	PtObjects            *PtobjectRequest                   `protobuf:"bytes,10,opt,name=pt_objects,json=ptObjects" json:"pt_objects,omitempty"`
	PlaceCode            *PlaceCodeRequest                  `protobuf:"bytes,11,opt,name=place_code,json=placeCode" json:"place_code,omitempty"`
	NearestStopPoints    *NearestStopPointsRequest          `protobuf:"bytes,14,opt,name=nearest_stop_points,json=nearestStopPoints" json:"nearest_stop_points,omitempty"`
	XCurrentDatetime     *uint64                            `protobuf:"varint,15,opt,name=_current_datetime,json=CurrentDatetime" json:"_current_datetime,omitempty"`
	Isochrone            *GraphicalIsochroneRequest         `protobuf:"bytes,16,opt,name=isochrone" json:"isochrone,omitempty"`
	CarCo2Emission       *CarCO2EmissionRequest             `protobuf:"bytes,17,opt,name=car_co2_emission,json=carCo2Emission" json:"car_co2_emission,omitempty"`
	DirectPath           *DirectPathRequest                 `protobuf:"bytes,18,opt,name=direct_path,json=directPath" json:"direct_path,omitempty"`
	HeatMap              *HeatMapRequest                    `protobuf:"bytes,19,opt,name=heat_map,json=heatMap" json:"heat_map,omitempty"`
	SnRoutingMatrix      *StreetNetworkRoutingMatrixRequest `protobuf:"bytes,20,opt,name=sn_routing_matrix,json=snRoutingMatrix" json:"sn_routing_matrix,omitempty"`
	Coord                *GeographicalCoord                 `protobuf:"bytes,21,opt,name=coord" json:"coord,omitempty"`
	MatchingRoutes       *MatchingRoute                     `protobuf:"bytes,23,opt,name=matching_routes,json=matchingRoutes" json:"matching_routes,omitempty"`
	LineReports          *LineReportsRequest                `protobuf:"bytes,24,opt,name=line_reports,json=lineReports" json:"line_reports,omitempty"`
	RequestId            *string                            `protobuf:"bytes,12,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	DisableFeedpublisher *bool                              `protobuf:"varint,22,opt,name=disable_feedpublisher,json=disableFeedpublisher" json:"disable_feedpublisher,omitempty"`
	XXX_unrecognized     []byte                             `json:"-"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{15} }

func (m *Request) GetRequestedApi() API {
	if m != nil && m.RequestedApi != nil {
		return *m.RequestedApi
	}
	return API_places
}

func (m *Request) GetPlaces() *PlacesRequest {
	if m != nil {
		return m.Places
	}
	return nil
}

func (m *Request) GetNextStopTimes() *NextStopTimeRequest {
	if m != nil {
		return m.NextStopTimes
	}
	return nil
}

func (m *Request) GetPlacesNearby() *PlacesNearbyRequest {
	if m != nil {
		return m.PlacesNearby
	}
	return nil
}

func (m *Request) GetJourneys() *JourneysRequest {
	if m != nil {
		return m.Journeys
	}
	return nil
}

func (m *Request) GetPtref() *PTRefRequest {
	if m != nil {
		return m.Ptref
	}
	return nil
}

func (m *Request) GetPlaceUri() *PlaceUriRequest {
	if m != nil {
		return m.PlaceUri
	}
	return nil
}

func (m *Request) GetTrafficReports() *TrafficReportsRequest {
	if m != nil {
		return m.TrafficReports
	}
	return nil
}

func (m *Request) GetCalendars() *CalendarsRequest {
	if m != nil {
		return m.Calendars
	}
	return nil
}

func (m *Request) GetPtObjects() *PtobjectRequest {
	if m != nil {
		return m.PtObjects
	}
	return nil
}

func (m *Request) GetPlaceCode() *PlaceCodeRequest {
	if m != nil {
		return m.PlaceCode
	}
	return nil
}

func (m *Request) GetNearestStopPoints() *NearestStopPointsRequest {
	if m != nil {
		return m.NearestStopPoints
	}
	return nil
}

func (m *Request) GetXCurrentDatetime() uint64 {
	if m != nil && m.XCurrentDatetime != nil {
		return *m.XCurrentDatetime
	}
	return 0
}

func (m *Request) GetIsochrone() *GraphicalIsochroneRequest {
	if m != nil {
		return m.Isochrone
	}
	return nil
}

func (m *Request) GetCarCo2Emission() *CarCO2EmissionRequest {
	if m != nil {
		return m.CarCo2Emission
	}
	return nil
}

func (m *Request) GetDirectPath() *DirectPathRequest {
	if m != nil {
		return m.DirectPath
	}
	return nil
}

func (m *Request) GetHeatMap() *HeatMapRequest {
	if m != nil {
		return m.HeatMap
	}
	return nil
}

func (m *Request) GetSnRoutingMatrix() *StreetNetworkRoutingMatrixRequest {
	if m != nil {
		return m.SnRoutingMatrix
	}
	return nil
}

func (m *Request) GetCoord() *GeographicalCoord {
	if m != nil {
		return m.Coord
	}
	return nil
}

func (m *Request) GetMatchingRoutes() *MatchingRoute {
	if m != nil {
		return m.MatchingRoutes
	}
	return nil
}

func (m *Request) GetLineReports() *LineReportsRequest {
	if m != nil {
		return m.LineReports
	}
	return nil
}

func (m *Request) GetRequestId() string {
	if m != nil && m.RequestId != nil {
		return *m.RequestId
	}
	return ""
}

func (m *Request) GetDisableFeedpublisher() bool {
	if m != nil && m.DisableFeedpublisher != nil {
		return *m.DisableFeedpublisher
	}
	return false
}

type NearestStopPointsRequest struct {
	Place            *string  `protobuf:"bytes,1,opt,name=place" json:"place,omitempty"`
	Mode             *string  `protobuf:"bytes,2,opt,name=mode" json:"mode,omitempty"`
	WalkingSpeed     *float64 `protobuf:"fixed64,3,opt,name=walking_speed,json=walkingSpeed" json:"walking_speed,omitempty"`
	BikeSpeed        *float64 `protobuf:"fixed64,4,opt,name=bike_speed,json=bikeSpeed" json:"bike_speed,omitempty"`
	CarSpeed         *float64 `protobuf:"fixed64,5,opt,name=car_speed,json=carSpeed" json:"car_speed,omitempty"`
	BssSpeed         *float64 `protobuf:"fixed64,6,opt,name=bss_speed,json=bssSpeed" json:"bss_speed,omitempty"`
	Filter           *string  `protobuf:"bytes,7,opt,name=filter" json:"filter,omitempty"`
	MaxDuration      *int32   `protobuf:"varint,8,opt,name=max_duration,json=maxDuration" json:"max_duration,omitempty"`
	Reverse          *bool    `protobuf:"varint,9,opt,name=reverse" json:"reverse,omitempty"`
	CarNoParkSpeed   *float64 `protobuf:"fixed64,10,opt,name=car_no_park_speed,json=carNoParkSpeed" json:"car_no_park_speed,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *NearestStopPointsRequest) Reset()                    { *m = NearestStopPointsRequest{} }
func (m *NearestStopPointsRequest) String() string            { return proto.CompactTextString(m) }
func (*NearestStopPointsRequest) ProtoMessage()               {}
func (*NearestStopPointsRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{16} }

func (m *NearestStopPointsRequest) GetPlace() string {
	if m != nil && m.Place != nil {
		return *m.Place
	}
	return ""
}

func (m *NearestStopPointsRequest) GetMode() string {
	if m != nil && m.Mode != nil {
		return *m.Mode
	}
	return ""
}

func (m *NearestStopPointsRequest) GetWalkingSpeed() float64 {
	if m != nil && m.WalkingSpeed != nil {
		return *m.WalkingSpeed
	}
	return 0
}

func (m *NearestStopPointsRequest) GetBikeSpeed() float64 {
	if m != nil && m.BikeSpeed != nil {
		return *m.BikeSpeed
	}
	return 0
}

func (m *NearestStopPointsRequest) GetCarSpeed() float64 {
	if m != nil && m.CarSpeed != nil {
		return *m.CarSpeed
	}
	return 0
}

func (m *NearestStopPointsRequest) GetBssSpeed() float64 {
	if m != nil && m.BssSpeed != nil {
		return *m.BssSpeed
	}
	return 0
}

func (m *NearestStopPointsRequest) GetFilter() string {
	if m != nil && m.Filter != nil {
		return *m.Filter
	}
	return ""
}

func (m *NearestStopPointsRequest) GetMaxDuration() int32 {
	if m != nil && m.MaxDuration != nil {
		return *m.MaxDuration
	}
	return 0
}

func (m *NearestStopPointsRequest) GetReverse() bool {
	if m != nil && m.Reverse != nil {
		return *m.Reverse
	}
	return false
}

func (m *NearestStopPointsRequest) GetCarNoParkSpeed() float64 {
	if m != nil && m.CarNoParkSpeed != nil {
		return *m.CarNoParkSpeed
	}
	return 0
}

type GraphicalIsochroneRequest struct {
	JourneysRequest  *JourneysRequest `protobuf:"bytes,1,opt,name=journeys_request,json=journeysRequest" json:"journeys_request,omitempty"`
	BoundaryDuration []int32          `protobuf:"varint,2,rep,name=boundary_duration,json=boundaryDuration" json:"boundary_duration,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *GraphicalIsochroneRequest) Reset()                    { *m = GraphicalIsochroneRequest{} }
func (m *GraphicalIsochroneRequest) String() string            { return proto.CompactTextString(m) }
func (*GraphicalIsochroneRequest) ProtoMessage()               {}
func (*GraphicalIsochroneRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{17} }

func (m *GraphicalIsochroneRequest) GetJourneysRequest() *JourneysRequest {
	if m != nil {
		return m.JourneysRequest
	}
	return nil
}

func (m *GraphicalIsochroneRequest) GetBoundaryDuration() []int32 {
	if m != nil {
		return m.BoundaryDuration
	}
	return nil
}

type HeatMapRequest struct {
	JourneysRequest  *JourneysRequest `protobuf:"bytes,1,opt,name=journeys_request,json=journeysRequest" json:"journeys_request,omitempty"`
	Resolution       *int32           `protobuf:"varint,2,opt,name=resolution" json:"resolution,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *HeatMapRequest) Reset()                    { *m = HeatMapRequest{} }
func (m *HeatMapRequest) String() string            { return proto.CompactTextString(m) }
func (*HeatMapRequest) ProtoMessage()               {}
func (*HeatMapRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{18} }

func (m *HeatMapRequest) GetJourneysRequest() *JourneysRequest {
	if m != nil {
		return m.JourneysRequest
	}
	return nil
}

func (m *HeatMapRequest) GetResolution() int32 {
	if m != nil && m.Resolution != nil {
		return *m.Resolution
	}
	return 0
}

type PtobjectRequest struct {
	Q                *string       `protobuf:"bytes,1,req,name=q" json:"q,omitempty"`
	Types            []NavitiaType `protobuf:"varint,2,rep,name=types,enum=pbnavitia.NavitiaType" json:"types,omitempty"`
	Depth            *int32        `protobuf:"varint,3,req,name=depth" json:"depth,omitempty"`
	Count            *int32        `protobuf:"varint,4,req,name=count" json:"count,omitempty"`
	AdminUris        []string      `protobuf:"bytes,5,rep,name=admin_uris,json=adminUris" json:"admin_uris,omitempty"`
	SearchType       *int32        `protobuf:"varint,6,opt,name=search_type,json=searchType" json:"search_type,omitempty"`
	DisableGeojson   *bool         `protobuf:"varint,7,opt,name=disable_geojson,json=disableGeojson" json:"disable_geojson,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *PtobjectRequest) Reset()                    { *m = PtobjectRequest{} }
func (m *PtobjectRequest) String() string            { return proto.CompactTextString(m) }
func (*PtobjectRequest) ProtoMessage()               {}
func (*PtobjectRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{19} }

func (m *PtobjectRequest) GetQ() string {
	if m != nil && m.Q != nil {
		return *m.Q
	}
	return ""
}

func (m *PtobjectRequest) GetTypes() []NavitiaType {
	if m != nil {
		return m.Types
	}
	return nil
}

func (m *PtobjectRequest) GetDepth() int32 {
	if m != nil && m.Depth != nil {
		return *m.Depth
	}
	return 0
}

func (m *PtobjectRequest) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *PtobjectRequest) GetAdminUris() []string {
	if m != nil {
		return m.AdminUris
	}
	return nil
}

func (m *PtobjectRequest) GetSearchType() int32 {
	if m != nil && m.SearchType != nil {
		return *m.SearchType
	}
	return 0
}

func (m *PtobjectRequest) GetDisableGeojson() bool {
	if m != nil && m.DisableGeojson != nil {
		return *m.DisableGeojson
	}
	return false
}

func init() {
	proto.RegisterType((*CalendarsRequest)(nil), "pbnavitia.CalendarsRequest")
	proto.RegisterType((*TrafficReportsRequest)(nil), "pbnavitia.TrafficReportsRequest")
	proto.RegisterType((*LineReportsRequest)(nil), "pbnavitia.LineReportsRequest")
	proto.RegisterType((*PlacesRequest)(nil), "pbnavitia.PlacesRequest")
	proto.RegisterType((*NextStopTimeRequest)(nil), "pbnavitia.NextStopTimeRequest")
	proto.RegisterType((*StreetNetworkParams)(nil), "pbnavitia.StreetNetworkParams")
	proto.RegisterType((*JourneysRequest)(nil), "pbnavitia.JourneysRequest")
	proto.RegisterType((*PlacesNearbyRequest)(nil), "pbnavitia.PlacesNearbyRequest")
	proto.RegisterType((*PlaceUriRequest)(nil), "pbnavitia.PlaceUriRequest")
	proto.RegisterType((*PlaceCodeRequest)(nil), "pbnavitia.PlaceCodeRequest")
	proto.RegisterType((*PTRefRequest)(nil), "pbnavitia.PTRefRequest")
	proto.RegisterType((*CarCO2EmissionRequest)(nil), "pbnavitia.CarCO2EmissionRequest")
	proto.RegisterType((*DirectPathRequest)(nil), "pbnavitia.DirectPathRequest")
	proto.RegisterType((*StreetNetworkRoutingMatrixRequest)(nil), "pbnavitia.StreetNetworkRoutingMatrixRequest")
	proto.RegisterType((*MatchingRoute)(nil), "pbnavitia.MatchingRoute")
	proto.RegisterType((*Request)(nil), "pbnavitia.Request")
	proto.RegisterType((*NearestStopPointsRequest)(nil), "pbnavitia.NearestStopPointsRequest")
	proto.RegisterType((*GraphicalIsochroneRequest)(nil), "pbnavitia.GraphicalIsochroneRequest")
	proto.RegisterType((*HeatMapRequest)(nil), "pbnavitia.HeatMapRequest")
	proto.RegisterType((*PtobjectRequest)(nil), "pbnavitia.PtobjectRequest")
	proto.RegisterEnum("pbnavitia.PlaceCodeRequest_Type", PlaceCodeRequest_Type_name, PlaceCodeRequest_Type_value)
}

func init() { proto.RegisterFile("request.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 2637 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x59, 0xcd, 0x72, 0x1b, 0xc7,
	0x11, 0xce, 0xe2, 0x87, 0x00, 0x1a, 0xbf, 0x1c, 0x4a, 0xd4, 0x4a, 0x96, 0x1d, 0x18, 0xb2, 0x63,
	0x3a, 0xb6, 0x15, 0x19, 0x56, 0x7e, 0xc4, 0xb2, 0x53, 0x96, 0x28, 0xc9, 0x91, 0x63, 0xd1, 0xc8,
	0x92, 0x76, 0x72, 0xdb, 0x1a, 0xec, 0x0e, 0x88, 0x11, 0x17, 0xbb, 0xeb, 0x99, 0x81, 0x48, 0x3e,
	0x41, 0x2a, 0xa7, 0x54, 0xe5, 0x41, 0x72, 0x4b, 0x25, 0x39, 0xe4, 0x92, 0x67, 0x48, 0xe5, 0x01,
	0x72, 0xc8, 0x29, 0x55, 0x79, 0x85, 0xd4, 0xf4, 0xec, 0x2e, 0x16, 0x8b, 0xa5, 0x22, 0xbb, 0x52,
	0x95, 0xe4, 0x44, 0x4c, 0xff, 0xcc, 0x76, 0xf7, 0x74, 0x7f, 0xd3, 0x3d, 0x84, 0xae, 0x60, 0x5f,
	0x2d, 0x99, 0x54, 0xb7, 0x63, 0x11, 0xa9, 0x88, 0xb4, 0xe2, 0x69, 0x48, 0x9f, 0x73, 0xc5, 0xe9,
	0x0d, 0x50, 0x17, 0x31, 0x33, 0xe4, 0xd1, 0x5f, 0x2d, 0x18, 0x1c, 0xd0, 0x80, 0x85, 0x3e, 0x15,
	0xd2, 0x31, 0x1a, 0xe4, 0x55, 0x00, 0xa9, 0xa8, 0x50, 0xae, 0x4f, 0x15, 0xb3, 0xad, 0xa1, 0xb5,
	0xd7, 0x72, 0x5a, 0x48, 0x79, 0x48, 0x15, 0x23, 0xd7, 0xa1, 0xc9, 0x42, 0xdf, 0x30, 0x2b, 0xc8,
	0x6c, 0xb0, 0xd0, 0x47, 0xd6, 0x15, 0xa8, 0xfb, 0x2c, 0x56, 0x73, 0xbb, 0x3a, 0xb4, 0xf6, 0xea,
	0x8e, 0x59, 0xac, 0xf6, 0x8b, 0xe9, 0x09, 0xb3, 0x6b, 0xc8, 0x32, 0xfb, 0x4d, 0xe8, 0x09, 0x2a,
	0x79, 0xd1, 0x32, 0x54, 0x76, 0xdd, 0x28, 0xe1, 0x82, 0xec, 0xc2, 0xd6, 0x8c, 0x07, 0x8a, 0x09,
	0x7b, 0x0b, 0xbf, 0x91, 0xac, 0xc8, 0x9b, 0xd0, 0x9b, 0x45, 0x62, 0xca, 0x7d, 0x9f, 0x85, 0xee,
	0x52, 0x70, 0x69, 0x37, 0x86, 0xd5, 0xbd, 0x96, 0xd3, 0xcd, 0xa8, 0x5f, 0x08, 0x2e, 0x47, 0x7f,
	0xaa, 0xc0, 0xd5, 0x63, 0x41, 0x67, 0x33, 0xee, 0x39, 0x2c, 0x8e, 0x84, 0xca, 0xbc, 0xfb, 0x11,
	0xd8, 0x34, 0x8e, 0x03, 0xee, 0x51, 0xc5, 0xa3, 0xd0, 0x8d, 0x99, 0xe0, 0x91, 0xef, 0x4e, 0xd9,
	0x09, 0x0f, 0xed, 0xe6, 0xd0, 0xda, 0xab, 0x39, 0xbb, 0x39, 0xfe, 0x04, 0xd9, 0x0f, 0x34, 0x97,
	0xdc, 0x85, 0xdd, 0x12, 0x4d, 0x16, 0xfa, 0x76, 0x0b, 0xf5, 0xae, 0x6c, 0xe8, 0x3d, 0x0a, 0x7d,
	0xf2, 0x5d, 0xd8, 0x76, 0xbd, 0xa5, 0x10, 0x2c, 0x34, 0x01, 0x55, 0x7c, 0xc1, 0x6c, 0x40, 0x85,
	0xfe, 0x81, 0xa1, 0x3f, 0x4c, 0xc8, 0xff, 0x43, 0xf1, 0xfb, 0x87, 0x05, 0xe4, 0x33, 0x1e, 0xb2,
	0x42, 0xf0, 0x32, 0x03, 0xad, 0xcb, 0x0d, 0xac, 0x5c, 0x6a, 0x60, 0xb5, 0xdc, 0xc0, 0xda, 0xbf,
	0x31, 0xb0, 0x5e, 0x62, 0xa0, 0x16, 0x93, 0x3c, 0xf4, 0xd8, 0x2a, 0xa6, 0x5b, 0x18, 0xd3, 0x2e,
	0x52, 0xb3, 0x88, 0xbe, 0x09, 0xbd, 0x65, 0xa8, 0x78, 0xb0, 0x12, 0x6b, 0x18, 0x31, 0xa4, 0xa6,
	0x62, 0xa3, 0xdf, 0x5b, 0xd0, 0x9d, 0x04, 0xd4, 0x63, 0x99, 0xa7, 0x1d, 0xb0, 0xbe, 0xb2, 0xad,
	0x61, 0x65, 0xaf, 0xe5, 0x58, 0x5f, 0x91, 0x77, 0xa1, 0xae, 0xab, 0x46, 0xda, 0x95, 0x61, 0x75,
	0xaf, 0x37, 0xde, 0xbd, 0x9d, 0x95, 0xd3, 0xed, 0x43, 0xf3, 0xf7, 0xf8, 0x22, 0x66, 0x8e, 0x11,
	0xca, 0x1f, 0x63, 0x65, 0x15, 0xa5, 0x2c, 0x0c, 0x35, 0x43, 0x35, 0x61, 0x78, 0x15, 0x80, 0xfa,
	0x0b, 0xbe, 0xe6, 0x6a, 0x0b, 0x29, 0xe8, 0xe6, 0xb7, 0xa1, 0x2d, 0x19, 0x15, 0xde, 0xdc, 0xd5,
	0x5b, 0xa3, 0x8f, 0x75, 0x07, 0x0c, 0x49, 0x7f, 0x72, 0xf4, 0xdb, 0x3a, 0xec, 0x1c, 0xb2, 0x73,
	0x75, 0xa4, 0xa2, 0xf8, 0x98, 0x2f, 0x58, 0x6a, 0xff, 0xdb, 0x30, 0xf0, 0x59, 0x4c, 0x85, 0x5a,
	0x0a, 0xe6, 0x26, 0x81, 0x36, 0xee, 0xf4, 0x33, 0xfa, 0xe3, 0x2c, 0xe2, 0x54, 0x08, 0xfe, 0x9c,
	0x06, 0xa9, 0x60, 0x05, 0x05, 0xbb, 0x09, 0x35, 0x11, 0xbb, 0x05, 0xdd, 0x99, 0x88, 0x16, 0xab,
	0x48, 0x56, 0x31, 0x92, 0x1d, 0x4d, 0xcc, 0xe2, 0x7d, 0x03, 0x9a, 0xfe, 0x52, 0x60, 0x09, 0x24,
	0x7e, 0x66, 0xeb, 0x55, 0x58, 0xea, 0xf9, 0xb0, 0xbc, 0x0e, 0x9d, 0x70, 0xea, 0x4a, 0x15, 0xc5,
	0x7a, 0x03, 0x9d, 0x8e, 0x9a, 0xd9, 0x0e, 0xa7, 0x47, 0x29, 0x89, 0xbc, 0x03, 0xdb, 0x3c, 0x54,
	0x4c, 0xcc, 0xa8, 0xc7, 0xdc, 0xe7, 0x4c, 0x48, 0xbd, 0x7b, 0x13, 0x43, 0x31, 0xc8, 0x18, 0x5f,
	0x1a, 0x7a, 0x21, 0x19, 0x5b, 0xb8, 0x5b, 0x59, 0x32, 0x42, 0xfe, 0x14, 0xde, 0x80, 0xde, 0x82,
	0x9e, 0xa3, 0x6b, 0xae, 0x31, 0xa3, 0x8d, 0xdb, 0x77, 0x16, 0xf4, 0x5c, 0xfb, 0x76, 0x8c, 0x76,
	0xe8, 0x08, 0xe4, 0x53, 0xd3, 0xee, 0xe0, 0x71, 0x75, 0xf2, 0x99, 0xa9, 0x23, 0xe0, 0x25, 0x88,
	0x6a, 0x77, 0x31, 0xb3, 0xb3, 0x35, 0xda, 0x36, 0x8f, 0xce, 0x5c, 0x2f, 0xf2, 0x99, 0xb4, 0x7b,
	0x43, 0x6b, 0xaf, 0xe9, 0xb4, 0x34, 0xe5, 0x40, 0x13, 0x4a, 0x92, 0xb5, 0x5f, 0x92, 0xac, 0xe5,
	0x88, 0x32, 0x28, 0x47, 0x94, 0x7b, 0xd0, 0x13, 0x8c, 0x06, 0xfa, 0xb7, 0x1b, 0xb0, 0xe7, 0x2c,
	0xb0, 0xb7, 0x87, 0xd6, 0x5e, 0x6f, 0x4c, 0x72, 0x19, 0xec, 0x1c, 0x7f, 0xa6, 0x39, 0x4e, 0x37,
	0x95, 0xc4, 0x25, 0x79, 0x17, 0x08, 0x57, 0x6c, 0x21, 0x35, 0xd0, 0xb9, 0xd2, 0x9b, 0x33, 0x7f,
	0x19, 0x30, 0x9b, 0x24, 0x61, 0xd7, 0x9c, 0x09, 0x13, 0x47, 0x09, 0x9d, 0xbc, 0x05, 0x7d, 0x9f,
	0x4b, 0x3a, 0x0d, 0x98, 0x7b, 0xc2, 0xa2, 0x67, 0x32, 0x0a, 0xed, 0x1d, 0xf4, 0xaf, 0x97, 0x90,
	0x3f, 0x31, 0x54, 0x4c, 0xd8, 0x23, 0x25, 0x18, 0x53, 0x87, 0x4c, 0x9d, 0x45, 0xe2, 0x74, 0x42,
	0x05, 0x5d, 0x60, 0xa6, 0x47, 0x82, 0x9f, 0xf0, 0xd0, 0x5d, 0x44, 0x7e, 0x7a, 0xed, 0x80, 0x21,
	0x3d, 0x8d, 0x7c, 0x66, 0x32, 0x5a, 0x2a, 0x1e, 0x1a, 0xf8, 0x45, 0x29, 0x73, 0xff, 0xf4, 0x73,
	0x74, 0x14, 0xbd, 0x05, 0xdd, 0x33, 0x1a, 0x9c, 0xf2, 0xf0, 0xc4, 0x95, 0x31, 0x63, 0x3e, 0xa6,
	0xaa, 0xe5, 0x74, 0x12, 0xe2, 0x91, 0xa6, 0xe9, 0xc3, 0x98, 0xf2, 0x53, 0x96, 0x48, 0xd4, 0x51,
	0xa2, 0xa5, 0x29, 0x86, 0xfd, 0x0a, 0xb4, 0x3c, 0x2a, 0x12, 0x6e, 0x03, 0xb9, 0x4d, 0x8f, 0x8a,
	0x8c, 0x39, 0x95, 0x32, 0x61, 0xb6, 0x0c, 0x73, 0x2a, 0xa5, 0x61, 0xde, 0x82, 0x6e, 0xe2, 0x49,
	0x52, 0x4e, 0x6d, 0xb4, 0xb2, 0x63, 0x88, 0x49, 0x35, 0xbd, 0x07, 0x24, 0xef, 0x4d, 0x22, 0xd9,
	0x41, 0xc9, 0xed, 0x1c, 0x27, 0x11, 0xdf, 0x87, 0x1b, 0x3a, 0x41, 0x53, 0xaf, 0xd2, 0x9a, 0x72,
	0x55, 0xe4, 0xc6, 0x0a, 0xf3, 0xac, 0xee, 0xec, 0x2e, 0xe8, 0xf9, 0xcf, 0x8d, 0xc0, 0xc3, 0x84,
	0x7f, 0x1c, 0x4d, 0x14, 0xb9, 0x0b, 0xd7, 0xb4, 0x2e, 0x3a, 0x5b, 0x50, 0xec, 0xa1, 0xe2, 0xce,
	0x82, 0x9e, 0x3f, 0xe0, 0xa7, 0x6c, 0x4d, 0x6b, 0x0c, 0xbb, 0xa8, 0x25, 0x65, 0x51, 0xa9, 0x8f,
	0x4a, 0x44, 0x2b, 0x49, 0x59, 0xa6, 0xa3, 0xe3, 0x56, 0xd0, 0x19, 0x64, 0x3a, 0x07, 0x54, 0x14,
	0x74, 0x08, 0x0b, 0x31, 0x6f, 0x7c, 0x2e, 0x98, 0xa7, 0xeb, 0x56, 0xcd, 0x31, 0x4b, 0x9b, 0xfb,
	0x35, 0x25, 0x96, 0xcc, 0x19, 0x18, 0xfe, 0x43, 0x64, 0x4f, 0xa8, 0x9a, 0x93, 0xb7, 0x61, 0x5b,
	0x7f, 0x23, 0x8c, 0xdc, 0x98, 0x8a, 0xd3, 0xe4, 0x18, 0x08, 0x1e, 0x43, 0xcf, 0xa3, 0xe2, 0x30,
	0x9a, 0x50, 0x71, 0x6a, 0x0e, 0xe3, 0x63, 0x78, 0x2d, 0x35, 0x29, 0x15, 0x2f, 0x98, 0xb6, 0x83,
	0xa6, 0xd9, 0xc6, 0x34, 0xa3, 0x9a, 0x37, 0x70, 0xf4, 0xbb, 0x26, 0xf4, 0x3f, 0x8d, 0x96, 0x22,
	0x64, 0x17, 0xd9, 0xed, 0x30, 0x86, 0x2d, 0x73, 0x9a, 0xb6, 0x35, 0xac, 0xee, 0xb5, 0xc7, 0x37,
	0x72, 0xe5, 0xf4, 0x59, 0x64, 0x5a, 0x80, 0x83, 0x28, 0x54, 0xec, 0x5c, 0x39, 0x89, 0x24, 0xf9,
	0x10, 0xda, 0xb9, 0x73, 0xc5, 0x9b, 0xe4, 0xc5, 0x8a, 0x79, 0x71, 0x72, 0x13, 0x5a, 0x69, 0xad,
	0x4b, 0xbb, 0x3a, 0xac, 0xee, 0xd5, 0x9c, 0x15, 0x41, 0x73, 0xbd, 0x20, 0xf2, 0x4e, 0xcf, 0xb8,
	0x64, 0x88, 0xbb, 0x4d, 0x67, 0x45, 0x78, 0xd9, 0x2b, 0xf5, 0x75, 0xe8, 0x20, 0x08, 0xa6, 0xf8,
	0xbd, 0x65, 0x90, 0x58, 0x43, 0x60, 0x0a, 0xe1, 0xb7, 0xa0, 0xab, 0x45, 0x94, 0xa0, 0xa1, 0x9c,
	0x31, 0x91, 0xa2, 0xb5, 0xd6, 0x3b, 0x4e, 0x69, 0xe4, 0x67, 0x70, 0x45, 0x62, 0x81, 0x87, 0xa6,
	0xc0, 0x75, 0xd4, 0xe9, 0x42, 0x22, 0x62, 0xb7, 0xc7, 0xaf, 0xe5, 0x3c, 0x2e, 0xc1, 0x01, 0x67,
	0x67, 0x4d, 0x37, 0x01, 0x87, 0x37, 0x01, 0xce, 0xe6, 0x8c, 0x05, 0xde, 0x9c, 0x72, 0x81, 0x05,
	0xd7, 0xdc, 0xaf, 0xcf, 0x68, 0x20, 0x99, 0x93, 0x63, 0x14, 0xf0, 0xb5, 0x5d, 0xc4, 0x57, 0x1b,
	0x1a, 0x3e, 0x53, 0x94, 0x07, 0x12, 0x2b, 0xa6, 0xe9, 0xa4, 0xcb, 0x12, 0x98, 0xec, 0xbd, 0x2c,
	0x4c, 0xde, 0x85, 0xab, 0x3a, 0x24, 0xec, 0x5c, 0x09, 0xea, 0x4a, 0xe6, 0x45, 0xa1, 0xef, 0xc6,
	0x54, 0x4a, 0x53, 0x26, 0xfb, 0xd6, 0x1d, 0xcc, 0xfa, 0x47, 0x9a, 0x7d, 0x84, 0xdc, 0x09, 0x95,
	0x92, 0x7c, 0x04, 0x76, 0x5a, 0xcb, 0x69, 0x30, 0xdd, 0x98, 0x85, 0x34, 0x50, 0x17, 0xa6, 0x56,
	0xf6, 0xab, 0xef, 0x8f, 0xef, 0x38, 0xbb, 0x89, 0x50, 0x1a, 0xdc, 0x89, 0x11, 0x21, 0x77, 0xe0,
	0x4a, 0xae, 0x5a, 0x56, 0x47, 0xb6, 0x6d, 0xca, 0xcc, 0xcf, 0x4a, 0x25, 0x3b, 0xb9, 0x9b, 0x09,
	0xda, 0xf1, 0x50, 0xe7, 0x3c, 0x41, 0xf7, 0x9b, 0x9a, 0xf2, 0x24, 0x9c, 0x98, 0x2e, 0x24, 0x08,
	0xa2, 0x33, 0xe6, 0xbb, 0xdc, 0xb7, 0x77, 0x92, 0x2e, 0xc4, 0x50, 0x9e, 0xf8, 0xe4, 0x1d, 0x18,
	0xcc, 0x04, 0x63, 0xae, 0xa0, 0x3e, 0x5f, 0x4a, 0x57, 0xdf, 0xf8, 0xf6, 0x95, 0xd4, 0xbd, 0x9e,
	0x66, 0x39, 0xc8, 0x79, 0x2c, 0xa2, 0x05, 0x79, 0x0b, 0x7a, 0x79, 0x61, 0x15, 0xd9, 0x57, 0x53,
	0xd1, 0xce, 0x4a, 0xf4, 0x38, 0x22, 0xdf, 0x81, 0xbe, 0x6e, 0x7c, 0xc2, 0xa9, 0xfb, 0x2c, 0x29,
	0x2f, 0x7b, 0x17, 0xed, 0xef, 0x2e, 0x78, 0x78, 0x38, 0x4d, 0x6b, 0x8e, 0xdc, 0x87, 0x57, 0x42,
	0x7e, 0x32, 0x57, 0xee, 0x54, 0x7f, 0x1b, 0xf1, 0xd0, 0xd5, 0x21, 0x9f, 0x51, 0x4f, 0x45, 0xc2,
	0xbe, 0xa6, 0xeb, 0x7e, 0xbf, 0xfa, 0xfe, 0xed, 0xef, 0x3b, 0xd7, 0x50, 0xee, 0xc1, 0x52, 0x1a,
	0xd4, 0x7c, 0x4a, 0xcf, 0x1f, 0xa3, 0x0c, 0x39, 0x80, 0x9b, 0x1b, 0x5b, 0x4c, 0xa9, 0x64, 0xe9,
	0x1e, 0xb6, 0x09, 0xf9, 0xbd, 0x3b, 0x77, 0x1c, 0x7b, 0x7d, 0x8f, 0x07, 0x54, 0xb2, 0x64, 0x93,
	0xf7, 0x80, 0xe8, 0x63, 0x9f, 0x09, 0xba, 0x58, 0x01, 0xa9, 0x7d, 0x7d, 0x68, 0xed, 0x75, 0x9d,
	0xed, 0x8c, 0x93, 0x46, 0x7c, 0xf4, 0x17, 0x0b, 0x76, 0x4c, 0x4f, 0x79, 0xc8, 0xa8, 0x98, 0x5e,
	0xa4, 0xd8, 0x31, 0x80, 0xaa, 0xee, 0x1d, 0x4c, 0x33, 0xa6, 0x7f, 0x62, 0xd3, 0xc4, 0xa5, 0xa2,
	0xa1, 0xc7, 0xb0, 0xf5, 0xb2, 0x9c, 0x6c, 0xbd, 0xea, 0x3c, 0xab, 0x5f, 0xab, 0xf3, 0xac, 0x95,
	0x76, 0x9e, 0xf5, 0x42, 0xe7, 0x99, 0x6b, 0x94, 0xb6, 0x8a, 0x8d, 0xd2, 0xaa, 0x3f, 0x6f, 0xe4,
	0xfb, 0xf3, 0xd1, 0x87, 0xd0, 0x47, 0xaf, 0xbe, 0x10, 0xfc, 0x72, 0x8f, 0xae, 0xa5, 0x76, 0x54,
	0xcc, 0xd1, 0xbf, 0x9f, 0x98, 0x32, 0xfa, 0xa7, 0x05, 0x03, 0x54, 0xd7, 0x15, 0x99, 0xea, 0xdf,
	0x85, 0x1a, 0x76, 0xb7, 0x7a, 0x83, 0xde, 0x78, 0x98, 0x73, 0xb1, 0x28, 0x7a, 0x1b, 0x9d, 0x45,
	0x69, 0x7d, 0x07, 0xeb, 0xbf, 0x58, 0xec, 0x49, 0xc7, 0xda, 0xd4, 0x04, 0x2d, 0x4e, 0x08, 0xd4,
	0x90, 0x5e, 0x45, 0x3a, 0xfe, 0x1e, 0x29, 0xa8, 0x69, 0x75, 0xd2, 0x81, 0xa6, 0xee, 0x2d, 0xef,
	0x0b, 0x46, 0x07, 0xdf, 0x22, 0x6d, 0x68, 0x24, 0x00, 0x34, 0xb0, 0xf4, 0xe2, 0x20, 0x5a, 0xc4,
	0x34, 0xbc, 0x18, 0x54, 0x48, 0x13, 0x6a, 0x7a, 0x04, 0x1a, 0x54, 0x49, 0x0b, 0xea, 0x4e, 0xb4,
	0x54, 0x6c, 0x50, 0x23, 0x04, 0x7a, 0x5f, 0xb2, 0x39, 0xf7, 0x02, 0x96, 0xe4, 0xe7, 0xa0, 0x4e,
	0xba, 0xd0, 0xd2, 0x1b, 0x4e, 0x22, 0x1e, 0xaa, 0xc1, 0x96, 0xde, 0x3f, 0x9d, 0xa9, 0x07, 0x8d,
	0xd1, 0x1f, 0xab, 0xd0, 0x99, 0x1c, 0x3b, 0x6c, 0x96, 0x7a, 0xfb, 0x91, 0xc6, 0x1a, 0xfc, 0xc9,
	0x7c, 0x37, 0xe7, 0xf7, 0x65, 0x47, 0xdb, 0xcd, 0xa4, 0xd1, 0xfa, 0xd5, 0xb9, 0x18, 0x9f, 0xd3,
	0xb9, 0xa9, 0x7c, 0xe8, 0x28, 0xce, 0x8e, 0x95, 0x4b, 0x67, 0xc7, 0x42, 0x66, 0xac, 0x60, 0xb4,
	0x51, 0x84, 0xd1, 0x3b, 0xd0, 0x8a, 0x7c, 0x95, 0xe0, 0x64, 0x13, 0x71, 0x72, 0x27, 0x67, 0xfb,
	0xe7, 0xbe, 0x32, 0x40, 0xd9, 0x8c, 0x92, 0x5f, 0x9b, 0x8d, 0xf3, 0x56, 0x79, 0xe3, 0x9c, 0x75,
	0xb3, 0x66, 0xa0, 0xce, 0xd6, 0x25, 0xd3, 0x1e, 0xbc, 0xdc, 0xb4, 0xd7, 0x2e, 0x6b, 0xa0, 0x4b,
	0x7a, 0xd5, 0x4e, 0x69, 0xaf, 0xfa, 0x2b, 0x0b, 0xae, 0x1e, 0x50, 0x71, 0xf0, 0xf9, 0xf8, 0xd1,
	0x82, 0x4b, 0x3d, 0x5e, 0x94, 0x35, 0x00, 0xd6, 0x37, 0x6d, 0x00, 0xac, 0xaf, 0xd1, 0x00, 0x8c,
	0x7e, 0x53, 0x81, 0xed, 0x55, 0x0b, 0xf4, 0x5f, 0xb3, 0x63, 0xed, 0x98, 0xaa, 0x85, 0x63, 0x7a,
	0x71, 0x1b, 0x72, 0x59, 0x5f, 0x50, 0xff, 0xc6, 0x7d, 0xc1, 0xe8, 0xef, 0x16, 0xbc, 0xbe, 0x26,
	0xac, 0xcb, 0x94, 0x87, 0x27, 0x4f, 0xa9, 0x12, 0xfc, 0x7c, 0x85, 0x2f, 0x0d, 0xe3, 0xba, 0x7c,
	0x89, 0x76, 0x2d, 0x15, 0x25, 0x3f, 0x86, 0x4e, 0xce, 0x6f, 0xf9, 0x12, 0x0d, 0xdb, 0x9a, 0xbc,
	0x86, 0xa0, 0x85, 0x81, 0x20, 0x0d, 0x9f, 0xf8, 0x5b, 0xd7, 0x9b, 0x69, 0x56, 0x6b, 0x43, 0x6b,
	0xaf, 0xe2, 0x98, 0xc5, 0x46, 0xe3, 0x65, 0x1e, 0x72, 0xf2, 0x8d, 0xd7, 0xe8, 0x0f, 0x16, 0x74,
	0x9f, 0x52, 0xe5, 0xcd, 0x79, 0x78, 0x82, 0x50, 0x44, 0xae, 0x43, 0x33, 0xe0, 0x21, 0x73, 0x0d,
	0xf2, 0xe2, 0x33, 0x9c, 0x5e, 0xeb, 0x4a, 0xfa, 0x9e, 0x0e, 0xb4, 0x2e, 0x7a, 0x3d, 0x55, 0xbb,
	0xb1, 0x86, 0x25, 0x14, 0x33, 0xd3, 0xd2, 0x36, 0xf2, 0x32, 0xc0, 0xd2, 0x0a, 0xba, 0x9d, 0xc8,
	0x0d, 0x23, 0xba, 0xee, 0xdd, 0x53, 0x76, 0x91, 0x98, 0x9e, 0x1f, 0x54, 0x34, 0x02, 0xfc, 0x94,
	0x5d, 0x14, 0x87, 0x31, 0xc4, 0xda, 0xda, 0xc6, 0x30, 0xa6, 0xa5, 0x47, 0xbf, 0x6c, 0x43, 0x23,
	0x3d, 0x89, 0x0f, 0x60, 0x85, 0x66, 0x2e, 0x8d, 0x79, 0x02, 0x7d, 0xbd, 0x5c, 0x50, 0xef, 0x4f,
	0x9e, 0x38, 0x9d, 0x4c, 0xe8, 0x7e, 0xac, 0xad, 0xdb, 0x8a, 0xf1, 0x1e, 0x4d, 0x52, 0xd5, 0x2e,
	0x5e, 0x10, 0x69, 0x5b, 0xee, 0x24, 0x72, 0xe4, 0x31, 0xf4, 0x43, 0x76, 0x9e, 0xf8, 0x9f, 0xb6,
	0xcc, 0xc5, 0x24, 0x2b, 0x79, 0x35, 0x71, 0xba, 0x61, 0x8e, 0x28, 0xc9, 0x01, 0x74, 0xcd, 0x8e,
	0x6e, 0x88, 0x57, 0x38, 0xba, 0xb8, 0xbe, 0x4b, 0xc9, 0x0d, 0xef, 0x74, 0xe2, 0x1c, 0x91, 0xfc,
	0x00, 0x9a, 0x59, 0x7f, 0x53, 0xdf, 0xa8, 0xb5, 0xc2, 0x64, 0xe1, 0x64, 0xb2, 0xe4, 0x3d, 0xa8,
	0xc7, 0x4a, 0xb0, 0x19, 0x3e, 0xfa, 0xb4, 0xc7, 0xd7, 0xf2, 0x1f, 0xcd, 0xdd, 0x27, 0x8e, 0x91,
	0x22, 0x3f, 0x84, 0x16, 0x7e, 0x16, 0x4f, 0xba, 0xb1, 0xf1, 0x9d, 0xc2, 0x9d, 0xed, 0x34, 0xe3,
	0x84, 0x40, 0x9e, 0x40, 0x5f, 0x99, 0x97, 0x52, 0x57, 0x98, 0xd7, 0x3e, 0xec, 0x8e, 0xdb, 0x6b,
	0x17, 0x71, 0xe9, 0x5b, 0xaa, 0xd3, 0x53, 0x6b, 0x64, 0x72, 0x4f, 0xcf, 0xcc, 0xc9, 0x6b, 0x32,
	0x62, 0x78, 0x7b, 0xfc, 0x4a, 0x6e, 0x93, 0xe2, 0x4b, 0xb3, 0xb3, 0x92, 0x26, 0xf7, 0x00, 0x62,
	0xe5, 0x46, 0xd3, 0x67, 0xcc, 0x53, 0x12, 0xd1, 0xbd, 0x60, 0xbf, 0x32, 0xbc, 0x4c, 0x35, 0x56,
	0x9f, 0x1b, 0x61, 0xb2, 0x0f, 0x60, 0x3c, 0xc7, 0x2c, 0x6c, 0x6f, 0x7c, 0xb6, 0xd8, 0x44, 0x38,
	0x26, 0x50, 0xd8, 0x27, 0x1c, 0xc1, 0x8e, 0x3e, 0x5a, 0x26, 0xf3, 0xc5, 0x62, 0x9e, 0x66, 0xda,
	0xe3, 0x5b, 0x6b, 0xd9, 0x82, 0x52, 0x59, 0xd9, 0x64, 0x3e, 0x6c, 0x87, 0x45, 0x4e, 0xf9, 0x03,
	0x4d, 0xbf, 0xfc, 0x81, 0xe6, 0x01, 0xb4, 0xb8, 0x8c, 0xbc, 0xb9, 0x88, 0x42, 0xf3, 0x88, 0xd3,
	0x1e, 0xbf, 0x91, 0xfb, 0xec, 0x27, 0x82, 0xc6, 0x73, 0xee, 0xd1, 0xe0, 0x49, 0x2a, 0x94, 0x39,
	0x91, 0xa9, 0x91, 0x4f, 0x61, 0xa0, 0xe7, 0x5b, 0x2f, 0x1a, 0xbb, 0x2c, 0xb9, 0xa7, 0x70, 0x12,
	0x58, 0x3f, 0xc2, 0xd2, 0x8b, 0x0c, 0xe7, 0xe5, 0x83, 0x28, 0x23, 0x93, 0x8f, 0xa0, 0x9d, 0x9f,
	0xc3, 0x09, 0x6e, 0x73, 0x33, 0xb7, 0xcd, 0xc6, 0x1d, 0xe4, 0xc0, 0x6a, 0xdc, 0x20, 0x77, 0xa1,
	0x39, 0x67, 0x54, 0xb9, 0x0b, 0x1a, 0xe3, 0x60, 0xdd, 0x1e, 0x5f, 0xcf, 0xe9, 0xfe, 0x84, 0x51,
	0xf5, 0x94, 0xc6, 0xa9, 0x62, 0x63, 0x6e, 0xd6, 0xe4, 0x17, 0xb0, 0x2d, 0x43, 0x57, 0x18, 0xec,
	0x76, 0x17, 0x08, 0xde, 0x38, 0x60, 0xb4, 0xc7, 0xef, 0x5e, 0x76, 0x2d, 0x94, 0x21, 0xbd, 0xd3,
	0x97, 0xe1, 0x1a, 0x9d, 0x8c, 0x75, 0x83, 0x13, 0x09, 0x1f, 0x67, 0x90, 0x75, 0x47, 0x3e, 0x61,
	0xd1, 0x49, 0x1a, 0xdd, 0x03, 0x2d, 0xe3, 0x18, 0x51, 0x72, 0x1f, 0xfa, 0x8b, 0x04, 0x6a, 0xd1,
	0x26, 0x26, 0x71, 0xc6, 0x58, 0x07, 0x9e, 0x35, 0x30, 0x76, 0x7a, 0x8b, 0xfc, 0x52, 0x92, 0x8f,
	0xa1, 0x83, 0xe0, 0x9c, 0x16, 0x94, 0x8d, 0xfa, 0xaf, 0xe6, 0xef, 0x8e, 0x8d, 0xc7, 0x75, 0xa7,
	0x1d, 0xac, 0x68, 0xba, 0x07, 0x4b, 0x40, 0x50, 0x4f, 0x64, 0xe6, 0x5d, 0xa8, 0x95, 0x50, 0x9e,
	0xf8, 0xe4, 0x03, 0xb8, 0x9a, 0xb6, 0x30, 0x33, 0xc6, 0xfc, 0x78, 0x39, 0x0d, 0xb8, 0x9c, 0x33,
	0x81, 0x13, 0x54, 0xd3, 0xb9, 0x92, 0x30, 0x1f, 0xe7, 0x79, 0xa3, 0x3f, 0x57, 0xc0, 0xbe, 0x2c,
	0x8f, 0xf5, 0xd5, 0x84, 0x65, 0x91, 0x5c, 0x26, 0x66, 0x91, 0x5d, 0x62, 0x95, 0xdc, 0x25, 0xf6,
	0x0d, 0x5e, 0xd7, 0x6a, 0x2f, 0x7c, 0x5d, 0xab, 0xbf, 0xe8, 0x75, 0x6d, 0xab, 0xf0, 0xba, 0x76,
	0xc9, 0x5c, 0xb2, 0x71, 0x89, 0x36, 0x37, 0x2e, 0x51, 0x3d, 0xff, 0x0b, 0xf6, 0x9c, 0x09, 0x69,
	0x1a, 0xcc, 0xa6, 0x93, 0x2e, 0xcb, 0x1f, 0x94, 0xa0, 0xec, 0x41, 0x69, 0xf4, 0x6b, 0x0b, 0xae,
	0x5f, 0x5a, 0x95, 0xe4, 0x11, 0x0c, 0x52, 0x00, 0x77, 0x93, 0xd3, 0x2a, 0xe9, 0xcc, 0x8a, 0xa0,
	0xdf, 0x7f, 0x56, 0x78, 0x5f, 0x7a, 0x07, 0xb6, 0xa7, 0xd1, 0x52, 0x23, 0xe3, 0xc5, 0xca, 0x23,
	0xdd, 0x80, 0xd4, 0x9d, 0x41, 0xca, 0xc8, 0x7a, 0x83, 0x33, 0xe8, 0xad, 0x17, 0xd6, 0x7f, 0xca,
	0x8a, 0xd7, 0x74, 0x0e, 0xca, 0x28, 0x58, 0x66, 0x7d, 0x62, 0xdd, 0xc9, 0x51, 0x46, 0x7f, 0xb3,
	0xa0, 0x5f, 0xc0, 0xe5, 0xff, 0x97, 0xff, 0x9b, 0x94, 0xcd, 0x00, 0x8d, 0xb2, 0x19, 0xe0, 0x5f,
	0x01, 0x00, 0x00, 0xff, 0xff, 0x25, 0x5e, 0xc0, 0x42, 0x49, 0x1d, 0x00, 0x00,
}
