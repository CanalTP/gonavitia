// Code generated by protoc-gen-go. DO NOT EDIT.
// source: type.proto

/*
Package pbnavitia is a generated protocol buffer package.

It is generated from these files:
	type.proto
	request.proto
	response.proto
	stat.proto

It has these top-level messages:
	Code
	Period
	Property
	Channel
	MessageContent
	Message
	Severity
	StopTimeUpdate
	LineSectionImpact
	ImpactedObject
	DisruptionProperty
	Impact
	GeographicalCoord
	AdministrativeRegion
	Comment
	StopArea
	StopPoint
	LineString
	MultiLineString
	Line
	LineGroup
	Route
	JourneyPattern
	Destination
	Note
	Properties
	HasEquipments
	StopDateTime
	StopTime
	VehicleJourney
	Trip
	JourneyPatternPoint
	Contributor
	Dataset
	PoiType
	Poi
	Network
	PhysicalMode
	CommercialMode
	Connection
	Company
	Address
	CalendarException
	CalendarPeriod
	WeekPattern
	Calendar
	ValidityPattern
	LocationContext
	PtObject
	FareZone
	CalendarsRequest
	TrafficReportsRequest
	LineReportsRequest
	PlacesRequest
	NextStopTimeRequest
	StreetNetworkParams
	JourneysRequest
	PlacesNearbyRequest
	PlaceUriRequest
	PlaceCodeRequest
	PTRefRequest
	CarCO2EmissionRequest
	DirectPathRequest
	StreetNetworkRoutingMatrixRequest
	MatchingRoute
	Request
	NearestStopPointsRequest
	GraphicalIsochroneRequest
	HeatMapRequest
	PtobjectRequest
	PathItem
	StreetNetwork
	PtDisplayInfo
	Uris
	Cost
	Ticket
	Fare
	Co2Emission
	Durations
	Distances
	IndividualRating
	IndividualInformation
	SeatsDescription
	ExternalLink
	RidesharingInformation
	FeedPublisher
	Section
	Journey
	Planner
	GeoStatus
	Status
	ScheduleStopTime
	RouteScheduleRow
	Header
	Table
	RouteSchedule
	Passage
	RoutePoint
	BoardItem
	DepartureBoard
	Load
	Metadatas
	Pagination
	StopSchedule
	Error
	TrafficReports
	LineReport
	LinkArgs
	Link
	GraphicalIsochrone
	HeatMap
	RoutingElement
	StreetNetworkRoutingRow
	StreetNetworkRoutingMatrix
	Response
	NearestStopPoint
	StatParameter
	Filter
	InterpretedParameter
	StatError
	StatCoverage
	StatRequest
	JourneyRequest
	StatJourneyResponse
	StatJourneySection
	StatInfoResponse
*/
package pbnavitia

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type NavitiaType int32

const (
	NavitiaType_LINE                  NavitiaType = 1
	NavitiaType_JOURNEY_PATTERN       NavitiaType = 2
	NavitiaType_VEHICLE_JOURNEY       NavitiaType = 3
	NavitiaType_STOP_POINT            NavitiaType = 4
	NavitiaType_STOP_AREA             NavitiaType = 5
	NavitiaType_NETWORK               NavitiaType = 6
	NavitiaType_PHYSICAL_MODE         NavitiaType = 7
	NavitiaType_COMMERCIAL_MODE       NavitiaType = 8
	NavitiaType_CONNECTION            NavitiaType = 9
	NavitiaType_JOURNEY_PATTERN_POINT NavitiaType = 10
	NavitiaType_COMPANY               NavitiaType = 11
	NavitiaType_ROUTE                 NavitiaType = 12
	NavitiaType_POI                   NavitiaType = 13
	NavitiaType_CONTRIBUTOR           NavitiaType = 16
	NavitiaType_ADDRESS               NavitiaType = 18
	NavitiaType_POITYPE               NavitiaType = 23
	NavitiaType_ADMINISTRATIVE_REGION NavitiaType = 22
	NavitiaType_CALENDAR              NavitiaType = 25
	NavitiaType_LINE_GROUP            NavitiaType = 26
	NavitiaType_IMPACT                NavitiaType = 27
	NavitiaType_DATASET               NavitiaType = 28
	NavitiaType_TRIP                  NavitiaType = 29
)

var NavitiaType_name = map[int32]string{
	1:  "LINE",
	2:  "JOURNEY_PATTERN",
	3:  "VEHICLE_JOURNEY",
	4:  "STOP_POINT",
	5:  "STOP_AREA",
	6:  "NETWORK",
	7:  "PHYSICAL_MODE",
	8:  "COMMERCIAL_MODE",
	9:  "CONNECTION",
	10: "JOURNEY_PATTERN_POINT",
	11: "COMPANY",
	12: "ROUTE",
	13: "POI",
	16: "CONTRIBUTOR",
	18: "ADDRESS",
	23: "POITYPE",
	22: "ADMINISTRATIVE_REGION",
	25: "CALENDAR",
	26: "LINE_GROUP",
	27: "IMPACT",
	28: "DATASET",
	29: "TRIP",
}
var NavitiaType_value = map[string]int32{
	"LINE":                  1,
	"JOURNEY_PATTERN":       2,
	"VEHICLE_JOURNEY":       3,
	"STOP_POINT":            4,
	"STOP_AREA":             5,
	"NETWORK":               6,
	"PHYSICAL_MODE":         7,
	"COMMERCIAL_MODE":       8,
	"CONNECTION":            9,
	"JOURNEY_PATTERN_POINT": 10,
	"COMPANY":               11,
	"ROUTE":                 12,
	"POI":                   13,
	"CONTRIBUTOR":           16,
	"ADDRESS":               18,
	"POITYPE":               23,
	"ADMINISTRATIVE_REGION": 22,
	"CALENDAR":              25,
	"LINE_GROUP":            26,
	"IMPACT":                27,
	"DATASET":               28,
	"TRIP":                  29,
}

func (x NavitiaType) Enum() *NavitiaType {
	p := new(NavitiaType)
	*p = x
	return p
}
func (x NavitiaType) String() string {
	return proto.EnumName(NavitiaType_name, int32(x))
}
func (x *NavitiaType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(NavitiaType_value, data, "NavitiaType")
	if err != nil {
		return err
	}
	*x = NavitiaType(value)
	return nil
}
func (NavitiaType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type API int32

const (
	API_places                        API = 1
	API_PTREFERENTIAL                 API = 2
	API_PLANNER                       API = 4
	API_places_nearby                 API = 6
	API_STATUS                        API = 7
	API_NEXT_DEPARTURES               API = 8
	API_NEXT_ARRIVALS                 API = 9
	API_DEPARTURE_BOARDS              API = 10
	API_ROUTE_SCHEDULES               API = 11
	API_ISOCHRONE                     API = 13
	API_METADATAS                     API = 14
	API_place_uri                     API = 15
	API_UNKNOWN_API                   API = 16
	API_traffic_reports               API = 26
	API_calendars                     API = 18
	API_NMPLANNER                     API = 19
	API_pt_objects                    API = 20
	API_place_code                    API = 21
	API_disruptions                   API = 25
	API_nearest_stop_points           API = 27
	API_pt_planner                    API = 28
	API_graphical_isochrone           API = 29
	API_geo_status                    API = 30
	API_car_co2_emission              API = 31
	API_direct_path                   API = 32
	API_heat_map                      API = 33
	API_street_network_routing_matrix API = 34
	API_odt_stop_points               API = 35
	API_matching_routes               API = 36
	API_line_reports                  API = 37
)

var API_name = map[int32]string{
	1:  "places",
	2:  "PTREFERENTIAL",
	4:  "PLANNER",
	6:  "places_nearby",
	7:  "STATUS",
	8:  "NEXT_DEPARTURES",
	9:  "NEXT_ARRIVALS",
	10: "DEPARTURE_BOARDS",
	11: "ROUTE_SCHEDULES",
	13: "ISOCHRONE",
	14: "METADATAS",
	15: "place_uri",
	16: "UNKNOWN_API",
	26: "traffic_reports",
	18: "calendars",
	19: "NMPLANNER",
	20: "pt_objects",
	21: "place_code",
	25: "disruptions",
	27: "nearest_stop_points",
	28: "pt_planner",
	29: "graphical_isochrone",
	30: "geo_status",
	31: "car_co2_emission",
	32: "direct_path",
	33: "heat_map",
	34: "street_network_routing_matrix",
	35: "odt_stop_points",
	36: "matching_routes",
	37: "line_reports",
}
var API_value = map[string]int32{
	"places":                        1,
	"PTREFERENTIAL":                 2,
	"PLANNER":                       4,
	"places_nearby":                 6,
	"STATUS":                        7,
	"NEXT_DEPARTURES":               8,
	"NEXT_ARRIVALS":                 9,
	"DEPARTURE_BOARDS":              10,
	"ROUTE_SCHEDULES":               11,
	"ISOCHRONE":                     13,
	"METADATAS":                     14,
	"place_uri":                     15,
	"UNKNOWN_API":                   16,
	"traffic_reports":               26,
	"calendars":                     18,
	"NMPLANNER":                     19,
	"pt_objects":                    20,
	"place_code":                    21,
	"disruptions":                   25,
	"nearest_stop_points":           27,
	"pt_planner":                    28,
	"graphical_isochrone":           29,
	"geo_status":                    30,
	"car_co2_emission":              31,
	"direct_path":                   32,
	"heat_map":                      33,
	"street_network_routing_matrix": 34,
	"odt_stop_points":               35,
	"matching_routes":               36,
	"line_reports":                  37,
}

func (x API) Enum() *API {
	p := new(API)
	*p = x
	return p
}
func (x API) String() string {
	return proto.EnumName(API_name, int32(x))
}
func (x *API) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(API_value, data, "API")
	if err != nil {
		return err
	}
	*x = API(value)
	return nil
}
func (API) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type ResponseStatus int32

const (
	ResponseStatus_none                           ResponseStatus = 0
	ResponseStatus_no_departure_this_day          ResponseStatus = 1
	ResponseStatus_no_active_mode_this_day        ResponseStatus = 2
	ResponseStatus_no_active_circulation_this_day ResponseStatus = 3
	ResponseStatus_terminus                       ResponseStatus = 6
	ResponseStatus_date_out_of_bound              ResponseStatus = 7
	ResponseStatus_partial_terminus               ResponseStatus = 8
	ResponseStatus_ok                             ResponseStatus = 9
	ResponseStatus_active_disruption              ResponseStatus = 10
)

var ResponseStatus_name = map[int32]string{
	0:  "none",
	1:  "no_departure_this_day",
	2:  "no_active_mode_this_day",
	3:  "no_active_circulation_this_day",
	6:  "terminus",
	7:  "date_out_of_bound",
	8:  "partial_terminus",
	9:  "ok",
	10: "active_disruption",
}
var ResponseStatus_value = map[string]int32{
	"none":                           0,
	"no_departure_this_day":          1,
	"no_active_mode_this_day":        2,
	"no_active_circulation_this_day": 3,
	"terminus":                       6,
	"date_out_of_bound":              7,
	"partial_terminus":               8,
	"ok":                             9,
	"active_disruption":              10,
}

func (x ResponseStatus) Enum() *ResponseStatus {
	p := new(ResponseStatus)
	*p = x
	return p
}
func (x ResponseStatus) String() string {
	return proto.EnumName(ResponseStatus_name, int32(x))
}
func (x *ResponseStatus) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ResponseStatus_value, data, "ResponseStatus")
	if err != nil {
		return err
	}
	*x = ResponseStatus(value)
	return nil
}
func (ResponseStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type ActiveStatus int32

const (
	ActiveStatus_past   ActiveStatus = 0
	ActiveStatus_active ActiveStatus = 1
	ActiveStatus_future ActiveStatus = 2
)

var ActiveStatus_name = map[int32]string{
	0: "past",
	1: "active",
	2: "future",
}
var ActiveStatus_value = map[string]int32{
	"past":   0,
	"active": 1,
	"future": 2,
}

func (x ActiveStatus) Enum() *ActiveStatus {
	p := new(ActiveStatus)
	*p = x
	return p
}
func (x ActiveStatus) String() string {
	return proto.EnumName(ActiveStatus_name, int32(x))
}
func (x *ActiveStatus) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ActiveStatus_value, data, "ActiveStatus")
	if err != nil {
		return err
	}
	*x = ActiveStatus(value)
	return nil
}
func (ActiveStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

// message are the old disruption, remove as soon as possible
type MessageStatus int32

const (
	MessageStatus_information MessageStatus = 0
	MessageStatus_warning     MessageStatus = 1
	MessageStatus_disrupt     MessageStatus = 2
)

var MessageStatus_name = map[int32]string{
	0: "information",
	1: "warning",
	2: "disrupt",
}
var MessageStatus_value = map[string]int32{
	"information": 0,
	"warning":     1,
	"disrupt":     2,
}

func (x MessageStatus) Enum() *MessageStatus {
	p := new(MessageStatus)
	*p = x
	return p
}
func (x MessageStatus) String() string {
	return proto.EnumName(MessageStatus_name, int32(x))
}
func (x *MessageStatus) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MessageStatus_value, data, "MessageStatus")
	if err != nil {
		return err
	}
	*x = MessageStatus(value)
	return nil
}
func (MessageStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type StopTimeUpdateStatus int32

const (
	StopTimeUpdateStatus_DELAYED   StopTimeUpdateStatus = 0
	StopTimeUpdateStatus_ADDED     StopTimeUpdateStatus = 1
	StopTimeUpdateStatus_DELETED   StopTimeUpdateStatus = 2
	StopTimeUpdateStatus_UNCHANGED StopTimeUpdateStatus = 3
)

var StopTimeUpdateStatus_name = map[int32]string{
	0: "DELAYED",
	1: "ADDED",
	2: "DELETED",
	3: "UNCHANGED",
}
var StopTimeUpdateStatus_value = map[string]int32{
	"DELAYED":   0,
	"ADDED":     1,
	"DELETED":   2,
	"UNCHANGED": 3,
}

func (x StopTimeUpdateStatus) Enum() *StopTimeUpdateStatus {
	p := new(StopTimeUpdateStatus)
	*p = x
	return p
}
func (x StopTimeUpdateStatus) String() string {
	return proto.EnumName(StopTimeUpdateStatus_name, int32(x))
}
func (x *StopTimeUpdateStatus) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(StopTimeUpdateStatus_value, data, "StopTimeUpdateStatus")
	if err != nil {
		return err
	}
	*x = StopTimeUpdateStatus(value)
	return nil
}
func (StopTimeUpdateStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type OdtLevel int32

const (
	OdtLevel_scheduled  OdtLevel = 0
	OdtLevel_with_stops OdtLevel = 1
	OdtLevel_zonal      OdtLevel = 2
	OdtLevel_all        OdtLevel = 3
)

var OdtLevel_name = map[int32]string{
	0: "scheduled",
	1: "with_stops",
	2: "zonal",
	3: "all",
}
var OdtLevel_value = map[string]int32{
	"scheduled":  0,
	"with_stops": 1,
	"zonal":      2,
	"all":        3,
}

func (x OdtLevel) Enum() *OdtLevel {
	p := new(OdtLevel)
	*p = x
	return p
}
func (x OdtLevel) String() string {
	return proto.EnumName(OdtLevel_name, int32(x))
}
func (x *OdtLevel) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(OdtLevel_value, data, "OdtLevel")
	if err != nil {
		return err
	}
	*x = OdtLevel(value)
	return nil
}
func (OdtLevel) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type RTLevel int32

const (
	RTLevel_BASE_SCHEDULE    RTLevel = 1
	RTLevel_ADAPTED_SCHEDULE RTLevel = 2
	RTLevel_REALTIME         RTLevel = 3
)

var RTLevel_name = map[int32]string{
	1: "BASE_SCHEDULE",
	2: "ADAPTED_SCHEDULE",
	3: "REALTIME",
}
var RTLevel_value = map[string]int32{
	"BASE_SCHEDULE":    1,
	"ADAPTED_SCHEDULE": 2,
	"REALTIME":         3,
}

func (x RTLevel) Enum() *RTLevel {
	p := new(RTLevel)
	*p = x
	return p
}
func (x RTLevel) String() string {
	return proto.EnumName(RTLevel_name, int32(x))
}
func (x *RTLevel) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RTLevel_value, data, "RTLevel")
	if err != nil {
		return err
	}
	*x = RTLevel(value)
	return nil
}
func (RTLevel) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

type ExceptionType int32

const (
	ExceptionType_Add    ExceptionType = 0
	ExceptionType_Remove ExceptionType = 1
)

var ExceptionType_name = map[int32]string{
	0: "Add",
	1: "Remove",
}
var ExceptionType_value = map[string]int32{
	"Add":    0,
	"Remove": 1,
}

func (x ExceptionType) Enum() *ExceptionType {
	p := new(ExceptionType)
	*p = x
	return p
}
func (x ExceptionType) String() string {
	return proto.EnumName(ExceptionType_name, int32(x))
}
func (x *ExceptionType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ExceptionType_value, data, "ExceptionType")
	if err != nil {
		return err
	}
	*x = ExceptionType(value)
	return nil
}
func (ExceptionType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

type Channel_ChannelType int32

const (
	Channel_web          Channel_ChannelType = 1
	Channel_sms          Channel_ChannelType = 2
	Channel_email        Channel_ChannelType = 3
	Channel_mobile       Channel_ChannelType = 4
	Channel_notification Channel_ChannelType = 5
	Channel_twitter      Channel_ChannelType = 6
	Channel_facebook     Channel_ChannelType = 7
	Channel_unknown_type Channel_ChannelType = 8
	Channel_title        Channel_ChannelType = 9
	Channel_beacon       Channel_ChannelType = 10
)

var Channel_ChannelType_name = map[int32]string{
	1:  "web",
	2:  "sms",
	3:  "email",
	4:  "mobile",
	5:  "notification",
	6:  "twitter",
	7:  "facebook",
	8:  "unknown_type",
	9:  "title",
	10: "beacon",
}
var Channel_ChannelType_value = map[string]int32{
	"web":          1,
	"sms":          2,
	"email":        3,
	"mobile":       4,
	"notification": 5,
	"twitter":      6,
	"facebook":     7,
	"unknown_type": 8,
	"title":        9,
	"beacon":       10,
}

func (x Channel_ChannelType) Enum() *Channel_ChannelType {
	p := new(Channel_ChannelType)
	*p = x
	return p
}
func (x Channel_ChannelType) String() string {
	return proto.EnumName(Channel_ChannelType_name, int32(x))
}
func (x *Channel_ChannelType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Channel_ChannelType_value, data, "Channel_ChannelType")
	if err != nil {
		return err
	}
	*x = Channel_ChannelType(value)
	return nil
}
func (Channel_ChannelType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{3, 0} }

// copied from chaos-proto/gtfs-realtime.proto
type Severity_Effect int32

const (
	Severity_NO_SERVICE      Severity_Effect = 1
	Severity_REDUCED_SERVICE Severity_Effect = 2
	// We don't care about INsignificant delays: they are hard to detect, have
	// little impact on the user, and would clutter the results as they are too
	// frequent.
	Severity_SIGNIFICANT_DELAYS Severity_Effect = 3
	Severity_DETOUR             Severity_Effect = 4
	Severity_ADDITIONAL_SERVICE Severity_Effect = 5
	Severity_MODIFIED_SERVICE   Severity_Effect = 6
	Severity_OTHER_EFFECT       Severity_Effect = 7
	Severity_UNKNOWN_EFFECT     Severity_Effect = 8
	Severity_STOP_MOVED         Severity_Effect = 9
)

var Severity_Effect_name = map[int32]string{
	1: "NO_SERVICE",
	2: "REDUCED_SERVICE",
	3: "SIGNIFICANT_DELAYS",
	4: "DETOUR",
	5: "ADDITIONAL_SERVICE",
	6: "MODIFIED_SERVICE",
	7: "OTHER_EFFECT",
	8: "UNKNOWN_EFFECT",
	9: "STOP_MOVED",
}
var Severity_Effect_value = map[string]int32{
	"NO_SERVICE":         1,
	"REDUCED_SERVICE":    2,
	"SIGNIFICANT_DELAYS": 3,
	"DETOUR":             4,
	"ADDITIONAL_SERVICE": 5,
	"MODIFIED_SERVICE":   6,
	"OTHER_EFFECT":       7,
	"UNKNOWN_EFFECT":     8,
	"STOP_MOVED":         9,
}

func (x Severity_Effect) Enum() *Severity_Effect {
	p := new(Severity_Effect)
	*p = x
	return p
}
func (x Severity_Effect) String() string {
	return proto.EnumName(Severity_Effect_name, int32(x))
}
func (x *Severity_Effect) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Severity_Effect_value, data, "Severity_Effect")
	if err != nil {
		return err
	}
	*x = Severity_Effect(value)
	return nil
}
func (Severity_Effect) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{6, 0} }

type Properties_AdditionalInformation int32

const (
	Properties_pick_up_only        Properties_AdditionalInformation = 1
	Properties_drop_off_only       Properties_AdditionalInformation = 2
	Properties_on_demand_transport Properties_AdditionalInformation = 3
	Properties_date_time_estimated Properties_AdditionalInformation = 4
)

var Properties_AdditionalInformation_name = map[int32]string{
	1: "pick_up_only",
	2: "drop_off_only",
	3: "on_demand_transport",
	4: "date_time_estimated",
}
var Properties_AdditionalInformation_value = map[string]int32{
	"pick_up_only":        1,
	"drop_off_only":       2,
	"on_demand_transport": 3,
	"date_time_estimated": 4,
}

func (x Properties_AdditionalInformation) Enum() *Properties_AdditionalInformation {
	p := new(Properties_AdditionalInformation)
	*p = x
	return p
}
func (x Properties_AdditionalInformation) String() string {
	return proto.EnumName(Properties_AdditionalInformation_name, int32(x))
}
func (x *Properties_AdditionalInformation) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Properties_AdditionalInformation_value, data, "Properties_AdditionalInformation")
	if err != nil {
		return err
	}
	*x = Properties_AdditionalInformation(value)
	return nil
}
func (Properties_AdditionalInformation) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{25, 0}
}

type HasEquipments_Equipment int32

const (
	HasEquipments_has_wheelchair_accessibility HasEquipments_Equipment = 1
	HasEquipments_has_bike_accepted            HasEquipments_Equipment = 2
	HasEquipments_has_air_conditioned          HasEquipments_Equipment = 3
	HasEquipments_has_visual_announcement      HasEquipments_Equipment = 4
	HasEquipments_has_audible_announcement     HasEquipments_Equipment = 5
	HasEquipments_has_appropriate_escort       HasEquipments_Equipment = 6
	HasEquipments_has_appropriate_signage      HasEquipments_Equipment = 7
	HasEquipments_has_school_vehicle           HasEquipments_Equipment = 8
	HasEquipments_has_wheelchair_boarding      HasEquipments_Equipment = 9
	HasEquipments_has_sheltered                HasEquipments_Equipment = 10
	HasEquipments_has_elevator                 HasEquipments_Equipment = 11
	HasEquipments_has_escalator                HasEquipments_Equipment = 12
	HasEquipments_has_bike_depot               HasEquipments_Equipment = 13
)

var HasEquipments_Equipment_name = map[int32]string{
	1:  "has_wheelchair_accessibility",
	2:  "has_bike_accepted",
	3:  "has_air_conditioned",
	4:  "has_visual_announcement",
	5:  "has_audible_announcement",
	6:  "has_appropriate_escort",
	7:  "has_appropriate_signage",
	8:  "has_school_vehicle",
	9:  "has_wheelchair_boarding",
	10: "has_sheltered",
	11: "has_elevator",
	12: "has_escalator",
	13: "has_bike_depot",
}
var HasEquipments_Equipment_value = map[string]int32{
	"has_wheelchair_accessibility": 1,
	"has_bike_accepted":            2,
	"has_air_conditioned":          3,
	"has_visual_announcement":      4,
	"has_audible_announcement":     5,
	"has_appropriate_escort":       6,
	"has_appropriate_signage":      7,
	"has_school_vehicle":           8,
	"has_wheelchair_boarding":      9,
	"has_sheltered":                10,
	"has_elevator":                 11,
	"has_escalator":                12,
	"has_bike_depot":               13,
}

func (x HasEquipments_Equipment) Enum() *HasEquipments_Equipment {
	p := new(HasEquipments_Equipment)
	*p = x
	return p
}
func (x HasEquipments_Equipment) String() string {
	return proto.EnumName(HasEquipments_Equipment_name, int32(x))
}
func (x *HasEquipments_Equipment) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(HasEquipments_Equipment_value, data, "HasEquipments_Equipment")
	if err != nil {
		return err
	}
	*x = HasEquipments_Equipment(value)
	return nil
}
func (HasEquipments_Equipment) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{26, 0} }

type Code struct {
	Type             *string `protobuf:"bytes,1,req,name=type" json:"type,omitempty"`
	Value            *string `protobuf:"bytes,2,req,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Code) Reset()                    { *m = Code{} }
func (m *Code) String() string            { return proto.CompactTextString(m) }
func (*Code) ProtoMessage()               {}
func (*Code) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Code) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *Code) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type Period struct {
	Begin            *uint64 `protobuf:"varint,1,opt,name=begin" json:"begin,omitempty"`
	End              *uint64 `protobuf:"varint,2,opt,name=end" json:"end,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Period) Reset()                    { *m = Period{} }
func (m *Period) String() string            { return proto.CompactTextString(m) }
func (*Period) ProtoMessage()               {}
func (*Period) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Period) GetBegin() uint64 {
	if m != nil && m.Begin != nil {
		return *m.Begin
	}
	return 0
}

func (m *Period) GetEnd() uint64 {
	if m != nil && m.End != nil {
		return *m.End
	}
	return 0
}

type Property struct {
	Name             *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value            *string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Property) Reset()                    { *m = Property{} }
func (m *Property) String() string            { return proto.CompactTextString(m) }
func (*Property) ProtoMessage()               {}
func (*Property) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Property) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Property) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type Channel struct {
	Id               *string               `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name             *string               `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	ContentType      *string               `protobuf:"bytes,3,opt,name=content_type,json=contentType" json:"content_type,omitempty"`
	ChannelTypes     []Channel_ChannelType `protobuf:"varint,4,rep,name=channel_types,json=channelTypes,enum=pbnavitia.Channel_ChannelType" json:"channel_types,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *Channel) Reset()                    { *m = Channel{} }
func (m *Channel) String() string            { return proto.CompactTextString(m) }
func (*Channel) ProtoMessage()               {}
func (*Channel) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Channel) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Channel) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Channel) GetContentType() string {
	if m != nil && m.ContentType != nil {
		return *m.ContentType
	}
	return ""
}

func (m *Channel) GetChannelTypes() []Channel_ChannelType {
	if m != nil {
		return m.ChannelTypes
	}
	return nil
}

type MessageContent struct {
	Text             *string  `protobuf:"bytes,1,opt,name=text" json:"text,omitempty"`
	Channel          *Channel `protobuf:"bytes,4,opt,name=channel" json:"channel,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *MessageContent) Reset()                    { *m = MessageContent{} }
func (m *MessageContent) String() string            { return proto.CompactTextString(m) }
func (*MessageContent) ProtoMessage()               {}
func (*MessageContent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *MessageContent) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

func (m *MessageContent) GetChannel() *Channel {
	if m != nil {
		return m.Channel
	}
	return nil
}

type Message struct {
	Uri                       *string        `protobuf:"bytes,1,opt,name=uri" json:"uri,omitempty"`
	Message                   *string        `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Title                     *string        `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	StartApplicationDate      *uint64        `protobuf:"varint,4,opt,name=start_application_date,json=startApplicationDate" json:"start_application_date,omitempty"`
	EndApplicationDate        *uint64        `protobuf:"varint,5,opt,name=end_application_date,json=endApplicationDate" json:"end_application_date,omitempty"`
	StartApplicationDailyHour *string        `protobuf:"bytes,6,opt,name=start_application_daily_hour,json=startApplicationDailyHour" json:"start_application_daily_hour,omitempty"`
	EndApplicationDailyHour   *string        `protobuf:"bytes,7,opt,name=end_application_daily_hour,json=endApplicationDailyHour" json:"end_application_daily_hour,omitempty"`
	MessageStatus             *MessageStatus `protobuf:"varint,8,opt,name=message_status,json=messageStatus,enum=pbnavitia.MessageStatus" json:"message_status,omitempty"`
	XXX_unrecognized          []byte         `json:"-"`
}

func (m *Message) Reset()                    { *m = Message{} }
func (m *Message) String() string            { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()               {}
func (*Message) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Message) GetUri() string {
	if m != nil && m.Uri != nil {
		return *m.Uri
	}
	return ""
}

func (m *Message) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *Message) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *Message) GetStartApplicationDate() uint64 {
	if m != nil && m.StartApplicationDate != nil {
		return *m.StartApplicationDate
	}
	return 0
}

func (m *Message) GetEndApplicationDate() uint64 {
	if m != nil && m.EndApplicationDate != nil {
		return *m.EndApplicationDate
	}
	return 0
}

func (m *Message) GetStartApplicationDailyHour() string {
	if m != nil && m.StartApplicationDailyHour != nil {
		return *m.StartApplicationDailyHour
	}
	return ""
}

func (m *Message) GetEndApplicationDailyHour() string {
	if m != nil && m.EndApplicationDailyHour != nil {
		return *m.EndApplicationDailyHour
	}
	return ""
}

func (m *Message) GetMessageStatus() MessageStatus {
	if m != nil && m.MessageStatus != nil {
		return *m.MessageStatus
	}
	return MessageStatus_information
}

type Severity struct {
	Name             *string          `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Color            *string          `protobuf:"bytes,2,opt,name=color" json:"color,omitempty"`
	Effect           *Severity_Effect `protobuf:"varint,3,opt,name=effect,enum=pbnavitia.Severity_Effect,def=8" json:"effect,omitempty"`
	Priority         *int32           `protobuf:"varint,4,opt,name=priority" json:"priority,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *Severity) Reset()                    { *m = Severity{} }
func (m *Severity) String() string            { return proto.CompactTextString(m) }
func (*Severity) ProtoMessage()               {}
func (*Severity) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

const Default_Severity_Effect Severity_Effect = Severity_UNKNOWN_EFFECT

func (m *Severity) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Severity) GetColor() string {
	if m != nil && m.Color != nil {
		return *m.Color
	}
	return ""
}

func (m *Severity) GetEffect() Severity_Effect {
	if m != nil && m.Effect != nil {
		return *m.Effect
	}
	return Default_Severity_Effect
}

func (m *Severity) GetPriority() int32 {
	if m != nil && m.Priority != nil {
		return *m.Priority
	}
	return 0
}

type StopTimeUpdate struct {
	AmendedStopTime  *StopTime             `protobuf:"bytes,1,opt,name=amended_stop_time,json=amendedStopTime" json:"amended_stop_time,omitempty"`
	BaseStopTime     *StopTime             `protobuf:"bytes,2,opt,name=base_stop_time,json=baseStopTime" json:"base_stop_time,omitempty"`
	Cause            *string               `protobuf:"bytes,3,opt,name=cause" json:"cause,omitempty"`
	Effect           *StopTimeUpdateStatus `protobuf:"varint,4,opt,name=effect,enum=pbnavitia.StopTimeUpdateStatus" json:"effect,omitempty"`
	StopPoint        *StopPoint            `protobuf:"bytes,5,opt,name=stop_point,json=stopPoint" json:"stop_point,omitempty"`
	DepartureStatus  *StopTimeUpdateStatus `protobuf:"varint,6,opt,name=departure_status,json=departureStatus,enum=pbnavitia.StopTimeUpdateStatus" json:"departure_status,omitempty"`
	ArrivalStatus    *StopTimeUpdateStatus `protobuf:"varint,7,opt,name=arrival_status,json=arrivalStatus,enum=pbnavitia.StopTimeUpdateStatus" json:"arrival_status,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *StopTimeUpdate) Reset()                    { *m = StopTimeUpdate{} }
func (m *StopTimeUpdate) String() string            { return proto.CompactTextString(m) }
func (*StopTimeUpdate) ProtoMessage()               {}
func (*StopTimeUpdate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *StopTimeUpdate) GetAmendedStopTime() *StopTime {
	if m != nil {
		return m.AmendedStopTime
	}
	return nil
}

func (m *StopTimeUpdate) GetBaseStopTime() *StopTime {
	if m != nil {
		return m.BaseStopTime
	}
	return nil
}

func (m *StopTimeUpdate) GetCause() string {
	if m != nil && m.Cause != nil {
		return *m.Cause
	}
	return ""
}

func (m *StopTimeUpdate) GetEffect() StopTimeUpdateStatus {
	if m != nil && m.Effect != nil {
		return *m.Effect
	}
	return StopTimeUpdateStatus_DELAYED
}

func (m *StopTimeUpdate) GetStopPoint() *StopPoint {
	if m != nil {
		return m.StopPoint
	}
	return nil
}

func (m *StopTimeUpdate) GetDepartureStatus() StopTimeUpdateStatus {
	if m != nil && m.DepartureStatus != nil {
		return *m.DepartureStatus
	}
	return StopTimeUpdateStatus_DELAYED
}

func (m *StopTimeUpdate) GetArrivalStatus() StopTimeUpdateStatus {
	if m != nil && m.ArrivalStatus != nil {
		return *m.ArrivalStatus
	}
	return StopTimeUpdateStatus_DELAYED
}

type LineSectionImpact struct {
	From             *PtObject `protobuf:"bytes,1,opt,name=from" json:"from,omitempty"`
	To               *PtObject `protobuf:"bytes,2,opt,name=to" json:"to,omitempty"`
	Routes           []*Route  `protobuf:"bytes,3,rep,name=routes" json:"routes,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *LineSectionImpact) Reset()                    { *m = LineSectionImpact{} }
func (m *LineSectionImpact) String() string            { return proto.CompactTextString(m) }
func (*LineSectionImpact) ProtoMessage()               {}
func (*LineSectionImpact) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *LineSectionImpact) GetFrom() *PtObject {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *LineSectionImpact) GetTo() *PtObject {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *LineSectionImpact) GetRoutes() []*Route {
	if m != nil {
		return m.Routes
	}
	return nil
}

type ImpactedObject struct {
	PtObject         *PtObject          `protobuf:"bytes,1,opt,name=pt_object,json=ptObject" json:"pt_object,omitempty"`
	ImpactedStops    []*StopTimeUpdate  `protobuf:"bytes,2,rep,name=impacted_stops,json=impactedStops" json:"impacted_stops,omitempty"`
	ImpactedSection  *LineSectionImpact `protobuf:"bytes,3,opt,name=impacted_section,json=impactedSection" json:"impacted_section,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *ImpactedObject) Reset()                    { *m = ImpactedObject{} }
func (m *ImpactedObject) String() string            { return proto.CompactTextString(m) }
func (*ImpactedObject) ProtoMessage()               {}
func (*ImpactedObject) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *ImpactedObject) GetPtObject() *PtObject {
	if m != nil {
		return m.PtObject
	}
	return nil
}

func (m *ImpactedObject) GetImpactedStops() []*StopTimeUpdate {
	if m != nil {
		return m.ImpactedStops
	}
	return nil
}

func (m *ImpactedObject) GetImpactedSection() *LineSectionImpact {
	if m != nil {
		return m.ImpactedSection
	}
	return nil
}

type DisruptionProperty struct {
	Key              *string `protobuf:"bytes,1,req,name=key" json:"key,omitempty"`
	Type             *string `protobuf:"bytes,2,req,name=type" json:"type,omitempty"`
	Value            *string `protobuf:"bytes,3,req,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *DisruptionProperty) Reset()                    { *m = DisruptionProperty{} }
func (m *DisruptionProperty) String() string            { return proto.CompactTextString(m) }
func (*DisruptionProperty) ProtoMessage()               {}
func (*DisruptionProperty) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *DisruptionProperty) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *DisruptionProperty) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *DisruptionProperty) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type Impact struct {
	Uri                *string               `protobuf:"bytes,1,opt,name=uri" json:"uri,omitempty"`
	DisruptionUri      *string               `protobuf:"bytes,2,opt,name=disruption_uri,json=disruptionUri" json:"disruption_uri,omitempty"`
	ApplicationPeriods []*Period             `protobuf:"bytes,10,rep,name=application_periods,json=applicationPeriods" json:"application_periods,omitempty"`
	Status             *ActiveStatus         `protobuf:"varint,11,opt,name=status,enum=pbnavitia.ActiveStatus" json:"status,omitempty"`
	UpdatedAt          *uint64               `protobuf:"varint,12,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
	Tags               []string              `protobuf:"bytes,13,rep,name=tags" json:"tags,omitempty"`
	Cause              *string               `protobuf:"bytes,14,opt,name=cause" json:"cause,omitempty"`
	Messages           []*MessageContent     `protobuf:"bytes,15,rep,name=messages" json:"messages,omitempty"`
	Severity           *Severity             `protobuf:"bytes,16,opt,name=severity" json:"severity,omitempty"`
	Contributor        *string               `protobuf:"bytes,17,opt,name=contributor" json:"contributor,omitempty"`
	ImpactedObjects    []*ImpactedObject     `protobuf:"bytes,18,rep,name=impacted_objects,json=impactedObjects" json:"impacted_objects,omitempty"`
	Category           *string               `protobuf:"bytes,19,opt,name=category" json:"category,omitempty"`
	Properties         []*DisruptionProperty `protobuf:"bytes,20,rep,name=properties" json:"properties,omitempty"`
	XXX_unrecognized   []byte                `json:"-"`
}

func (m *Impact) Reset()                    { *m = Impact{} }
func (m *Impact) String() string            { return proto.CompactTextString(m) }
func (*Impact) ProtoMessage()               {}
func (*Impact) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *Impact) GetUri() string {
	if m != nil && m.Uri != nil {
		return *m.Uri
	}
	return ""
}

func (m *Impact) GetDisruptionUri() string {
	if m != nil && m.DisruptionUri != nil {
		return *m.DisruptionUri
	}
	return ""
}

func (m *Impact) GetApplicationPeriods() []*Period {
	if m != nil {
		return m.ApplicationPeriods
	}
	return nil
}

func (m *Impact) GetStatus() ActiveStatus {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return ActiveStatus_past
}

func (m *Impact) GetUpdatedAt() uint64 {
	if m != nil && m.UpdatedAt != nil {
		return *m.UpdatedAt
	}
	return 0
}

func (m *Impact) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Impact) GetCause() string {
	if m != nil && m.Cause != nil {
		return *m.Cause
	}
	return ""
}

func (m *Impact) GetMessages() []*MessageContent {
	if m != nil {
		return m.Messages
	}
	return nil
}

func (m *Impact) GetSeverity() *Severity {
	if m != nil {
		return m.Severity
	}
	return nil
}

func (m *Impact) GetContributor() string {
	if m != nil && m.Contributor != nil {
		return *m.Contributor
	}
	return ""
}

func (m *Impact) GetImpactedObjects() []*ImpactedObject {
	if m != nil {
		return m.ImpactedObjects
	}
	return nil
}

func (m *Impact) GetCategory() string {
	if m != nil && m.Category != nil {
		return *m.Category
	}
	return ""
}

func (m *Impact) GetProperties() []*DisruptionProperty {
	if m != nil {
		return m.Properties
	}
	return nil
}

type GeographicalCoord struct {
	Lon              *float64 `protobuf:"fixed64,1,req,name=lon" json:"lon,omitempty"`
	Lat              *float64 `protobuf:"fixed64,2,req,name=lat" json:"lat,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *GeographicalCoord) Reset()                    { *m = GeographicalCoord{} }
func (m *GeographicalCoord) String() string            { return proto.CompactTextString(m) }
func (*GeographicalCoord) ProtoMessage()               {}
func (*GeographicalCoord) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *GeographicalCoord) GetLon() float64 {
	if m != nil && m.Lon != nil {
		return *m.Lon
	}
	return 0
}

func (m *GeographicalCoord) GetLat() float64 {
	if m != nil && m.Lat != nil {
		return *m.Lat
	}
	return 0
}

type AdministrativeRegion struct {
	Uri              *string            `protobuf:"bytes,2,opt,name=uri" json:"uri,omitempty"`
	Name             *string            `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	ZipCode          *string            `protobuf:"bytes,4,opt,name=zip_code,json=zipCode" json:"zip_code,omitempty"`
	Level            *int32             `protobuf:"varint,5,opt,name=level" json:"level,omitempty"`
	Coord            *GeographicalCoord `protobuf:"bytes,6,opt,name=coord" json:"coord,omitempty"`
	Label            *string            `protobuf:"bytes,7,opt,name=label" json:"label,omitempty"`
	Insee            *string            `protobuf:"bytes,8,opt,name=insee" json:"insee,omitempty"`
	MainStopAreas    []*StopArea        `protobuf:"bytes,9,rep,name=main_stop_areas,json=mainStopAreas" json:"main_stop_areas,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *AdministrativeRegion) Reset()                    { *m = AdministrativeRegion{} }
func (m *AdministrativeRegion) String() string            { return proto.CompactTextString(m) }
func (*AdministrativeRegion) ProtoMessage()               {}
func (*AdministrativeRegion) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *AdministrativeRegion) GetUri() string {
	if m != nil && m.Uri != nil {
		return *m.Uri
	}
	return ""
}

func (m *AdministrativeRegion) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *AdministrativeRegion) GetZipCode() string {
	if m != nil && m.ZipCode != nil {
		return *m.ZipCode
	}
	return ""
}

func (m *AdministrativeRegion) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *AdministrativeRegion) GetCoord() *GeographicalCoord {
	if m != nil {
		return m.Coord
	}
	return nil
}

func (m *AdministrativeRegion) GetLabel() string {
	if m != nil && m.Label != nil {
		return *m.Label
	}
	return ""
}

func (m *AdministrativeRegion) GetInsee() string {
	if m != nil && m.Insee != nil {
		return *m.Insee
	}
	return ""
}

func (m *AdministrativeRegion) GetMainStopAreas() []*StopArea {
	if m != nil {
		return m.MainStopAreas
	}
	return nil
}

type Comment struct {
	Value            *string `protobuf:"bytes,1,opt,name=value" json:"value,omitempty"`
	Type             *string `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Comment) Reset()                    { *m = Comment{} }
func (m *Comment) String() string            { return proto.CompactTextString(m) }
func (*Comment) ProtoMessage()               {}
func (*Comment) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *Comment) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

func (m *Comment) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

type StopArea struct {
	Name                  *string                 `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Uri                   *string                 `protobuf:"bytes,4,opt,name=uri" json:"uri,omitempty"`
	Coord                 *GeographicalCoord      `protobuf:"bytes,5,opt,name=coord" json:"coord,omitempty"`
	AdministrativeRegions []*AdministrativeRegion `protobuf:"bytes,10,rep,name=administrative_regions,json=administrativeRegions" json:"administrative_regions,omitempty"`
	StopPoints            []*StopPoint            `protobuf:"bytes,8,rep,name=stop_points,json=stopPoints" json:"stop_points,omitempty"`
	Messages              []*Message              `protobuf:"bytes,9,rep,name=messages" json:"messages,omitempty"`
	ImpactUris            []string                `protobuf:"bytes,25,rep,name=impact_uris,json=impactUris" json:"impact_uris,omitempty"`
	Comments              []*Comment              `protobuf:"bytes,23,rep,name=comments" json:"comments,omitempty"`
	Codes                 []*Code                 `protobuf:"bytes,12,rep,name=codes" json:"codes,omitempty"`
	Timezone              *string                 `protobuf:"bytes,15,opt,name=timezone" json:"timezone,omitempty"`
	Label                 *string                 `protobuf:"bytes,16,opt,name=label" json:"label,omitempty"`
	CommercialModes       []*CommercialMode       `protobuf:"bytes,21,rep,name=commercial_modes,json=commercialModes" json:"commercial_modes,omitempty"`
	PhysicalModes         []*PhysicalMode         `protobuf:"bytes,22,rep,name=physical_modes,json=physicalModes" json:"physical_modes,omitempty"`
	XXX_unrecognized      []byte                  `json:"-"`
}

func (m *StopArea) Reset()                    { *m = StopArea{} }
func (m *StopArea) String() string            { return proto.CompactTextString(m) }
func (*StopArea) ProtoMessage()               {}
func (*StopArea) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *StopArea) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *StopArea) GetUri() string {
	if m != nil && m.Uri != nil {
		return *m.Uri
	}
	return ""
}

func (m *StopArea) GetCoord() *GeographicalCoord {
	if m != nil {
		return m.Coord
	}
	return nil
}

func (m *StopArea) GetAdministrativeRegions() []*AdministrativeRegion {
	if m != nil {
		return m.AdministrativeRegions
	}
	return nil
}

func (m *StopArea) GetStopPoints() []*StopPoint {
	if m != nil {
		return m.StopPoints
	}
	return nil
}

func (m *StopArea) GetMessages() []*Message {
	if m != nil {
		return m.Messages
	}
	return nil
}

func (m *StopArea) GetImpactUris() []string {
	if m != nil {
		return m.ImpactUris
	}
	return nil
}

func (m *StopArea) GetComments() []*Comment {
	if m != nil {
		return m.Comments
	}
	return nil
}

func (m *StopArea) GetCodes() []*Code {
	if m != nil {
		return m.Codes
	}
	return nil
}

func (m *StopArea) GetTimezone() string {
	if m != nil && m.Timezone != nil {
		return *m.Timezone
	}
	return ""
}

func (m *StopArea) GetLabel() string {
	if m != nil && m.Label != nil {
		return *m.Label
	}
	return ""
}

func (m *StopArea) GetCommercialModes() []*CommercialMode {
	if m != nil {
		return m.CommercialModes
	}
	return nil
}

func (m *StopArea) GetPhysicalModes() []*PhysicalMode {
	if m != nil {
		return m.PhysicalModes
	}
	return nil
}

type StopPoint struct {
	Name                  *string                 `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	AdministrativeRegions []*AdministrativeRegion `protobuf:"bytes,10,rep,name=administrative_regions,json=administrativeRegions" json:"administrative_regions,omitempty"`
	Uri                   *string                 `protobuf:"bytes,5,opt,name=uri" json:"uri,omitempty"`
	Coord                 *GeographicalCoord      `protobuf:"bytes,6,opt,name=coord" json:"coord,omitempty"`
	StopArea              *StopArea               `protobuf:"bytes,7,opt,name=stop_area,json=stopArea" json:"stop_area,omitempty"`
	HasEquipments         *HasEquipments          `protobuf:"bytes,8,opt,name=has_equipments,json=hasEquipments" json:"has_equipments,omitempty"`
	Messages              []*Message              `protobuf:"bytes,9,rep,name=messages" json:"messages,omitempty"`
	ImpactUris            []string                `protobuf:"bytes,22,rep,name=impact_uris,json=impactUris" json:"impact_uris,omitempty"`
	Comments              []*Comment              `protobuf:"bytes,16,rep,name=comments" json:"comments,omitempty"`
	Codes                 []*Code                 `protobuf:"bytes,12,rep,name=codes" json:"codes,omitempty"`
	Address               *Address                `protobuf:"bytes,13,opt,name=address" json:"address,omitempty"`
	PlatformCode          *string                 `protobuf:"bytes,14,opt,name=platform_code,json=platformCode" json:"platform_code,omitempty"`
	Label                 *string                 `protobuf:"bytes,15,opt,name=label" json:"label,omitempty"`
	CommercialModes       []*CommercialMode       `protobuf:"bytes,17,rep,name=commercial_modes,json=commercialModes" json:"commercial_modes,omitempty"`
	PhysicalModes         []*PhysicalMode         `protobuf:"bytes,18,rep,name=physical_modes,json=physicalModes" json:"physical_modes,omitempty"`
	FareZone              *FareZone               `protobuf:"bytes,19,opt,name=fare_zone,json=fareZone" json:"fare_zone,omitempty"`
	XXX_unrecognized      []byte                  `json:"-"`
}

func (m *StopPoint) Reset()                    { *m = StopPoint{} }
func (m *StopPoint) String() string            { return proto.CompactTextString(m) }
func (*StopPoint) ProtoMessage()               {}
func (*StopPoint) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *StopPoint) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *StopPoint) GetAdministrativeRegions() []*AdministrativeRegion {
	if m != nil {
		return m.AdministrativeRegions
	}
	return nil
}

func (m *StopPoint) GetUri() string {
	if m != nil && m.Uri != nil {
		return *m.Uri
	}
	return ""
}

func (m *StopPoint) GetCoord() *GeographicalCoord {
	if m != nil {
		return m.Coord
	}
	return nil
}

func (m *StopPoint) GetStopArea() *StopArea {
	if m != nil {
		return m.StopArea
	}
	return nil
}

func (m *StopPoint) GetHasEquipments() *HasEquipments {
	if m != nil {
		return m.HasEquipments
	}
	return nil
}

func (m *StopPoint) GetMessages() []*Message {
	if m != nil {
		return m.Messages
	}
	return nil
}

func (m *StopPoint) GetImpactUris() []string {
	if m != nil {
		return m.ImpactUris
	}
	return nil
}

func (m *StopPoint) GetComments() []*Comment {
	if m != nil {
		return m.Comments
	}
	return nil
}

func (m *StopPoint) GetCodes() []*Code {
	if m != nil {
		return m.Codes
	}
	return nil
}

func (m *StopPoint) GetAddress() *Address {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *StopPoint) GetPlatformCode() string {
	if m != nil && m.PlatformCode != nil {
		return *m.PlatformCode
	}
	return ""
}

func (m *StopPoint) GetLabel() string {
	if m != nil && m.Label != nil {
		return *m.Label
	}
	return ""
}

func (m *StopPoint) GetCommercialModes() []*CommercialMode {
	if m != nil {
		return m.CommercialModes
	}
	return nil
}

func (m *StopPoint) GetPhysicalModes() []*PhysicalMode {
	if m != nil {
		return m.PhysicalModes
	}
	return nil
}

func (m *StopPoint) GetFareZone() *FareZone {
	if m != nil {
		return m.FareZone
	}
	return nil
}

type LineString struct {
	Coordinates      []*GeographicalCoord `protobuf:"bytes,1,rep,name=coordinates" json:"coordinates,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *LineString) Reset()                    { *m = LineString{} }
func (m *LineString) String() string            { return proto.CompactTextString(m) }
func (*LineString) ProtoMessage()               {}
func (*LineString) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *LineString) GetCoordinates() []*GeographicalCoord {
	if m != nil {
		return m.Coordinates
	}
	return nil
}

type MultiLineString struct {
	Lines            []*LineString `protobuf:"bytes,1,rep,name=lines" json:"lines,omitempty"`
	Length           *float64      `protobuf:"fixed64,2,opt,name=length" json:"length,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *MultiLineString) Reset()                    { *m = MultiLineString{} }
func (m *MultiLineString) String() string            { return proto.CompactTextString(m) }
func (*MultiLineString) ProtoMessage()               {}
func (*MultiLineString) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *MultiLineString) GetLines() []*LineString {
	if m != nil {
		return m.Lines
	}
	return nil
}

func (m *MultiLineString) GetLength() float64 {
	if m != nil && m.Length != nil {
		return *m.Length
	}
	return 0
}

type Line struct {
	Name             *string          `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Uri              *string          `protobuf:"bytes,4,opt,name=uri" json:"uri,omitempty"`
	Code             *string          `protobuf:"bytes,5,opt,name=code" json:"code,omitempty"`
	Color            *string          `protobuf:"bytes,9,opt,name=color" json:"color,omitempty"`
	Routes           []*Route         `protobuf:"bytes,10,rep,name=routes" json:"routes,omitempty"`
	CommercialMode   *CommercialMode  `protobuf:"bytes,11,opt,name=commercial_mode,json=commercialMode" json:"commercial_mode,omitempty"`
	PhysicalModes    []*PhysicalMode  `protobuf:"bytes,12,rep,name=physical_modes,json=physicalModes" json:"physical_modes,omitempty"`
	Network          *Network         `protobuf:"bytes,13,opt,name=network" json:"network,omitempty"`
	Messages         []*Message       `protobuf:"bytes,14,rep,name=messages" json:"messages,omitempty"`
	ImpactUris       []string         `protobuf:"bytes,26,rep,name=impact_uris,json=impactUris" json:"impact_uris,omitempty"`
	Comments         []*Comment       `protobuf:"bytes,22,rep,name=comments" json:"comments,omitempty"`
	Codes            []*Code          `protobuf:"bytes,16,rep,name=codes" json:"codes,omitempty"`
	Geojson          *MultiLineString `protobuf:"bytes,17,opt,name=geojson" json:"geojson,omitempty"`
	OpeningTime      *uint32          `protobuf:"varint,18,opt,name=opening_time,json=openingTime" json:"opening_time,omitempty"`
	ClosingTime      *uint32          `protobuf:"varint,19,opt,name=closing_time,json=closingTime" json:"closing_time,omitempty"`
	Properties       []*Property      `protobuf:"bytes,21,rep,name=properties" json:"properties,omitempty"`
	LineGroups       []*LineGroup     `protobuf:"bytes,23,rep,name=line_groups,json=lineGroups" json:"line_groups,omitempty"`
	TextColor        *string          `protobuf:"bytes,24,opt,name=text_color,json=textColor" json:"text_color,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *Line) Reset()                    { *m = Line{} }
func (m *Line) String() string            { return proto.CompactTextString(m) }
func (*Line) ProtoMessage()               {}
func (*Line) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *Line) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Line) GetUri() string {
	if m != nil && m.Uri != nil {
		return *m.Uri
	}
	return ""
}

func (m *Line) GetCode() string {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return ""
}

func (m *Line) GetColor() string {
	if m != nil && m.Color != nil {
		return *m.Color
	}
	return ""
}

func (m *Line) GetRoutes() []*Route {
	if m != nil {
		return m.Routes
	}
	return nil
}

func (m *Line) GetCommercialMode() *CommercialMode {
	if m != nil {
		return m.CommercialMode
	}
	return nil
}

func (m *Line) GetPhysicalModes() []*PhysicalMode {
	if m != nil {
		return m.PhysicalModes
	}
	return nil
}

func (m *Line) GetNetwork() *Network {
	if m != nil {
		return m.Network
	}
	return nil
}

func (m *Line) GetMessages() []*Message {
	if m != nil {
		return m.Messages
	}
	return nil
}

func (m *Line) GetImpactUris() []string {
	if m != nil {
		return m.ImpactUris
	}
	return nil
}

func (m *Line) GetComments() []*Comment {
	if m != nil {
		return m.Comments
	}
	return nil
}

func (m *Line) GetCodes() []*Code {
	if m != nil {
		return m.Codes
	}
	return nil
}

func (m *Line) GetGeojson() *MultiLineString {
	if m != nil {
		return m.Geojson
	}
	return nil
}

func (m *Line) GetOpeningTime() uint32 {
	if m != nil && m.OpeningTime != nil {
		return *m.OpeningTime
	}
	return 0
}

func (m *Line) GetClosingTime() uint32 {
	if m != nil && m.ClosingTime != nil {
		return *m.ClosingTime
	}
	return 0
}

func (m *Line) GetProperties() []*Property {
	if m != nil {
		return m.Properties
	}
	return nil
}

func (m *Line) GetLineGroups() []*LineGroup {
	if m != nil {
		return m.LineGroups
	}
	return nil
}

func (m *Line) GetTextColor() string {
	if m != nil && m.TextColor != nil {
		return *m.TextColor
	}
	return ""
}

type LineGroup struct {
	Name             *string    `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Uri              *string    `protobuf:"bytes,2,opt,name=uri" json:"uri,omitempty"`
	Comments         []*Comment `protobuf:"bytes,3,rep,name=comments" json:"comments,omitempty"`
	Lines            []*Line    `protobuf:"bytes,4,rep,name=lines" json:"lines,omitempty"`
	MainLine         *Line      `protobuf:"bytes,5,opt,name=main_line,json=mainLine" json:"main_line,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *LineGroup) Reset()                    { *m = LineGroup{} }
func (m *LineGroup) String() string            { return proto.CompactTextString(m) }
func (*LineGroup) ProtoMessage()               {}
func (*LineGroup) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *LineGroup) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *LineGroup) GetUri() string {
	if m != nil && m.Uri != nil {
		return *m.Uri
	}
	return ""
}

func (m *LineGroup) GetComments() []*Comment {
	if m != nil {
		return m.Comments
	}
	return nil
}

func (m *LineGroup) GetLines() []*Line {
	if m != nil {
		return m.Lines
	}
	return nil
}

func (m *LineGroup) GetMainLine() *Line {
	if m != nil {
		return m.MainLine
	}
	return nil
}

type Route struct {
	Name             *string           `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Uri              *string           `protobuf:"bytes,4,opt,name=uri" json:"uri,omitempty"`
	IsFrequence      *bool             `protobuf:"varint,5,opt,name=is_frequence,json=isFrequence" json:"is_frequence,omitempty"`
	Line             *Line             `protobuf:"bytes,7,opt,name=line" json:"line,omitempty"`
	JourneyPatterns  []*JourneyPattern `protobuf:"bytes,8,rep,name=journey_patterns,json=journeyPatterns" json:"journey_patterns,omitempty"`
	Messages         []*Message        `protobuf:"bytes,9,rep,name=messages" json:"messages,omitempty"`
	ImpactUris       []string          `protobuf:"bytes,18,rep,name=impact_uris,json=impactUris" json:"impact_uris,omitempty"`
	Codes            []*Code           `protobuf:"bytes,10,rep,name=codes" json:"codes,omitempty"`
	StopPoints       []*StopPoint      `protobuf:"bytes,1,rep,name=stop_points,json=stopPoints" json:"stop_points,omitempty"`
	Direction        *PtObject         `protobuf:"bytes,12,opt,name=direction" json:"direction,omitempty"`
	Geojson          *MultiLineString  `protobuf:"bytes,13,opt,name=geojson" json:"geojson,omitempty"`
	PhysicalModes    []*PhysicalMode   `protobuf:"bytes,14,rep,name=physical_modes,json=physicalModes" json:"physical_modes,omitempty"`
	Comments         []*Comment        `protobuf:"bytes,15,rep,name=comments" json:"comments,omitempty"`
	DirectionType    *string           `protobuf:"bytes,17,opt,name=direction_type,json=directionType" json:"direction_type,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *Route) Reset()                    { *m = Route{} }
func (m *Route) String() string            { return proto.CompactTextString(m) }
func (*Route) ProtoMessage()               {}
func (*Route) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *Route) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Route) GetUri() string {
	if m != nil && m.Uri != nil {
		return *m.Uri
	}
	return ""
}

func (m *Route) GetIsFrequence() bool {
	if m != nil && m.IsFrequence != nil {
		return *m.IsFrequence
	}
	return false
}

func (m *Route) GetLine() *Line {
	if m != nil {
		return m.Line
	}
	return nil
}

func (m *Route) GetJourneyPatterns() []*JourneyPattern {
	if m != nil {
		return m.JourneyPatterns
	}
	return nil
}

func (m *Route) GetMessages() []*Message {
	if m != nil {
		return m.Messages
	}
	return nil
}

func (m *Route) GetImpactUris() []string {
	if m != nil {
		return m.ImpactUris
	}
	return nil
}

func (m *Route) GetCodes() []*Code {
	if m != nil {
		return m.Codes
	}
	return nil
}

func (m *Route) GetStopPoints() []*StopPoint {
	if m != nil {
		return m.StopPoints
	}
	return nil
}

func (m *Route) GetDirection() *PtObject {
	if m != nil {
		return m.Direction
	}
	return nil
}

func (m *Route) GetGeojson() *MultiLineString {
	if m != nil {
		return m.Geojson
	}
	return nil
}

func (m *Route) GetPhysicalModes() []*PhysicalMode {
	if m != nil {
		return m.PhysicalModes
	}
	return nil
}

func (m *Route) GetComments() []*Comment {
	if m != nil {
		return m.Comments
	}
	return nil
}

func (m *Route) GetDirectionType() string {
	if m != nil && m.DirectionType != nil {
		return *m.DirectionType
	}
	return ""
}

type JourneyPattern struct {
	Name                 *string                `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Uri                  *string                `protobuf:"bytes,4,opt,name=uri" json:"uri,omitempty"`
	IsFrequence          *bool                  `protobuf:"varint,5,opt,name=is_frequence,json=isFrequence" json:"is_frequence,omitempty"`
	PhysicalMode         *PhysicalMode          `protobuf:"bytes,6,opt,name=physical_mode,json=physicalMode" json:"physical_mode,omitempty"`
	Route                *Route                 `protobuf:"bytes,7,opt,name=route" json:"route,omitempty"`
	JourneyPatternPoints []*JourneyPatternPoint `protobuf:"bytes,8,rep,name=journey_pattern_points,json=journeyPatternPoints" json:"journey_pattern_points,omitempty"`
	Messages             []*Message             `protobuf:"bytes,9,rep,name=messages" json:"messages,omitempty"`
	ImpactUris           []string               `protobuf:"bytes,22,rep,name=impact_uris,json=impactUris" json:"impact_uris,omitempty"`
	XXX_unrecognized     []byte                 `json:"-"`
}

func (m *JourneyPattern) Reset()                    { *m = JourneyPattern{} }
func (m *JourneyPattern) String() string            { return proto.CompactTextString(m) }
func (*JourneyPattern) ProtoMessage()               {}
func (*JourneyPattern) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *JourneyPattern) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *JourneyPattern) GetUri() string {
	if m != nil && m.Uri != nil {
		return *m.Uri
	}
	return ""
}

func (m *JourneyPattern) GetIsFrequence() bool {
	if m != nil && m.IsFrequence != nil {
		return *m.IsFrequence
	}
	return false
}

func (m *JourneyPattern) GetPhysicalMode() *PhysicalMode {
	if m != nil {
		return m.PhysicalMode
	}
	return nil
}

func (m *JourneyPattern) GetRoute() *Route {
	if m != nil {
		return m.Route
	}
	return nil
}

func (m *JourneyPattern) GetJourneyPatternPoints() []*JourneyPatternPoint {
	if m != nil {
		return m.JourneyPatternPoints
	}
	return nil
}

func (m *JourneyPattern) GetMessages() []*Message {
	if m != nil {
		return m.Messages
	}
	return nil
}

func (m *JourneyPattern) GetImpactUris() []string {
	if m != nil {
		return m.ImpactUris
	}
	return nil
}

type Destination struct {
	Uri              *string `protobuf:"bytes,1,req,name=uri" json:"uri,omitempty"`
	Destination      *string `protobuf:"bytes,2,opt,name=destination" json:"destination,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Destination) Reset()                    { *m = Destination{} }
func (m *Destination) String() string            { return proto.CompactTextString(m) }
func (*Destination) ProtoMessage()               {}
func (*Destination) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *Destination) GetUri() string {
	if m != nil && m.Uri != nil {
		return *m.Uri
	}
	return ""
}

func (m *Destination) GetDestination() string {
	if m != nil && m.Destination != nil {
		return *m.Destination
	}
	return ""
}

type Note struct {
	Uri              *string `protobuf:"bytes,1,req,name=uri" json:"uri,omitempty"`
	Note             *string `protobuf:"bytes,2,opt,name=note" json:"note,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Note) Reset()                    { *m = Note{} }
func (m *Note) String() string            { return proto.CompactTextString(m) }
func (*Note) ProtoMessage()               {}
func (*Note) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *Note) GetUri() string {
	if m != nil && m.Uri != nil {
		return *m.Uri
	}
	return ""
}

func (m *Note) GetNote() string {
	if m != nil && m.Note != nil {
		return *m.Note
	}
	return ""
}

type Properties struct {
	AdditionalInformations []Properties_AdditionalInformation `protobuf:"varint,1,rep,name=additional_informations,json=additionalInformations,enum=pbnavitia.Properties_AdditionalInformation" json:"additional_informations,omitempty"`
	Notes                  []*Note                            `protobuf:"bytes,5,rep,name=notes" json:"notes,omitempty"`
	Exceptions             []*CalendarException               `protobuf:"bytes,6,rep,name=exceptions" json:"exceptions,omitempty"`
	Destination            *Destination                       `protobuf:"bytes,7,opt,name=destination" json:"destination,omitempty"`
	VehicleJourneyId       *string                            `protobuf:"bytes,8,opt,name=vehicle_journey_id,json=vehicleJourneyId" json:"vehicle_journey_id,omitempty"`
	XXX_unrecognized       []byte                             `json:"-"`
}

func (m *Properties) Reset()                    { *m = Properties{} }
func (m *Properties) String() string            { return proto.CompactTextString(m) }
func (*Properties) ProtoMessage()               {}
func (*Properties) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *Properties) GetAdditionalInformations() []Properties_AdditionalInformation {
	if m != nil {
		return m.AdditionalInformations
	}
	return nil
}

func (m *Properties) GetNotes() []*Note {
	if m != nil {
		return m.Notes
	}
	return nil
}

func (m *Properties) GetExceptions() []*CalendarException {
	if m != nil {
		return m.Exceptions
	}
	return nil
}

func (m *Properties) GetDestination() *Destination {
	if m != nil {
		return m.Destination
	}
	return nil
}

func (m *Properties) GetVehicleJourneyId() string {
	if m != nil && m.VehicleJourneyId != nil {
		return *m.VehicleJourneyId
	}
	return ""
}

type HasEquipments struct {
	HasEquipments    []HasEquipments_Equipment `protobuf:"varint,1,rep,name=has_equipments,json=hasEquipments,enum=pbnavitia.HasEquipments_Equipment" json:"has_equipments,omitempty"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *HasEquipments) Reset()                    { *m = HasEquipments{} }
func (m *HasEquipments) String() string            { return proto.CompactTextString(m) }
func (*HasEquipments) ProtoMessage()               {}
func (*HasEquipments) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *HasEquipments) GetHasEquipments() []HasEquipments_Equipment {
	if m != nil {
		return m.HasEquipments
	}
	return nil
}

type StopDateTime struct {
	ArrivalDateTime       *uint64        `protobuf:"varint,1,opt,name=arrival_date_time,json=arrivalDateTime" json:"arrival_date_time,omitempty"`
	DepartureDateTime     *uint64        `protobuf:"varint,2,opt,name=departure_date_time,json=departureDateTime" json:"departure_date_time,omitempty"`
	BaseArrivalDateTime   *uint64        `protobuf:"varint,5,opt,name=base_arrival_date_time,json=baseArrivalDateTime" json:"base_arrival_date_time,omitempty"`
	BaseDepartureDateTime *uint64        `protobuf:"varint,6,opt,name=base_departure_date_time,json=baseDepartureDateTime" json:"base_departure_date_time,omitempty"`
	StopPoint             *StopPoint     `protobuf:"bytes,3,opt,name=stop_point,json=stopPoint" json:"stop_point,omitempty"`
	Properties            *Properties    `protobuf:"bytes,4,opt,name=properties" json:"properties,omitempty"`
	DataFreshness         *RTLevel       `protobuf:"varint,7,opt,name=data_freshness,json=dataFreshness,enum=pbnavitia.RTLevel" json:"data_freshness,omitempty"`
	DepartureStatus       *MessageStatus `protobuf:"varint,8,opt,name=departure_status,json=departureStatus,enum=pbnavitia.MessageStatus" json:"departure_status,omitempty"`
	ArrivalStatus         *MessageStatus `protobuf:"varint,9,opt,name=arrival_status,json=arrivalStatus,enum=pbnavitia.MessageStatus" json:"arrival_status,omitempty"`
	XXX_unrecognized      []byte         `json:"-"`
}

func (m *StopDateTime) Reset()                    { *m = StopDateTime{} }
func (m *StopDateTime) String() string            { return proto.CompactTextString(m) }
func (*StopDateTime) ProtoMessage()               {}
func (*StopDateTime) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *StopDateTime) GetArrivalDateTime() uint64 {
	if m != nil && m.ArrivalDateTime != nil {
		return *m.ArrivalDateTime
	}
	return 0
}

func (m *StopDateTime) GetDepartureDateTime() uint64 {
	if m != nil && m.DepartureDateTime != nil {
		return *m.DepartureDateTime
	}
	return 0
}

func (m *StopDateTime) GetBaseArrivalDateTime() uint64 {
	if m != nil && m.BaseArrivalDateTime != nil {
		return *m.BaseArrivalDateTime
	}
	return 0
}

func (m *StopDateTime) GetBaseDepartureDateTime() uint64 {
	if m != nil && m.BaseDepartureDateTime != nil {
		return *m.BaseDepartureDateTime
	}
	return 0
}

func (m *StopDateTime) GetStopPoint() *StopPoint {
	if m != nil {
		return m.StopPoint
	}
	return nil
}

func (m *StopDateTime) GetProperties() *Properties {
	if m != nil {
		return m.Properties
	}
	return nil
}

func (m *StopDateTime) GetDataFreshness() RTLevel {
	if m != nil && m.DataFreshness != nil {
		return *m.DataFreshness
	}
	return RTLevel_BASE_SCHEDULE
}

func (m *StopDateTime) GetDepartureStatus() MessageStatus {
	if m != nil && m.DepartureStatus != nil {
		return *m.DepartureStatus
	}
	return MessageStatus_information
}

func (m *StopDateTime) GetArrivalStatus() MessageStatus {
	if m != nil && m.ArrivalStatus != nil {
		return *m.ArrivalStatus
	}
	return MessageStatus_information
}

type StopTime struct {
	ArrivalTime         *uint64              `protobuf:"varint,1,opt,name=arrival_time,json=arrivalTime" json:"arrival_time,omitempty"`
	UtcArrivalTime      *uint64              `protobuf:"varint,10,opt,name=utc_arrival_time,json=utcArrivalTime" json:"utc_arrival_time,omitempty"`
	DepartureTime       *uint64              `protobuf:"varint,3,opt,name=departure_time,json=departureTime" json:"departure_time,omitempty"`
	UtcDepartureTime    *uint64              `protobuf:"varint,11,opt,name=utc_departure_time,json=utcDepartureTime" json:"utc_departure_time,omitempty"`
	VehicleJourney      *VehicleJourney      `protobuf:"bytes,4,opt,name=vehicle_journey,json=vehicleJourney" json:"vehicle_journey,omitempty"`
	JourneyPatternPoint *JourneyPatternPoint `protobuf:"bytes,5,opt,name=journey_pattern_point,json=journeyPatternPoint" json:"journey_pattern_point,omitempty"`
	PickupAllowed       *bool                `protobuf:"varint,6,opt,name=pickup_allowed,json=pickupAllowed" json:"pickup_allowed,omitempty"`
	DropOffAllowed      *bool                `protobuf:"varint,7,opt,name=drop_off_allowed,json=dropOffAllowed" json:"drop_off_allowed,omitempty"`
	Headsign            *string              `protobuf:"bytes,8,opt,name=headsign" json:"headsign,omitempty"`
	StopPoint           *StopPoint           `protobuf:"bytes,9,opt,name=stop_point,json=stopPoint" json:"stop_point,omitempty"`
	XXX_unrecognized    []byte               `json:"-"`
}

func (m *StopTime) Reset()                    { *m = StopTime{} }
func (m *StopTime) String() string            { return proto.CompactTextString(m) }
func (*StopTime) ProtoMessage()               {}
func (*StopTime) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *StopTime) GetArrivalTime() uint64 {
	if m != nil && m.ArrivalTime != nil {
		return *m.ArrivalTime
	}
	return 0
}

func (m *StopTime) GetUtcArrivalTime() uint64 {
	if m != nil && m.UtcArrivalTime != nil {
		return *m.UtcArrivalTime
	}
	return 0
}

func (m *StopTime) GetDepartureTime() uint64 {
	if m != nil && m.DepartureTime != nil {
		return *m.DepartureTime
	}
	return 0
}

func (m *StopTime) GetUtcDepartureTime() uint64 {
	if m != nil && m.UtcDepartureTime != nil {
		return *m.UtcDepartureTime
	}
	return 0
}

func (m *StopTime) GetVehicleJourney() *VehicleJourney {
	if m != nil {
		return m.VehicleJourney
	}
	return nil
}

func (m *StopTime) GetJourneyPatternPoint() *JourneyPatternPoint {
	if m != nil {
		return m.JourneyPatternPoint
	}
	return nil
}

func (m *StopTime) GetPickupAllowed() bool {
	if m != nil && m.PickupAllowed != nil {
		return *m.PickupAllowed
	}
	return false
}

func (m *StopTime) GetDropOffAllowed() bool {
	if m != nil && m.DropOffAllowed != nil {
		return *m.DropOffAllowed
	}
	return false
}

func (m *StopTime) GetHeadsign() string {
	if m != nil && m.Headsign != nil {
		return *m.Headsign
	}
	return ""
}

func (m *StopTime) GetStopPoint() *StopPoint {
	if m != nil {
		return m.StopPoint
	}
	return nil
}

type VehicleJourney struct {
	Name                   *string          `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Uri                    *string          `protobuf:"bytes,4,opt,name=uri" json:"uri,omitempty"`
	StopTimes              []*StopTime      `protobuf:"bytes,6,rep,name=stop_times,json=stopTimes" json:"stop_times,omitempty"`
	Route                  *Route           `protobuf:"bytes,7,opt,name=route" json:"route,omitempty"`
	JourneyPattern         *JourneyPattern  `protobuf:"bytes,8,opt,name=journey_pattern,json=journeyPattern" json:"journey_pattern,omitempty"`
	Trip                   *Trip            `protobuf:"bytes,9,opt,name=trip" json:"trip,omitempty"`
	Messages               []*Message       `protobuf:"bytes,10,rep,name=messages" json:"messages,omitempty"`
	ImpactUris             []string         `protobuf:"bytes,32,rep,name=impact_uris,json=impactUris" json:"impact_uris,omitempty"`
	IsAdapted              *bool            `protobuf:"varint,11,opt,name=is_adapted,json=isAdapted" json:"is_adapted,omitempty"`
	ValidityPattern        *ValidityPattern `protobuf:"bytes,12,opt,name=validity_pattern,json=validityPattern" json:"validity_pattern,omitempty"`
	AdaptedValidityPattern *ValidityPattern `protobuf:"bytes,13,opt,name=adapted_validity_pattern,json=adaptedValidityPattern" json:"adapted_validity_pattern,omitempty"`
	OdtMessage             *string          `protobuf:"bytes,14,opt,name=odt_message,json=odtMessage" json:"odt_message,omitempty"`
	WheelchairAccessible   *bool            `protobuf:"varint,16,opt,name=wheelchair_accessible,json=wheelchairAccessible" json:"wheelchair_accessible,omitempty"`
	BikeAccepted           *bool            `protobuf:"varint,17,opt,name=bike_accepted,json=bikeAccepted" json:"bike_accepted,omitempty"`
	AirConditioned         *bool            `protobuf:"varint,18,opt,name=air_conditioned,json=airConditioned" json:"air_conditioned,omitempty"`
	VisualAnnouncement     *bool            `protobuf:"varint,19,opt,name=visual_announcement,json=visualAnnouncement" json:"visual_announcement,omitempty"`
	AudibleAnnouncement    *bool            `protobuf:"varint,20,opt,name=audible_announcement,json=audibleAnnouncement" json:"audible_announcement,omitempty"`
	AppropriateEscort      *bool            `protobuf:"varint,21,opt,name=appropriate_escort,json=appropriateEscort" json:"appropriate_escort,omitempty"`
	AppropriateSignage     *bool            `protobuf:"varint,22,opt,name=appropriate_signage,json=appropriateSignage" json:"appropriate_signage,omitempty"`
	SchoolVehicle          *bool            `protobuf:"varint,23,opt,name=school_vehicle,json=schoolVehicle" json:"school_vehicle,omitempty"`
	Comments               []*Comment       `protobuf:"bytes,27,rep,name=comments" json:"comments,omitempty"`
	Codes                  []*Code          `protobuf:"bytes,25,rep,name=codes" json:"codes,omitempty"`
	Calendars              []*Calendar      `protobuf:"bytes,26,rep,name=calendars" json:"calendars,omitempty"`
	XXX_unrecognized       []byte           `json:"-"`
}

func (m *VehicleJourney) Reset()                    { *m = VehicleJourney{} }
func (m *VehicleJourney) String() string            { return proto.CompactTextString(m) }
func (*VehicleJourney) ProtoMessage()               {}
func (*VehicleJourney) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *VehicleJourney) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *VehicleJourney) GetUri() string {
	if m != nil && m.Uri != nil {
		return *m.Uri
	}
	return ""
}

func (m *VehicleJourney) GetStopTimes() []*StopTime {
	if m != nil {
		return m.StopTimes
	}
	return nil
}

func (m *VehicleJourney) GetRoute() *Route {
	if m != nil {
		return m.Route
	}
	return nil
}

func (m *VehicleJourney) GetJourneyPattern() *JourneyPattern {
	if m != nil {
		return m.JourneyPattern
	}
	return nil
}

func (m *VehicleJourney) GetTrip() *Trip {
	if m != nil {
		return m.Trip
	}
	return nil
}

func (m *VehicleJourney) GetMessages() []*Message {
	if m != nil {
		return m.Messages
	}
	return nil
}

func (m *VehicleJourney) GetImpactUris() []string {
	if m != nil {
		return m.ImpactUris
	}
	return nil
}

func (m *VehicleJourney) GetIsAdapted() bool {
	if m != nil && m.IsAdapted != nil {
		return *m.IsAdapted
	}
	return false
}

func (m *VehicleJourney) GetValidityPattern() *ValidityPattern {
	if m != nil {
		return m.ValidityPattern
	}
	return nil
}

func (m *VehicleJourney) GetAdaptedValidityPattern() *ValidityPattern {
	if m != nil {
		return m.AdaptedValidityPattern
	}
	return nil
}

func (m *VehicleJourney) GetOdtMessage() string {
	if m != nil && m.OdtMessage != nil {
		return *m.OdtMessage
	}
	return ""
}

func (m *VehicleJourney) GetWheelchairAccessible() bool {
	if m != nil && m.WheelchairAccessible != nil {
		return *m.WheelchairAccessible
	}
	return false
}

func (m *VehicleJourney) GetBikeAccepted() bool {
	if m != nil && m.BikeAccepted != nil {
		return *m.BikeAccepted
	}
	return false
}

func (m *VehicleJourney) GetAirConditioned() bool {
	if m != nil && m.AirConditioned != nil {
		return *m.AirConditioned
	}
	return false
}

func (m *VehicleJourney) GetVisualAnnouncement() bool {
	if m != nil && m.VisualAnnouncement != nil {
		return *m.VisualAnnouncement
	}
	return false
}

func (m *VehicleJourney) GetAudibleAnnouncement() bool {
	if m != nil && m.AudibleAnnouncement != nil {
		return *m.AudibleAnnouncement
	}
	return false
}

func (m *VehicleJourney) GetAppropriateEscort() bool {
	if m != nil && m.AppropriateEscort != nil {
		return *m.AppropriateEscort
	}
	return false
}

func (m *VehicleJourney) GetAppropriateSignage() bool {
	if m != nil && m.AppropriateSignage != nil {
		return *m.AppropriateSignage
	}
	return false
}

func (m *VehicleJourney) GetSchoolVehicle() bool {
	if m != nil && m.SchoolVehicle != nil {
		return *m.SchoolVehicle
	}
	return false
}

func (m *VehicleJourney) GetComments() []*Comment {
	if m != nil {
		return m.Comments
	}
	return nil
}

func (m *VehicleJourney) GetCodes() []*Code {
	if m != nil {
		return m.Codes
	}
	return nil
}

func (m *VehicleJourney) GetCalendars() []*Calendar {
	if m != nil {
		return m.Calendars
	}
	return nil
}

type Trip struct {
	Uri              *string `protobuf:"bytes,1,opt,name=uri" json:"uri,omitempty"`
	Name             *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Trip) Reset()                    { *m = Trip{} }
func (m *Trip) String() string            { return proto.CompactTextString(m) }
func (*Trip) ProtoMessage()               {}
func (*Trip) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *Trip) GetUri() string {
	if m != nil && m.Uri != nil {
		return *m.Uri
	}
	return ""
}

func (m *Trip) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type JourneyPatternPoint struct {
	Uri              *string         `protobuf:"bytes,3,opt,name=uri" json:"uri,omitempty"`
	Order            *int32          `protobuf:"varint,4,opt,name=order" json:"order,omitempty"`
	StopPoint        *StopPoint      `protobuf:"bytes,5,opt,name=stop_point,json=stopPoint" json:"stop_point,omitempty"`
	JourneyPattern   *JourneyPattern `protobuf:"bytes,6,opt,name=journey_pattern,json=journeyPattern" json:"journey_pattern,omitempty"`
	Messages         []*Message      `protobuf:"bytes,7,rep,name=messages" json:"messages,omitempty"`
	ImpactUris       []string        `protobuf:"bytes,22,rep,name=impact_uris,json=impactUris" json:"impact_uris,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *JourneyPatternPoint) Reset()                    { *m = JourneyPatternPoint{} }
func (m *JourneyPatternPoint) String() string            { return proto.CompactTextString(m) }
func (*JourneyPatternPoint) ProtoMessage()               {}
func (*JourneyPatternPoint) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

func (m *JourneyPatternPoint) GetUri() string {
	if m != nil && m.Uri != nil {
		return *m.Uri
	}
	return ""
}

func (m *JourneyPatternPoint) GetOrder() int32 {
	if m != nil && m.Order != nil {
		return *m.Order
	}
	return 0
}

func (m *JourneyPatternPoint) GetStopPoint() *StopPoint {
	if m != nil {
		return m.StopPoint
	}
	return nil
}

func (m *JourneyPatternPoint) GetJourneyPattern() *JourneyPattern {
	if m != nil {
		return m.JourneyPattern
	}
	return nil
}

func (m *JourneyPatternPoint) GetMessages() []*Message {
	if m != nil {
		return m.Messages
	}
	return nil
}

func (m *JourneyPatternPoint) GetImpactUris() []string {
	if m != nil {
		return m.ImpactUris
	}
	return nil
}

type Contributor struct {
	Uri              *string `protobuf:"bytes,1,opt,name=uri" json:"uri,omitempty"`
	Name             *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Website          *string `protobuf:"bytes,3,opt,name=website" json:"website,omitempty"`
	License          *string `protobuf:"bytes,4,opt,name=license" json:"license,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Contributor) Reset()                    { *m = Contributor{} }
func (m *Contributor) String() string            { return proto.CompactTextString(m) }
func (*Contributor) ProtoMessage()               {}
func (*Contributor) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{32} }

func (m *Contributor) GetUri() string {
	if m != nil && m.Uri != nil {
		return *m.Uri
	}
	return ""
}

func (m *Contributor) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Contributor) GetWebsite() string {
	if m != nil && m.Website != nil {
		return *m.Website
	}
	return ""
}

func (m *Contributor) GetLicense() string {
	if m != nil && m.License != nil {
		return *m.License
	}
	return ""
}

type Dataset struct {
	Uri                 *string      `protobuf:"bytes,1,req,name=uri" json:"uri,omitempty"`
	Contributor         *Contributor `protobuf:"bytes,2,req,name=contributor" json:"contributor,omitempty"`
	StartValidationDate *uint64      `protobuf:"varint,3,req,name=start_validation_date,json=startValidationDate" json:"start_validation_date,omitempty"`
	EndValidationDate   *uint64      `protobuf:"varint,4,req,name=end_validation_date,json=endValidationDate" json:"end_validation_date,omitempty"`
	RealtimeLevel       *RTLevel     `protobuf:"varint,5,req,name=realtime_level,json=realtimeLevel,enum=pbnavitia.RTLevel" json:"realtime_level,omitempty"`
	Desc                *string      `protobuf:"bytes,6,opt,name=desc" json:"desc,omitempty"`
	System              *string      `protobuf:"bytes,7,opt,name=system" json:"system,omitempty"`
	XXX_unrecognized    []byte       `json:"-"`
}

func (m *Dataset) Reset()                    { *m = Dataset{} }
func (m *Dataset) String() string            { return proto.CompactTextString(m) }
func (*Dataset) ProtoMessage()               {}
func (*Dataset) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{33} }

func (m *Dataset) GetUri() string {
	if m != nil && m.Uri != nil {
		return *m.Uri
	}
	return ""
}

func (m *Dataset) GetContributor() *Contributor {
	if m != nil {
		return m.Contributor
	}
	return nil
}

func (m *Dataset) GetStartValidationDate() uint64 {
	if m != nil && m.StartValidationDate != nil {
		return *m.StartValidationDate
	}
	return 0
}

func (m *Dataset) GetEndValidationDate() uint64 {
	if m != nil && m.EndValidationDate != nil {
		return *m.EndValidationDate
	}
	return 0
}

func (m *Dataset) GetRealtimeLevel() RTLevel {
	if m != nil && m.RealtimeLevel != nil {
		return *m.RealtimeLevel
	}
	return RTLevel_BASE_SCHEDULE
}

func (m *Dataset) GetDesc() string {
	if m != nil && m.Desc != nil {
		return *m.Desc
	}
	return ""
}

func (m *Dataset) GetSystem() string {
	if m != nil && m.System != nil {
		return *m.System
	}
	return ""
}

type PoiType struct {
	Uri              *string `protobuf:"bytes,1,opt,name=uri" json:"uri,omitempty"`
	Name             *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PoiType) Reset()                    { *m = PoiType{} }
func (m *PoiType) String() string            { return proto.CompactTextString(m) }
func (*PoiType) ProtoMessage()               {}
func (*PoiType) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{34} }

func (m *PoiType) GetUri() string {
	if m != nil && m.Uri != nil {
		return *m.Uri
	}
	return ""
}

func (m *PoiType) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type Poi struct {
	Uri                   *string                 `protobuf:"bytes,3,opt,name=uri" json:"uri,omitempty"`
	Name                  *string                 `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	Coord                 *GeographicalCoord      `protobuf:"bytes,6,opt,name=coord" json:"coord,omitempty"`
	PoiType               *PoiType                `protobuf:"bytes,7,opt,name=poi_type,json=poiType" json:"poi_type,omitempty"`
	AdministrativeRegions []*AdministrativeRegion `protobuf:"bytes,10,rep,name=administrative_regions,json=administrativeRegions" json:"administrative_regions,omitempty"`
	Address               *Address                `protobuf:"bytes,11,opt,name=address" json:"address,omitempty"`
	Properties            []*Code                 `protobuf:"bytes,12,rep,name=properties" json:"properties,omitempty"`
	Label                 *string                 `protobuf:"bytes,13,opt,name=label" json:"label,omitempty"`
	XXX_unrecognized      []byte                  `json:"-"`
}

func (m *Poi) Reset()                    { *m = Poi{} }
func (m *Poi) String() string            { return proto.CompactTextString(m) }
func (*Poi) ProtoMessage()               {}
func (*Poi) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{35} }

func (m *Poi) GetUri() string {
	if m != nil && m.Uri != nil {
		return *m.Uri
	}
	return ""
}

func (m *Poi) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Poi) GetCoord() *GeographicalCoord {
	if m != nil {
		return m.Coord
	}
	return nil
}

func (m *Poi) GetPoiType() *PoiType {
	if m != nil {
		return m.PoiType
	}
	return nil
}

func (m *Poi) GetAdministrativeRegions() []*AdministrativeRegion {
	if m != nil {
		return m.AdministrativeRegions
	}
	return nil
}

func (m *Poi) GetAddress() *Address {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *Poi) GetProperties() []*Code {
	if m != nil {
		return m.Properties
	}
	return nil
}

func (m *Poi) GetLabel() string {
	if m != nil && m.Label != nil {
		return *m.Label
	}
	return ""
}

type Network struct {
	Uri              *string    `protobuf:"bytes,3,opt,name=uri" json:"uri,omitempty"`
	Name             *string    `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	Messages         []*Message `protobuf:"bytes,6,rep,name=messages" json:"messages,omitempty"`
	ImpactUris       []string   `protobuf:"bytes,22,rep,name=impact_uris,json=impactUris" json:"impact_uris,omitempty"`
	Codes            []*Code    `protobuf:"bytes,7,rep,name=codes" json:"codes,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *Network) Reset()                    { *m = Network{} }
func (m *Network) String() string            { return proto.CompactTextString(m) }
func (*Network) ProtoMessage()               {}
func (*Network) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{36} }

func (m *Network) GetUri() string {
	if m != nil && m.Uri != nil {
		return *m.Uri
	}
	return ""
}

func (m *Network) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Network) GetMessages() []*Message {
	if m != nil {
		return m.Messages
	}
	return nil
}

func (m *Network) GetImpactUris() []string {
	if m != nil {
		return m.ImpactUris
	}
	return nil
}

func (m *Network) GetCodes() []*Code {
	if m != nil {
		return m.Codes
	}
	return nil
}

type PhysicalMode struct {
	Uri              *string `protobuf:"bytes,3,opt,name=uri" json:"uri,omitempty"`
	Name             *string `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PhysicalMode) Reset()                    { *m = PhysicalMode{} }
func (m *PhysicalMode) String() string            { return proto.CompactTextString(m) }
func (*PhysicalMode) ProtoMessage()               {}
func (*PhysicalMode) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{37} }

func (m *PhysicalMode) GetUri() string {
	if m != nil && m.Uri != nil {
		return *m.Uri
	}
	return ""
}

func (m *PhysicalMode) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type CommercialMode struct {
	Uri              *string `protobuf:"bytes,3,opt,name=uri" json:"uri,omitempty"`
	Name             *string `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CommercialMode) Reset()                    { *m = CommercialMode{} }
func (m *CommercialMode) String() string            { return proto.CompactTextString(m) }
func (*CommercialMode) ProtoMessage()               {}
func (*CommercialMode) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{38} }

func (m *CommercialMode) GetUri() string {
	if m != nil && m.Uri != nil {
		return *m.Uri
	}
	return ""
}

func (m *CommercialMode) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type Connection struct {
	Origin           *StopPoint `protobuf:"bytes,1,opt,name=origin" json:"origin,omitempty"`
	Destination      *StopPoint `protobuf:"bytes,2,opt,name=destination" json:"destination,omitempty"`
	Duration         *int32     `protobuf:"varint,3,opt,name=duration" json:"duration,omitempty"`
	DisplayDuration  *int32     `protobuf:"varint,4,opt,name=display_duration,json=displayDuration" json:"display_duration,omitempty"`
	MaxDuration      *int32     `protobuf:"varint,5,opt,name=max_duration,json=maxDuration" json:"max_duration,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *Connection) Reset()                    { *m = Connection{} }
func (m *Connection) String() string            { return proto.CompactTextString(m) }
func (*Connection) ProtoMessage()               {}
func (*Connection) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{39} }

func (m *Connection) GetOrigin() *StopPoint {
	if m != nil {
		return m.Origin
	}
	return nil
}

func (m *Connection) GetDestination() *StopPoint {
	if m != nil {
		return m.Destination
	}
	return nil
}

func (m *Connection) GetDuration() int32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

func (m *Connection) GetDisplayDuration() int32 {
	if m != nil && m.DisplayDuration != nil {
		return *m.DisplayDuration
	}
	return 0
}

func (m *Connection) GetMaxDuration() int32 {
	if m != nil && m.MaxDuration != nil {
		return *m.MaxDuration
	}
	return 0
}

type Company struct {
	Uri              *string `protobuf:"bytes,3,opt,name=uri" json:"uri,omitempty"`
	Name             *string `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	Codes            []*Code `protobuf:"bytes,8,rep,name=codes" json:"codes,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Company) Reset()                    { *m = Company{} }
func (m *Company) String() string            { return proto.CompactTextString(m) }
func (*Company) ProtoMessage()               {}
func (*Company) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{40} }

func (m *Company) GetUri() string {
	if m != nil && m.Uri != nil {
		return *m.Uri
	}
	return ""
}

func (m *Company) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Company) GetCodes() []*Code {
	if m != nil {
		return m.Codes
	}
	return nil
}

type Address struct {
	Uri                   *string                 `protobuf:"bytes,3,opt,name=uri" json:"uri,omitempty"`
	Name                  *string                 `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	Coord                 *GeographicalCoord      `protobuf:"bytes,6,opt,name=coord" json:"coord,omitempty"`
	AdministrativeRegions []*AdministrativeRegion `protobuf:"bytes,10,rep,name=administrative_regions,json=administrativeRegions" json:"administrative_regions,omitempty"`
	HouseNumber           *int32                  `protobuf:"varint,2,opt,name=house_number,json=houseNumber" json:"house_number,omitempty"`
	Label                 *string                 `protobuf:"bytes,16,opt,name=label" json:"label,omitempty"`
	XXX_unrecognized      []byte                  `json:"-"`
}

func (m *Address) Reset()                    { *m = Address{} }
func (m *Address) String() string            { return proto.CompactTextString(m) }
func (*Address) ProtoMessage()               {}
func (*Address) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{41} }

func (m *Address) GetUri() string {
	if m != nil && m.Uri != nil {
		return *m.Uri
	}
	return ""
}

func (m *Address) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Address) GetCoord() *GeographicalCoord {
	if m != nil {
		return m.Coord
	}
	return nil
}

func (m *Address) GetAdministrativeRegions() []*AdministrativeRegion {
	if m != nil {
		return m.AdministrativeRegions
	}
	return nil
}

func (m *Address) GetHouseNumber() int32 {
	if m != nil && m.HouseNumber != nil {
		return *m.HouseNumber
	}
	return 0
}

func (m *Address) GetLabel() string {
	if m != nil && m.Label != nil {
		return *m.Label
	}
	return ""
}

type CalendarException struct {
	Uri              *string        `protobuf:"bytes,1,opt,name=uri" json:"uri,omitempty"`
	Date             *string        `protobuf:"bytes,2,opt,name=date" json:"date,omitempty"`
	Type             *ExceptionType `protobuf:"varint,3,opt,name=type,enum=pbnavitia.ExceptionType" json:"type,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *CalendarException) Reset()                    { *m = CalendarException{} }
func (m *CalendarException) String() string            { return proto.CompactTextString(m) }
func (*CalendarException) ProtoMessage()               {}
func (*CalendarException) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{42} }

func (m *CalendarException) GetUri() string {
	if m != nil && m.Uri != nil {
		return *m.Uri
	}
	return ""
}

func (m *CalendarException) GetDate() string {
	if m != nil && m.Date != nil {
		return *m.Date
	}
	return ""
}

func (m *CalendarException) GetType() ExceptionType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ExceptionType_Add
}

type CalendarPeriod struct {
	Begin            *string `protobuf:"bytes,1,opt,name=begin" json:"begin,omitempty"`
	End              *string `protobuf:"bytes,2,opt,name=end" json:"end,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CalendarPeriod) Reset()                    { *m = CalendarPeriod{} }
func (m *CalendarPeriod) String() string            { return proto.CompactTextString(m) }
func (*CalendarPeriod) ProtoMessage()               {}
func (*CalendarPeriod) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{43} }

func (m *CalendarPeriod) GetBegin() string {
	if m != nil && m.Begin != nil {
		return *m.Begin
	}
	return ""
}

func (m *CalendarPeriod) GetEnd() string {
	if m != nil && m.End != nil {
		return *m.End
	}
	return ""
}

type WeekPattern struct {
	Monday           *bool  `protobuf:"varint,1,opt,name=monday" json:"monday,omitempty"`
	Tuesday          *bool  `protobuf:"varint,2,opt,name=tuesday" json:"tuesday,omitempty"`
	Wednesday        *bool  `protobuf:"varint,3,opt,name=wednesday" json:"wednesday,omitempty"`
	Thursday         *bool  `protobuf:"varint,4,opt,name=thursday" json:"thursday,omitempty"`
	Friday           *bool  `protobuf:"varint,5,opt,name=friday" json:"friday,omitempty"`
	Saturday         *bool  `protobuf:"varint,6,opt,name=saturday" json:"saturday,omitempty"`
	Sunday           *bool  `protobuf:"varint,7,opt,name=sunday" json:"sunday,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *WeekPattern) Reset()                    { *m = WeekPattern{} }
func (m *WeekPattern) String() string            { return proto.CompactTextString(m) }
func (*WeekPattern) ProtoMessage()               {}
func (*WeekPattern) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{44} }

func (m *WeekPattern) GetMonday() bool {
	if m != nil && m.Monday != nil {
		return *m.Monday
	}
	return false
}

func (m *WeekPattern) GetTuesday() bool {
	if m != nil && m.Tuesday != nil {
		return *m.Tuesday
	}
	return false
}

func (m *WeekPattern) GetWednesday() bool {
	if m != nil && m.Wednesday != nil {
		return *m.Wednesday
	}
	return false
}

func (m *WeekPattern) GetThursday() bool {
	if m != nil && m.Thursday != nil {
		return *m.Thursday
	}
	return false
}

func (m *WeekPattern) GetFriday() bool {
	if m != nil && m.Friday != nil {
		return *m.Friday
	}
	return false
}

func (m *WeekPattern) GetSaturday() bool {
	if m != nil && m.Saturday != nil {
		return *m.Saturday
	}
	return false
}

func (m *WeekPattern) GetSunday() bool {
	if m != nil && m.Sunday != nil {
		return *m.Sunday
	}
	return false
}

type Calendar struct {
	Uri              *string              `protobuf:"bytes,1,opt,name=uri" json:"uri,omitempty"`
	Name             *string              `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	WeekPattern      *WeekPattern         `protobuf:"bytes,3,opt,name=week_pattern,json=weekPattern" json:"week_pattern,omitempty"`
	ActivePeriods    []*CalendarPeriod    `protobuf:"bytes,4,rep,name=active_periods,json=activePeriods" json:"active_periods,omitempty"`
	Exceptions       []*CalendarException `protobuf:"bytes,5,rep,name=exceptions" json:"exceptions,omitempty"`
	ValidityPattern  *ValidityPattern     `protobuf:"bytes,6,opt,name=validity_pattern,json=validityPattern" json:"validity_pattern,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *Calendar) Reset()                    { *m = Calendar{} }
func (m *Calendar) String() string            { return proto.CompactTextString(m) }
func (*Calendar) ProtoMessage()               {}
func (*Calendar) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{45} }

func (m *Calendar) GetUri() string {
	if m != nil && m.Uri != nil {
		return *m.Uri
	}
	return ""
}

func (m *Calendar) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Calendar) GetWeekPattern() *WeekPattern {
	if m != nil {
		return m.WeekPattern
	}
	return nil
}

func (m *Calendar) GetActivePeriods() []*CalendarPeriod {
	if m != nil {
		return m.ActivePeriods
	}
	return nil
}

func (m *Calendar) GetExceptions() []*CalendarException {
	if m != nil {
		return m.Exceptions
	}
	return nil
}

func (m *Calendar) GetValidityPattern() *ValidityPattern {
	if m != nil {
		return m.ValidityPattern
	}
	return nil
}

type ValidityPattern struct {
	BeginningDate    *string `protobuf:"bytes,1,opt,name=beginning_date,json=beginningDate" json:"beginning_date,omitempty"`
	Days             *string `protobuf:"bytes,2,opt,name=days" json:"days,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ValidityPattern) Reset()                    { *m = ValidityPattern{} }
func (m *ValidityPattern) String() string            { return proto.CompactTextString(m) }
func (*ValidityPattern) ProtoMessage()               {}
func (*ValidityPattern) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{46} }

func (m *ValidityPattern) GetBeginningDate() string {
	if m != nil && m.BeginningDate != nil {
		return *m.BeginningDate
	}
	return ""
}

func (m *ValidityPattern) GetDays() string {
	if m != nil && m.Days != nil {
		return *m.Days
	}
	return ""
}

type LocationContext struct {
	Place            *string `protobuf:"bytes,1,req,name=place" json:"place,omitempty"`
	AccessDuration   *int32  `protobuf:"varint,2,req,name=access_duration,json=accessDuration" json:"access_duration,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *LocationContext) Reset()                    { *m = LocationContext{} }
func (m *LocationContext) String() string            { return proto.CompactTextString(m) }
func (*LocationContext) ProtoMessage()               {}
func (*LocationContext) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{47} }

func (m *LocationContext) GetPlace() string {
	if m != nil && m.Place != nil {
		return *m.Place
	}
	return ""
}

func (m *LocationContext) GetAccessDuration() int32 {
	if m != nil && m.AccessDuration != nil {
		return *m.AccessDuration
	}
	return 0
}

type PtObject struct {
	Name                 *string               `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Uri                  *string               `protobuf:"bytes,2,req,name=uri" json:"uri,omitempty"`
	EmbeddedType         *NavitiaType          `protobuf:"varint,3,opt,name=embedded_type,json=embeddedType,enum=pbnavitia.NavitiaType" json:"embedded_type,omitempty"`
	StopArea             *StopArea             `protobuf:"bytes,4,opt,name=stop_area,json=stopArea" json:"stop_area,omitempty"`
	Poi                  *Poi                  `protobuf:"bytes,5,opt,name=poi" json:"poi,omitempty"`
	StopPoint            *StopPoint            `protobuf:"bytes,6,opt,name=stop_point,json=stopPoint" json:"stop_point,omitempty"`
	Address              *Address              `protobuf:"bytes,7,opt,name=address" json:"address,omitempty"`
	Line                 *Line                 `protobuf:"bytes,9,opt,name=line" json:"line,omitempty"`
	Network              *Network              `protobuf:"bytes,10,opt,name=network" json:"network,omitempty"`
	CommercialMode       *CommercialMode       `protobuf:"bytes,11,opt,name=commercial_mode,json=commercialMode" json:"commercial_mode,omitempty"`
	Route                *Route                `protobuf:"bytes,12,opt,name=route" json:"route,omitempty"`
	AdministrativeRegion *AdministrativeRegion `protobuf:"bytes,13,opt,name=administrative_region,json=administrativeRegion" json:"administrative_region,omitempty"`
	Distance             *int32                `protobuf:"varint,14,opt,name=distance" json:"distance,omitempty"`
	Quality              *int32                `protobuf:"varint,15,opt,name=quality" json:"quality,omitempty"`
	Company              *Company              `protobuf:"bytes,16,opt,name=company" json:"company,omitempty"`
	VehicleJourney       *VehicleJourney       `protobuf:"bytes,17,opt,name=vehicle_journey,json=vehicleJourney" json:"vehicle_journey,omitempty"`
	Calendar             *Calendar             `protobuf:"bytes,18,opt,name=calendar" json:"calendar,omitempty"`
	Score                *int32                `protobuf:"varint,19,opt,name=score" json:"score,omitempty"`
	Trip                 *Trip                 `protobuf:"bytes,20,opt,name=trip" json:"trip,omitempty"`
	Scores               []int32               `protobuf:"varint,21,rep,name=scores" json:"scores,omitempty"`
	XXX_unrecognized     []byte                `json:"-"`
}

func (m *PtObject) Reset()                    { *m = PtObject{} }
func (m *PtObject) String() string            { return proto.CompactTextString(m) }
func (*PtObject) ProtoMessage()               {}
func (*PtObject) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{48} }

func (m *PtObject) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *PtObject) GetUri() string {
	if m != nil && m.Uri != nil {
		return *m.Uri
	}
	return ""
}

func (m *PtObject) GetEmbeddedType() NavitiaType {
	if m != nil && m.EmbeddedType != nil {
		return *m.EmbeddedType
	}
	return NavitiaType_LINE
}

func (m *PtObject) GetStopArea() *StopArea {
	if m != nil {
		return m.StopArea
	}
	return nil
}

func (m *PtObject) GetPoi() *Poi {
	if m != nil {
		return m.Poi
	}
	return nil
}

func (m *PtObject) GetStopPoint() *StopPoint {
	if m != nil {
		return m.StopPoint
	}
	return nil
}

func (m *PtObject) GetAddress() *Address {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *PtObject) GetLine() *Line {
	if m != nil {
		return m.Line
	}
	return nil
}

func (m *PtObject) GetNetwork() *Network {
	if m != nil {
		return m.Network
	}
	return nil
}

func (m *PtObject) GetCommercialMode() *CommercialMode {
	if m != nil {
		return m.CommercialMode
	}
	return nil
}

func (m *PtObject) GetRoute() *Route {
	if m != nil {
		return m.Route
	}
	return nil
}

func (m *PtObject) GetAdministrativeRegion() *AdministrativeRegion {
	if m != nil {
		return m.AdministrativeRegion
	}
	return nil
}

func (m *PtObject) GetDistance() int32 {
	if m != nil && m.Distance != nil {
		return *m.Distance
	}
	return 0
}

func (m *PtObject) GetQuality() int32 {
	if m != nil && m.Quality != nil {
		return *m.Quality
	}
	return 0
}

func (m *PtObject) GetCompany() *Company {
	if m != nil {
		return m.Company
	}
	return nil
}

func (m *PtObject) GetVehicleJourney() *VehicleJourney {
	if m != nil {
		return m.VehicleJourney
	}
	return nil
}

func (m *PtObject) GetCalendar() *Calendar {
	if m != nil {
		return m.Calendar
	}
	return nil
}

func (m *PtObject) GetScore() int32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *PtObject) GetTrip() *Trip {
	if m != nil {
		return m.Trip
	}
	return nil
}

func (m *PtObject) GetScores() []int32 {
	if m != nil {
		return m.Scores
	}
	return nil
}

type FareZone struct {
	Name             *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *FareZone) Reset()                    { *m = FareZone{} }
func (m *FareZone) String() string            { return proto.CompactTextString(m) }
func (*FareZone) ProtoMessage()               {}
func (*FareZone) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{49} }

func (m *FareZone) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*Code)(nil), "pbnavitia.Code")
	proto.RegisterType((*Period)(nil), "pbnavitia.Period")
	proto.RegisterType((*Property)(nil), "pbnavitia.Property")
	proto.RegisterType((*Channel)(nil), "pbnavitia.Channel")
	proto.RegisterType((*MessageContent)(nil), "pbnavitia.MessageContent")
	proto.RegisterType((*Message)(nil), "pbnavitia.Message")
	proto.RegisterType((*Severity)(nil), "pbnavitia.Severity")
	proto.RegisterType((*StopTimeUpdate)(nil), "pbnavitia.StopTimeUpdate")
	proto.RegisterType((*LineSectionImpact)(nil), "pbnavitia.LineSectionImpact")
	proto.RegisterType((*ImpactedObject)(nil), "pbnavitia.ImpactedObject")
	proto.RegisterType((*DisruptionProperty)(nil), "pbnavitia.DisruptionProperty")
	proto.RegisterType((*Impact)(nil), "pbnavitia.Impact")
	proto.RegisterType((*GeographicalCoord)(nil), "pbnavitia.GeographicalCoord")
	proto.RegisterType((*AdministrativeRegion)(nil), "pbnavitia.AdministrativeRegion")
	proto.RegisterType((*Comment)(nil), "pbnavitia.Comment")
	proto.RegisterType((*StopArea)(nil), "pbnavitia.StopArea")
	proto.RegisterType((*StopPoint)(nil), "pbnavitia.StopPoint")
	proto.RegisterType((*LineString)(nil), "pbnavitia.LineString")
	proto.RegisterType((*MultiLineString)(nil), "pbnavitia.MultiLineString")
	proto.RegisterType((*Line)(nil), "pbnavitia.Line")
	proto.RegisterType((*LineGroup)(nil), "pbnavitia.LineGroup")
	proto.RegisterType((*Route)(nil), "pbnavitia.Route")
	proto.RegisterType((*JourneyPattern)(nil), "pbnavitia.JourneyPattern")
	proto.RegisterType((*Destination)(nil), "pbnavitia.Destination")
	proto.RegisterType((*Note)(nil), "pbnavitia.Note")
	proto.RegisterType((*Properties)(nil), "pbnavitia.Properties")
	proto.RegisterType((*HasEquipments)(nil), "pbnavitia.hasEquipments")
	proto.RegisterType((*StopDateTime)(nil), "pbnavitia.StopDateTime")
	proto.RegisterType((*StopTime)(nil), "pbnavitia.StopTime")
	proto.RegisterType((*VehicleJourney)(nil), "pbnavitia.VehicleJourney")
	proto.RegisterType((*Trip)(nil), "pbnavitia.Trip")
	proto.RegisterType((*JourneyPatternPoint)(nil), "pbnavitia.JourneyPatternPoint")
	proto.RegisterType((*Contributor)(nil), "pbnavitia.Contributor")
	proto.RegisterType((*Dataset)(nil), "pbnavitia.Dataset")
	proto.RegisterType((*PoiType)(nil), "pbnavitia.PoiType")
	proto.RegisterType((*Poi)(nil), "pbnavitia.Poi")
	proto.RegisterType((*Network)(nil), "pbnavitia.Network")
	proto.RegisterType((*PhysicalMode)(nil), "pbnavitia.PhysicalMode")
	proto.RegisterType((*CommercialMode)(nil), "pbnavitia.CommercialMode")
	proto.RegisterType((*Connection)(nil), "pbnavitia.Connection")
	proto.RegisterType((*Company)(nil), "pbnavitia.Company")
	proto.RegisterType((*Address)(nil), "pbnavitia.Address")
	proto.RegisterType((*CalendarException)(nil), "pbnavitia.CalendarException")
	proto.RegisterType((*CalendarPeriod)(nil), "pbnavitia.CalendarPeriod")
	proto.RegisterType((*WeekPattern)(nil), "pbnavitia.WeekPattern")
	proto.RegisterType((*Calendar)(nil), "pbnavitia.Calendar")
	proto.RegisterType((*ValidityPattern)(nil), "pbnavitia.ValidityPattern")
	proto.RegisterType((*LocationContext)(nil), "pbnavitia.LocationContext")
	proto.RegisterType((*PtObject)(nil), "pbnavitia.PtObject")
	proto.RegisterType((*FareZone)(nil), "pbnavitia.FareZone")
	proto.RegisterEnum("pbnavitia.NavitiaType", NavitiaType_name, NavitiaType_value)
	proto.RegisterEnum("pbnavitia.API", API_name, API_value)
	proto.RegisterEnum("pbnavitia.ResponseStatus", ResponseStatus_name, ResponseStatus_value)
	proto.RegisterEnum("pbnavitia.ActiveStatus", ActiveStatus_name, ActiveStatus_value)
	proto.RegisterEnum("pbnavitia.MessageStatus", MessageStatus_name, MessageStatus_value)
	proto.RegisterEnum("pbnavitia.StopTimeUpdateStatus", StopTimeUpdateStatus_name, StopTimeUpdateStatus_value)
	proto.RegisterEnum("pbnavitia.OdtLevel", OdtLevel_name, OdtLevel_value)
	proto.RegisterEnum("pbnavitia.RTLevel", RTLevel_name, RTLevel_value)
	proto.RegisterEnum("pbnavitia.ExceptionType", ExceptionType_name, ExceptionType_value)
	proto.RegisterEnum("pbnavitia.Channel_ChannelType", Channel_ChannelType_name, Channel_ChannelType_value)
	proto.RegisterEnum("pbnavitia.Severity_Effect", Severity_Effect_name, Severity_Effect_value)
	proto.RegisterEnum("pbnavitia.Properties_AdditionalInformation", Properties_AdditionalInformation_name, Properties_AdditionalInformation_value)
	proto.RegisterEnum("pbnavitia.HasEquipments_Equipment", HasEquipments_Equipment_name, HasEquipments_Equipment_value)
}

func init() { proto.RegisterFile("type.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 4982 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x3b, 0x4b, 0x6f, 0x1b, 0x49,
	0x7a, 0xc3, 0x37, 0xf9, 0xf1, 0xa1, 0x52, 0xe9, 0x61, 0xda, 0xe3, 0x99, 0x95, 0x39, 0x3b, 0x59,
	0xc7, 0xeb, 0xf5, 0xcc, 0x7a, 0x66, 0x1f, 0xb3, 0xaf, 0xd9, 0x36, 0xd9, 0xb6, 0x39, 0x2b, 0x91,
	0x44, 0x89, 0xf2, 0xc6, 0xb9, 0x34, 0x4a, 0xec, 0x92, 0xd4, 0xe3, 0x66, 0x77, 0x6f, 0x77, 0xd3,
	0xb6, 0xe6, 0x1e, 0x04, 0x48, 0xf2, 0x23, 0x12, 0x60, 0x81, 0x00, 0xc9, 0x21, 0x40, 0x80, 0xe4,
	0x1f, 0xe4, 0x96, 0x00, 0x41, 0x72, 0x4c, 0x2e, 0x39, 0x64, 0x11, 0xe4, 0x18, 0xe4, 0x92, 0x5b,
	0xf0, 0x55, 0x55, 0x37, 0x9b, 0x0f, 0xc9, 0xd2, 0xae, 0xe7, 0xc4, 0xae, 0xef, 0x51, 0x8f, 0xaf,
	0xbe, 0x57, 0xd5, 0x57, 0x04, 0x88, 0xcf, 0x03, 0xf1, 0x20, 0x08, 0xfd, 0xd8, 0xa7, 0xb5, 0xe0,
	0xd8, 0xe3, 0x2f, 0x9d, 0xd8, 0xe1, 0x9d, 0x8f, 0xa1, 0xd8, 0xf5, 0x6d, 0x41, 0x29, 0x14, 0x91,
	0xa0, 0x9d, 0xdb, 0xcb, 0xdf, 0xad, 0x31, 0xf9, 0x4d, 0xb7, 0xa1, 0xf4, 0x92, 0xbb, 0x33, 0xd1,
	0xce, 0x4b, 0xa0, 0x6a, 0x74, 0x3e, 0x86, 0xf2, 0x48, 0x84, 0x8e, 0x6f, 0x23, 0xfe, 0x58, 0x9c,
	0x3a, 0x5e, 0x3b, 0xb7, 0x97, 0xbb, 0x5b, 0x64, 0xaa, 0x41, 0x09, 0x14, 0x84, 0x67, 0xb7, 0xf3,
	0x12, 0x86, 0x9f, 0x9d, 0x4f, 0xa1, 0x3a, 0x0a, 0xfd, 0x40, 0x84, 0xf1, 0x39, 0x8e, 0xe3, 0xf1,
	0xa9, 0x90, 0x2c, 0x35, 0x26, 0xbf, 0xb3, 0xe3, 0xe4, 0xe6, 0xe3, 0xfc, 0x3a, 0x0f, 0x95, 0xee,
	0x19, 0xf7, 0x3c, 0xe1, 0xd2, 0x16, 0xe4, 0x1d, 0x5b, 0xf3, 0xe4, 0x1d, 0x3b, 0xed, 0x25, 0x9f,
	0xe9, 0xe5, 0x0e, 0x34, 0x26, 0xbe, 0x17, 0x0b, 0x2f, 0xb6, 0xe4, 0x4a, 0x0a, 0x12, 0x57, 0xd7,
	0xb0, 0x31, 0x2e, 0xa8, 0x0b, 0xcd, 0x89, 0xea, 0x51, 0x92, 0x44, 0xed, 0xe2, 0x5e, 0xe1, 0x6e,
	0xeb, 0xe1, 0xfb, 0x0f, 0x52, 0x79, 0x3c, 0xd0, 0x23, 0x26, 0xbf, 0xc8, 0xc6, 0x1a, 0x93, 0x79,
	0x23, 0xea, 0xfc, 0x59, 0x0e, 0xea, 0x19, 0x2c, 0xad, 0x40, 0xe1, 0x95, 0x38, 0x26, 0x39, 0xfc,
	0x88, 0xa6, 0x11, 0xc9, 0xd3, 0x1a, 0x94, 0xc4, 0x94, 0x3b, 0x2e, 0x29, 0x50, 0x80, 0xf2, 0xd4,
	0x3f, 0x76, 0x5c, 0x41, 0x8a, 0x94, 0x40, 0xc3, 0xf3, 0x63, 0xe7, 0xc4, 0x99, 0xf0, 0xd8, 0xf1,
	0x3d, 0x52, 0xa2, 0x75, 0xa8, 0xc4, 0xaf, 0x9c, 0x38, 0x16, 0x21, 0x29, 0xd3, 0x06, 0x54, 0x4f,
	0xf8, 0x44, 0x1c, 0xfb, 0xfe, 0x0b, 0x52, 0x41, 0xe2, 0x99, 0xf7, 0xc2, 0xf3, 0x5f, 0x79, 0x72,
	0xaa, 0xa4, 0x8a, 0xbd, 0xc6, 0x4e, 0xec, 0x0a, 0x52, 0xc3, 0x5e, 0x8f, 0x05, 0x9f, 0xf8, 0x1e,
	0x81, 0x0e, 0x83, 0xd6, 0x81, 0x88, 0x22, 0x7e, 0x2a, 0xba, 0x6a, 0xa5, 0x72, 0x2b, 0xc5, 0xeb,
	0x38, 0x11, 0x31, 0x7e, 0xd3, 0xfb, 0x50, 0xd1, 0x8b, 0x68, 0x17, 0xf7, 0x72, 0x77, 0xeb, 0x0f,
	0xe9, 0xea, 0x9a, 0x59, 0x42, 0xd2, 0xf9, 0x9f, 0x3c, 0x54, 0x74, 0xa7, 0xb8, 0x9d, 0xb3, 0xd0,
	0xd1, 0x9d, 0xe1, 0x27, 0x6d, 0x43, 0x65, 0xaa, 0x90, 0x5a, 0xfe, 0x49, 0x13, 0x37, 0x52, 0x4e,
	0x51, 0xcb, 0x5e, 0x35, 0xe8, 0xa7, 0xb0, 0x1b, 0xc5, 0x3c, 0x8c, 0x2d, 0x1e, 0x04, 0xae, 0x5e,
	0xbc, 0x65, 0xf3, 0x58, 0xc8, 0xa9, 0x14, 0xd9, 0xb6, 0xc4, 0x1a, 0x73, 0x64, 0x8f, 0xc7, 0x82,
	0x7e, 0x0c, 0xdb, 0xc2, 0xb3, 0x57, 0x79, 0x4a, 0x92, 0x87, 0x0a, 0xcf, 0x5e, 0xe6, 0xf8, 0x1c,
	0x6e, 0xaf, 0x1b, 0xc7, 0x71, 0xcf, 0xad, 0x33, 0x7f, 0x16, 0xb6, 0xcb, 0x72, 0x52, 0x37, 0x57,
	0x47, 0x73, 0xdc, 0xf3, 0xa7, 0xfe, 0x2c, 0xa4, 0x3f, 0x86, 0x5b, 0xab, 0x43, 0xa6, 0xec, 0x15,
	0xc9, 0x7e, 0x63, 0x79, 0xe0, 0x84, 0xf9, 0x73, 0x68, 0x69, 0x31, 0x58, 0x51, 0xcc, 0xe3, 0x59,
	0xd4, 0xae, 0xee, 0xe5, 0xee, 0xb6, 0x1e, 0xb6, 0x33, 0x82, 0xd6, 0x32, 0x3d, 0x94, 0x78, 0xd6,
	0x9c, 0x66, 0x9b, 0x9d, 0x7f, 0xcc, 0x43, 0xf5, 0x50, 0xbc, 0x14, 0xa1, 0x73, 0xb1, 0x99, 0x4c,
	0x7c, 0xd7, 0x0f, 0x13, 0x33, 0x91, 0x0d, 0xfa, 0x08, 0xca, 0xe2, 0xe4, 0x44, 0x4c, 0x62, 0x29,
	0xf4, 0xd6, 0xc3, 0x5b, 0x99, 0xf1, 0x92, 0xee, 0x1e, 0x98, 0x92, 0xe2, 0x47, 0xad, 0xa3, 0xc1,
	0x2f, 0x06, 0xc3, 0x5f, 0x0e, 0x2c, 0xf3, 0xf1, 0x63, 0xb3, 0x3b, 0x66, 0x9a, 0x93, 0xde, 0x82,
	0x6a, 0x10, 0x3a, 0x3e, 0x92, 0xca, 0x3d, 0x29, 0xb1, 0xb4, 0xdd, 0xf9, 0xbb, 0x1c, 0x94, 0x15,
	0x3b, 0x6d, 0x01, 0x0c, 0x86, 0xd6, 0xa1, 0xc9, 0x9e, 0xf5, 0xbb, 0x26, 0xc9, 0xd1, 0x2d, 0xd8,
	0x60, 0x66, 0xef, 0xa8, 0x6b, 0xf6, 0x52, 0x60, 0x9e, 0xee, 0x02, 0x3d, 0xec, 0x3f, 0x19, 0xf4,
	0x1f, 0xf7, 0xbb, 0xc6, 0x60, 0x6c, 0xf5, 0xcc, 0x7d, 0xe3, 0xf9, 0xa1, 0xb2, 0x84, 0x9e, 0x39,
	0x1e, 0x1e, 0x31, 0x52, 0x44, 0x1a, 0xa3, 0xd7, 0xeb, 0x8f, 0xfb, 0xc3, 0x81, 0xb1, 0x9f, 0xf2,
	0x96, 0xe8, 0x36, 0x90, 0x83, 0x61, 0xaf, 0xff, 0xb8, 0x9f, 0xe9, 0xb1, 0x8c, 0xa6, 0x30, 0x1c,
	0x3f, 0x35, 0x99, 0x9e, 0x35, 0xa9, 0x50, 0x0a, 0x4b, 0x2b, 0x21, 0x55, 0x9c, 0xdc, 0xe1, 0x78,
	0x38, 0xb2, 0x0e, 0x86, 0xcf, 0xcc, 0x1e, 0xa9, 0x75, 0x7e, 0x5d, 0x80, 0xd6, 0x61, 0xec, 0x07,
	0x63, 0x67, 0x2a, 0x8e, 0x02, 0x5b, 0x29, 0xc8, 0x26, 0x9f, 0x0a, 0xcf, 0x16, 0xb6, 0x15, 0xc5,
	0x7e, 0x60, 0xc5, 0x8e, 0x96, 0x70, 0xfd, 0xe1, 0x56, 0x56, 0x6a, 0x9a, 0x8b, 0x6d, 0x68, 0xea,
	0x04, 0x40, 0x3f, 0x83, 0xd6, 0x31, 0x8f, 0x44, 0x86, 0x3b, 0x7f, 0x31, 0x77, 0x03, 0x49, 0x53,
	0x56, 0xdc, 0x3c, 0x3e, 0x8b, 0x52, 0xd3, 0x90, 0x0d, 0xfa, 0x83, 0x74, 0xf3, 0x8a, 0x72, 0xf3,
	0xbe, 0xb1, 0xa6, 0x23, 0x35, 0x79, 0xad, 0x33, 0xc9, 0x8e, 0x7d, 0x02, 0x20, 0x27, 0x11, 0xf8,
	0x8e, 0x17, 0x4b, 0x9b, 0xa8, 0x3f, 0xdc, 0x5e, 0x62, 0x1e, 0x21, 0x8e, 0xd5, 0xa2, 0xe4, 0x93,
	0x7e, 0x01, 0xc4, 0x16, 0x01, 0x0f, 0xe3, 0x59, 0x98, 0x2a, 0x69, 0xf9, 0x6a, 0xe3, 0x6e, 0xa4,
	0x8c, 0x0a, 0x40, 0x1f, 0x43, 0x8b, 0x87, 0xa1, 0xf3, 0x92, 0xbb, 0x49, 0x4f, 0x95, 0xab, 0xf5,
	0xd4, 0xd4, 0x6c, 0x5a, 0xeb, 0xff, 0x34, 0x07, 0x9b, 0xfb, 0x8e, 0x27, 0x0e, 0xc5, 0x04, 0xed,
	0xa9, 0x3f, 0x0d, 0xf8, 0x24, 0xa6, 0xdf, 0x82, 0xe2, 0x49, 0xe8, 0x4f, 0xd7, 0x6c, 0xce, 0x28,
	0x1e, 0x1e, 0x7f, 0x29, 0x26, 0x31, 0x93, 0x04, 0xf4, 0x03, 0xc8, 0xc7, 0xfe, 0x9a, 0x5d, 0x48,
	0xc9, 0xf2, 0xb1, 0x4f, 0xef, 0x42, 0x39, 0xf4, 0x67, 0xb1, 0x88, 0xda, 0x85, 0xbd, 0xc2, 0xdd,
	0xfa, 0x43, 0x92, 0x21, 0x64, 0x88, 0x60, 0x1a, 0xdf, 0xf9, 0xa7, 0x1c, 0xb4, 0xd4, 0x14, 0x84,
	0xad, 0x3a, 0xa0, 0x1f, 0x43, 0x2d, 0x88, 0x2d, 0x5f, 0x36, 0x2e, 0x9b, 0x4f, 0x35, 0xd0, 0x5f,
	0xf4, 0xe7, 0xd0, 0x72, 0x74, 0x1f, 0x52, 0x53, 0xa2, 0x76, 0x5e, 0x0e, 0x7b, 0xf3, 0x42, 0xd1,
	0xb0, 0x66, 0xc2, 0x80, 0xf0, 0x88, 0x3e, 0x01, 0x32, 0xef, 0x41, 0x09, 0x46, 0xea, 0x4d, 0xfd,
	0xe1, 0xed, 0x4c, 0x1f, 0x2b, 0x62, 0x63, 0x1b, 0x69, 0x37, 0x0a, 0xdc, 0x19, 0x01, 0xed, 0x39,
	0x51, 0x38, 0x0b, 0xb0, 0x95, 0xc6, 0x60, 0x02, 0x85, 0x17, 0xe2, 0x5c, 0x87, 0x7a, 0xfc, 0x4c,
	0xa3, 0x7f, 0x7e, 0x5d, 0xf4, 0x2f, 0x64, 0xa3, 0xff, 0x5f, 0x15, 0xa1, 0xac, 0x37, 0x69, 0x35,
	0x32, 0x7c, 0x08, 0x2d, 0x3b, 0x1d, 0xce, 0x42, 0xa4, 0x72, 0x55, 0xcd, 0x39, 0xf4, 0x28, 0x74,
	0xe8, 0x23, 0xd8, 0xca, 0xfa, 0xd8, 0x40, 0x66, 0x13, 0x51, 0x1b, 0xa4, 0x94, 0x36, 0xb3, 0xc2,
	0x95, 0x18, 0x46, 0x33, 0xd4, 0x0a, 0x14, 0xd1, 0x8f, 0xa0, 0xac, 0xf5, 0xae, 0x2e, 0xf5, 0xee,
	0x46, 0x86, 0xcd, 0x98, 0xc4, 0xce, 0xcb, 0xd4, 0x62, 0x14, 0x19, 0x7d, 0x0f, 0x60, 0x26, 0x85,
	0x6d, 0x5b, 0x3c, 0x6e, 0x37, 0x64, 0x14, 0xa9, 0x69, 0x88, 0xa1, 0x82, 0x26, 0x3f, 0x8d, 0xda,
	0xcd, 0xbd, 0x82, 0x94, 0x00, 0x3f, 0x8d, 0xe6, 0x36, 0xdb, 0xca, 0xda, 0xec, 0xf7, 0xa0, 0xaa,
	0x1d, 0x77, 0xd4, 0xde, 0x58, 0xd9, 0xd8, 0xc5, 0x58, 0xcc, 0x52, 0x52, 0xfa, 0x11, 0x54, 0x23,
	0xed, 0x8e, 0xdb, 0x64, 0xd5, 0x6b, 0x68, 0x14, 0x4b, 0x89, 0xe8, 0x1e, 0xc8, 0xdc, 0x25, 0x74,
	0x8e, 0x67, 0xb1, 0x1f, 0xb6, 0x37, 0xe7, 0xe9, 0x8c, 0x06, 0xd1, 0x5e, 0x46, 0x4d, 0x94, 0x82,
	0x46, 0x6d, 0xba, 0x32, 0xa3, 0x45, 0x7d, 0x9e, 0xeb, 0x88, 0x6a, 0x47, 0xe8, 0xfc, 0x27, 0x3c,
	0x16, 0xa7, 0x7e, 0x78, 0xde, 0xde, 0x92, 0x83, 0xa4, 0x6d, 0xfa, 0x53, 0x80, 0x40, 0x69, 0x8d,
	0x23, 0xa2, 0xf6, 0xb6, 0xec, 0xfb, 0xbd, 0x4c, 0xdf, 0xab, 0xca, 0xc5, 0x32, 0x0c, 0x9d, 0x1f,
	0xc0, 0xe6, 0x13, 0xe1, 0x9f, 0x86, 0x3c, 0x38, 0x73, 0x26, 0xdc, 0xed, 0xfa, 0x7e, 0x68, 0xa3,
	0xda, 0xb8, 0xbe, 0x27, 0xb5, 0x2f, 0xc7, 0xf0, 0x53, 0x42, 0x78, 0x2c, 0x95, 0x0f, 0x21, 0x3c,
	0xee, 0xfc, 0x49, 0x1e, 0xb6, 0x0d, 0x7b, 0xea, 0x78, 0x4e, 0x14, 0x87, 0x1c, 0x77, 0x93, 0x89,
	0x53, 0x47, 0x91, 0xce, 0xd5, 0x4a, 0xea, 0x5c, 0x12, 0x29, 0x0b, 0x99, 0x48, 0x79, 0x13, 0xaa,
	0x5f, 0x39, 0x81, 0x35, 0xf1, 0x6d, 0x95, 0x63, 0xd4, 0x58, 0xe5, 0x2b, 0x27, 0x90, 0x79, 0xee,
	0x36, 0x94, 0x5c, 0xf1, 0x52, 0xb8, 0xd2, 0x67, 0x96, 0x98, 0x6a, 0xd0, 0x87, 0x18, 0x5a, 0xfd,
	0xd0, 0x96, 0xee, 0x70, 0xd1, 0xca, 0x56, 0x16, 0xc0, 0x14, 0xa9, 0xec, 0x89, 0x1f, 0x0b, 0x57,
	0x27, 0x06, 0xaa, 0x81, 0x50, 0xc7, 0x8b, 0x84, 0x90, 0xd1, 0xbf, 0xc6, 0x54, 0x83, 0xfe, 0x18,
	0x36, 0xa6, 0xdc, 0xf1, 0x54, 0xe0, 0xe0, 0xa1, 0xe0, 0x51, 0xbb, 0x26, 0x85, 0xb9, 0x1c, 0x39,
	0x8c, 0x50, 0x70, 0xd6, 0x44, 0xda, 0xa4, 0x15, 0x75, 0x3e, 0x81, 0x4a, 0xd7, 0x9f, 0x4e, 0x31,
	0xb5, 0x4b, 0x6d, 0x32, 0x97, 0xc9, 0x94, 0x33, 0xd6, 0x9b, 0x4b, 0xac, 0xb7, 0xf3, 0xaf, 0x45,
	0xa8, 0x26, 0x5d, 0xac, 0x95, 0x91, 0x96, 0x64, 0x71, 0x2e, 0xc9, 0x54, 0x08, 0xa5, 0xab, 0x0b,
	0xe1, 0x19, 0xec, 0xf2, 0x85, 0x7d, 0xb2, 0x42, 0xb9, 0x51, 0x89, 0x35, 0x67, 0xc3, 0xc1, 0xba,
	0x0d, 0x65, 0x3b, 0x7c, 0x0d, 0x34, 0xa2, 0xdf, 0x83, 0xfa, 0x3c, 0xbe, 0x61, 0x2a, 0x55, 0xb8,
	0x30, 0xc0, 0x41, 0x1a, 0xe0, 0x22, 0xfa, 0x20, 0x63, 0x9b, 0x4a, 0xc0, 0x74, 0xd5, 0x36, 0x33,
	0x46, 0xf9, 0x0d, 0xa8, 0x2b, 0x73, 0x40, 0x67, 0x15, 0xb5, 0x6f, 0x4a, 0xe3, 0x07, 0x05, 0x3a,
	0x0a, 0x1d, 0xd9, 0xe1, 0x44, 0xc9, 0x3e, 0x6a, 0xdf, 0x58, 0xe9, 0x50, 0x6f, 0x0b, 0x4b, 0x69,
	0xe8, 0x87, 0x28, 0x43, 0x5b, 0x44, 0xed, 0x86, 0x24, 0xde, 0x58, 0x20, 0xb6, 0x05, 0x53, 0x58,
	0xb4, 0x39, 0x4c, 0x1f, 0xbe, 0xf2, 0x3d, 0xd1, 0xde, 0x50, 0x36, 0x97, 0xb4, 0xe7, 0x7a, 0x45,
	0xb2, 0x7a, 0xd5, 0x03, 0x22, 0x07, 0x09, 0x27, 0x0e, 0x77, 0xad, 0xa9, 0x1c, 0x63, 0x67, 0xc5,
	0xd6, 0xbb, 0x29, 0xc9, 0x01, 0x8e, 0xb6, 0x31, 0x59, 0x68, 0x47, 0xf4, 0x67, 0xd0, 0x0a, 0xce,
	0xce, 0x23, 0xdc, 0x46, 0xdd, 0xc7, 0xae, 0xec, 0x23, 0xeb, 0x3d, 0x47, 0x9a, 0x40, 0xf6, 0xd0,
	0x0c, 0x32, 0xad, 0xa8, 0xf3, 0x7f, 0x25, 0xa8, 0xa5, 0x92, 0x5f, 0xab, 0x56, 0x5f, 0x97, 0x42,
	0x68, 0x75, 0x2d, 0xad, 0x51, 0xd7, 0x6b, 0xd8, 0xec, 0xc7, 0x50, 0x4b, 0x4d, 0x50, 0xda, 0xed,
	0x05, 0x16, 0x58, 0x8d, 0x12, 0xd3, 0xf9, 0x1c, 0x5a, 0x67, 0x3c, 0xb2, 0xc4, 0xaf, 0x66, 0x4e,
	0xa0, 0xd4, 0xa0, 0x2a, 0xd9, 0xb2, 0x69, 0xfd, 0x19, 0x8f, 0xcc, 0x14, 0xcf, 0x9a, 0x0b, 0xcd,
	0xdf, 0x55, 0x25, 0x77, 0x2f, 0x55, 0x49, 0xf2, 0xf6, 0x54, 0xf2, 0x3e, 0x54, 0xb8, 0x6d, 0x87,
	0x22, 0xc2, 0x18, 0xb8, 0x7c, 0x42, 0x34, 0x14, 0x86, 0x25, 0x24, 0xf4, 0x03, 0x68, 0x06, 0x2e,
	0x8f, 0x4f, 0xfc, 0x70, 0xaa, 0xdc, 0xac, 0x0a, 0x91, 0x8d, 0x04, 0x98, 0xfa, 0x5a, 0xa9, 0xc9,
	0x1b, 0x6f, 0xd2, 0xe4, 0xcd, 0xb7, 0xa0, 0xc9, 0xf4, 0x3a, 0x9a, 0x8c, 0x9a, 0x70, 0xc2, 0x43,
	0x61, 0x49, 0x13, 0xdc, 0x5a, 0xd1, 0x84, 0xc7, 0x3c, 0x14, 0x7f, 0xe8, 0x7b, 0x82, 0x55, 0x4f,
	0xf4, 0x57, 0x67, 0x1f, 0x40, 0x66, 0x5c, 0x71, 0xe8, 0x78, 0xa7, 0xf4, 0x67, 0x18, 0x9d, 0xfd,
	0xd0, 0x76, 0x3c, 0x8e, 0x89, 0x65, 0x4e, 0x0e, 0x7e, 0xb9, 0x0e, 0x66, 0x19, 0x3a, 0xcf, 0x60,
	0xe3, 0x60, 0xe6, 0xc6, 0x4e, 0xa6, 0xcb, 0x6f, 0x43, 0xc9, 0x75, 0xbc, 0xb4, 0xb3, 0x9d, 0xe5,
	0x54, 0x4f, 0x52, 0x31, 0x45, 0x43, 0x77, 0xa1, 0xec, 0x0a, 0xef, 0x34, 0x3e, 0x93, 0x5e, 0x3f,
	0xc7, 0x74, 0xab, 0xf3, 0x1f, 0x25, 0x28, 0x22, 0xf5, 0x15, 0x7d, 0x3e, 0x85, 0xa2, 0xdc, 0x3e,
	0x65, 0x57, 0xf2, 0x7b, 0x7e, 0xce, 0xac, 0x65, 0xcf, 0x99, 0xf3, 0x24, 0x1a, 0x2e, 0x4f, 0xa2,
	0xe9, 0x23, 0xd8, 0x58, 0xda, 0x60, 0x99, 0xa3, 0x5d, 0xba, 0xbf, 0xad, 0xc5, 0xfd, 0x5d, 0xb3,
	0xbd, 0x8d, 0x6b, 0x6d, 0xef, 0x7d, 0xa8, 0x78, 0x22, 0x7e, 0xe5, 0x87, 0x2f, 0xd6, 0x68, 0xf3,
	0x40, 0x61, 0x58, 0x42, 0xb2, 0x60, 0xa3, 0xad, 0xeb, 0xdb, 0xe8, 0xad, 0x4b, 0x6d, 0x74, 0xf7,
	0x3a, 0x36, 0x4a, 0x2e, 0xb5, 0xd1, 0x4f, 0xa1, 0x72, 0x2a, 0xfc, 0x2f, 0x23, 0xdf, 0x93, 0xe9,
	0x60, 0x7d, 0xe1, 0xb0, 0xbf, 0xa4, 0x4e, 0x2c, 0x21, 0xa5, 0x77, 0xa0, 0xe1, 0x07, 0xc2, 0x73,
	0xbc, 0x53, 0x75, 0x66, 0xa5, 0x7b, 0xb9, 0xbb, 0x4d, 0x56, 0xd7, 0x30, 0x79, 0x3a, 0xbd, 0x03,
	0x8d, 0x89, 0xeb, 0x47, 0x29, 0xc9, 0x96, 0x22, 0xd1, 0x30, 0x49, 0xf2, 0xc9, 0x42, 0x2a, 0xb8,
	0xb3, 0x92, 0xbd, 0xac, 0x4b, 0x00, 0x31, 0x8c, 0xa3, 0xba, 0x5a, 0xa7, 0xa1, 0x3f, 0x0b, 0x92,
	0x08, 0xba, 0xbd, 0xa4, 0xd8, 0x4f, 0x10, 0xc9, 0xc0, 0x4d, 0x3e, 0x65, 0xae, 0x1e, 0x8b, 0xd7,
	0xb1, 0xa5, 0xd4, 0xb0, 0x2d, 0xd5, 0xb0, 0x86, 0x90, 0x2e, 0x02, 0x3a, 0x7f, 0x9f, 0x83, 0x5a,
	0xca, 0xb8, 0xf6, 0xaa, 0x64, 0x35, 0x4d, 0xcc, 0xee, 0x48, 0xe1, 0x6a, 0x3b, 0xa2, 0x8c, 0xb1,
	0xb8, 0xb2, 0x23, 0x38, 0x74, 0x62, 0x86, 0xf7, 0xa1, 0x26, 0x13, 0x3b, 0x6c, 0xe9, 0xbc, 0x69,
	0x85, 0xb4, 0x8a, 0x14, 0xf8, 0xd5, 0xf9, 0xef, 0x22, 0x94, 0xa4, 0xad, 0x5c, 0xd1, 0x3a, 0xef,
	0x40, 0xc3, 0x89, 0xac, 0x93, 0x50, 0xfc, 0x6a, 0x26, 0xbc, 0x89, 0x1a, 0xa0, 0xca, 0xea, 0x4e,
	0xf4, 0x38, 0x01, 0xd1, 0x0f, 0xa0, 0x28, 0xc7, 0xae, 0xac, 0x1f, 0x5b, 0x22, 0xd1, 0xe5, 0x7e,
	0xe9, 0xcf, 0x42, 0x4f, 0x9c, 0x5b, 0x01, 0x8f, 0x63, 0x11, 0x7a, 0x49, 0x4a, 0x95, 0x35, 0xc9,
	0x2f, 0x14, 0xc9, 0x48, 0x51, 0xb0, 0x8d, 0x2f, 0x17, 0xda, 0xbf, 0x73, 0x24, 0xa3, 0x2b, 0x56,
	0x92, 0x6a, 0x3d, 0x5c, 0xaa, 0xf5, 0x4b, 0xb9, 0x60, 0xee, 0x8a, 0xb9, 0xe0, 0x77, 0xa1, 0x66,
	0x3b, 0xa1, 0x3e, 0x3d, 0x37, 0x2e, 0x3e, 0xb8, 0xcf, 0xa9, 0xb2, 0xf6, 0xd5, 0xbc, 0xba, 0x7d,
	0xad, 0xfa, 0xaa, 0xd6, 0xb5, 0x7c, 0x55, 0x56, 0x35, 0x37, 0xae, 0xa4, 0x9a, 0xad, 0x74, 0xca,
	0xea, 0xaa, 0x7b, 0x33, 0x39, 0x65, 0x6b, 0xe8, 0x18, 0x4f, 0x00, 0xbf, 0xc9, 0x43, 0x6b, 0x71,
	0x4b, 0xdf, 0x9e, 0xd6, 0xfd, 0x04, 0x9a, 0x0b, 0x4b, 0xd6, 0x39, 0xd8, 0x85, 0x2b, 0x6e, 0x64,
	0x57, 0x4c, 0x7f, 0x0f, 0x4a, 0x32, 0x54, 0x68, 0xa5, 0x5d, 0x8d, 0x24, 0x0a, 0x4d, 0xc7, 0xb0,
	0xbb, 0xa4, 0xb6, 0x8b, 0xe7, 0x81, 0xf7, 0x2f, 0x54, 0x5e, 0xa5, 0x0d, 0xdb, 0x5f, 0xae, 0x02,
	0xdf, 0x7e, 0x42, 0xd6, 0x31, 0xa0, 0xde, 0x13, 0x51, 0x8c, 0x81, 0x3d, 0x73, 0x44, 0xd5, 0xb7,
	0x2b, 0x28, 0xd0, 0x3d, 0xa8, 0xdb, 0x73, 0x02, 0xed, 0x95, 0xb2, 0xa0, 0xce, 0x7d, 0x28, 0x0e,
	0xfc, 0x58, 0xac, 0xe1, 0xc5, 0x2d, 0xf3, 0xe3, 0x79, 0xa5, 0xc3, 0x8f, 0x45, 0xe7, 0x6f, 0x0a,
	0x00, 0xa3, 0xb9, 0x93, 0xb5, 0xe1, 0x06, 0xb7, 0x6d, 0x07, 0x3b, 0xe2, 0xae, 0xe5, 0x78, 0x98,
	0x7f, 0xc9, 0x6e, 0x95, 0xad, 0xb4, 0x1e, 0x7e, 0x7b, 0xd5, 0x4d, 0x3b, 0x22, 0xc2, 0xa4, 0x4e,
	0x33, 0xf5, 0xe7, 0x3c, 0x6c, 0x97, 0xaf, 0x03, 0x4b, 0x63, 0xc5, 0xc1, 0xa3, 0x76, 0x69, 0xc5,
	0x58, 0x71, 0xea, 0x4c, 0x61, 0xe9, 0x4f, 0x00, 0xc4, 0xeb, 0x89, 0x08, 0xd4, 0xf8, 0xe5, 0x95,
	0xb4, 0xa8, 0xcb, 0x5d, 0xe1, 0xd9, 0x3c, 0x34, 0x13, 0x22, 0x96, 0xa1, 0xa7, 0x3f, 0x5c, 0x94,
	0x94, 0xd2, 0x8f, 0xdd, 0xec, 0x85, 0xc3, 0x1c, 0xbb, 0x20, 0x41, 0x7a, 0x1f, 0xe8, 0x4b, 0x71,
	0xe6, 0x4c, 0x5c, 0x61, 0x25, 0x3a, 0xe3, 0xd8, 0xfa, 0x10, 0x4e, 0x34, 0x46, 0xeb, 0x48, 0xdf,
	0xee, 0x78, 0xb0, 0xb3, 0x76, 0xf5, 0x94, 0x40, 0x23, 0x70, 0x26, 0x2f, 0xac, 0x59, 0x60, 0xf9,
	0x9e, 0x7b, 0x4e, 0x72, 0x74, 0x13, 0x9a, 0x76, 0xe8, 0x07, 0x96, 0x7f, 0x72, 0xa2, 0x40, 0x79,
	0x7a, 0x03, 0xb6, 0x7c, 0xcf, 0xb2, 0xc5, 0x94, 0x7b, 0xb6, 0x15, 0x87, 0xdc, 0x8b, 0x02, 0x3f,
	0x8c, 0x49, 0x01, 0x11, 0x36, 0x8f, 0x85, 0x8c, 0xa1, 0x16, 0x4e, 0x6e, 0xca, 0x63, 0x61, 0x93,
	0x22, 0xee, 0xd8, 0xd2, 0xb1, 0xa0, 0xbf, 0x72, 0xae, 0x50, 0x7b, 0xd5, 0xb9, 0xe8, 0x5c, 0xf1,
	0x20, 0xfd, 0x5c, 0x3a, 0x61, 0x74, 0xfe, 0x25, 0x0f, 0xb5, 0xb4, 0x49, 0xf7, 0xe0, 0x36, 0x76,
	0xfc, 0xea, 0x4c, 0x08, 0x77, 0x72, 0xc6, 0x9d, 0xd0, 0xe2, 0x93, 0x89, 0x88, 0x22, 0xe7, 0xd8,
	0x71, 0x9d, 0x18, 0x57, 0xb4, 0x03, 0x9b, 0x48, 0x71, 0xec, 0xbc, 0x10, 0x12, 0x17, 0xe0, 0x1c,
	0xe5, 0xaa, 0x10, 0x8c, 0x1c, 0x13, 0xdf, 0x53, 0xc2, 0x11, 0x36, 0x29, 0xd0, 0x77, 0xe1, 0x06,
	0x22, 0x5e, 0x3a, 0xd1, 0x8c, 0xbb, 0x16, 0xf7, 0x3c, 0x7f, 0xe6, 0x4d, 0x04, 0x0e, 0x46, 0x8a,
	0xf4, 0x36, 0xb4, 0x25, 0xd7, 0xcc, 0x76, 0x8e, 0x5d, 0xb1, 0x88, 0x2d, 0xd1, 0x5b, 0xb0, 0x2b,
	0xb1, 0x01, 0xe6, 0x04, 0xa1, 0x83, 0xb2, 0x11, 0xd1, 0x04, 0x85, 0x55, 0x4e, 0xba, 0xcd, 0xe2,
	0x22, 0xe7, 0xd4, 0xe3, 0xa7, 0x82, 0x54, 0xe8, 0x2e, 0x50, 0x44, 0x46, 0x93, 0x33, 0xdf, 0x77,
	0x2d, 0xbd, 0x7f, 0xa4, 0x9a, 0x30, 0x65, 0x56, 0x77, 0xec, 0x73, 0x4c, 0xaa, 0x4f, 0x49, 0x0d,
	0xb7, 0x4a, 0x32, 0x9d, 0x09, 0x37, 0x16, 0xa1, 0xb0, 0x09, 0xe0, 0x7e, 0x4a, 0x31, 0xbb, 0xe2,
	0x25, 0x8f, 0xfd, 0x90, 0xd4, 0x13, 0x22, 0x11, 0x4d, 0xb8, 0x2b, 0x41, 0x0d, 0x4a, 0xd5, 0x5e,
	0x48, 0x81, 0xd8, 0x22, 0xf0, 0x63, 0xd2, 0xec, 0xfc, 0x51, 0x11, 0x1a, 0x18, 0x57, 0x7a, 0x3c,
	0x16, 0x32, 0xff, 0xb9, 0x07, 0x9b, 0xc9, 0x85, 0x77, 0xba, 0xc7, 0xba, 0xf0, 0xb9, 0xa1, 0x11,
	0x29, 0xed, 0x03, 0xd8, 0x9a, 0x5f, 0xb4, 0xcf, 0xa9, 0x55, 0x49, 0x74, 0x33, 0x45, 0xa5, 0xf4,
	0x9f, 0xc0, 0xae, 0xac, 0x2b, 0xac, 0x0e, 0xa0, 0xaa, 0x5d, 0x5b, 0x88, 0x35, 0x96, 0x06, 0xf9,
	0x01, 0xb4, 0x25, 0xd3, 0xba, 0x91, 0xca, 0x92, 0x6d, 0x07, 0xf1, 0xbd, 0x35, 0xa3, 0x65, 0x6b,
	0x07, 0x85, 0xab, 0xd5, 0x0e, 0xbe, 0xb7, 0x90, 0xfe, 0xa9, 0x1a, 0xe2, 0xce, 0x5a, 0xbf, 0xb2,
	0x90, 0x00, 0x7e, 0x06, 0x2d, 0x9b, 0xc7, 0x1c, 0xa3, 0x49, 0x74, 0xe6, 0xe1, 0xe1, 0x52, 0x95,
	0x09, 0xb2, 0x2e, 0x97, 0x8d, 0xf7, 0xc5, 0x4b, 0xe1, 0xb2, 0x26, 0x52, 0x3e, 0x4e, 0x08, 0x69,
	0x77, 0x4d, 0xb5, 0xe2, 0x4d, 0x25, 0xb5, 0x95, 0x32, 0xc5, 0xe7, 0x2b, 0x65, 0x8a, 0xda, 0x9b,
	0xaa, 0x72, 0x8b, 0xf5, 0x89, 0xdf, 0x14, 0xd4, 0x3d, 0x5a, 0x92, 0x26, 0x27, 0xbd, 0x65, 0xb6,
	0xbf, 0xae, 0x61, 0x92, 0xe4, 0x2e, 0x90, 0x59, 0x3c, 0xb1, 0x16, 0xc8, 0x40, 0x92, 0xb5, 0x66,
	0xf1, 0xc4, 0xc8, 0x50, 0x62, 0x18, 0x4f, 0xd7, 0x27, 0xe9, 0x0a, 0x92, 0xae, 0x99, 0x42, 0x25,
	0xd9, 0x7d, 0xa0, 0xd8, 0xe1, 0x12, 0x69, 0x5d, 0x92, 0xe2, 0x50, 0xbd, 0x05, 0xea, 0x47, 0xb0,
	0xb1, 0xe4, 0x06, 0xf5, 0x5e, 0x65, 0x13, 0xbd, 0x67, 0x0b, 0xee, 0x90, 0xb5, 0x16, 0xdd, 0x23,
	0x65, 0xb0, 0xb3, 0x36, 0xec, 0xea, 0xfc, 0xf6, 0x4d, 0x51, 0x77, 0x6b, 0x4d, 0xd4, 0xc5, 0xc5,
	0xa2, 0x5f, 0x9d, 0x05, 0x16, 0x77, 0x5d, 0xff, 0x95, 0x50, 0xb7, 0x36, 0x55, 0xd6, 0x54, 0x50,
	0x43, 0x01, 0x51, 0x7a, 0xa9, 0xb3, 0x4d, 0x08, 0x2b, 0x92, 0xb0, 0x85, 0xf0, 0xe1, 0xc9, 0x49,
	0x42, 0x79, 0x0b, 0xaa, 0x67, 0x82, 0xdb, 0xe8, 0x31, 0xb4, 0x97, 0x4f, 0xdb, 0x4b, 0x0a, 0x5e,
	0xbb, 0x92, 0x82, 0x77, 0xfe, 0xa2, 0x0a, 0xad, 0x45, 0xc1, 0x5c, 0xf9, 0xda, 0x14, 0xd2, 0x7a,
	0x60, 0x12, 0xf1, 0xd6, 0x16, 0x04, 0xe5, 0x60, 0xf8, 0x15, 0x5d, 0x39, 0x03, 0x7a, 0x04, 0x1b,
	0x4b, 0x5b, 0xa1, 0xaf, 0x9f, 0x2e, 0xc9, 0xdb, 0x5b, 0x8b, 0xf2, 0xc7, 0x13, 0x42, 0x1c, 0x3a,
	0x81, 0x96, 0x43, 0x36, 0x6e, 0x8f, 0x43, 0x27, 0x60, 0x12, 0xb9, 0x90, 0x14, 0xc1, 0xf5, 0x93,
	0xa2, 0xbd, 0x95, 0xdc, 0xfe, 0x3d, 0x00, 0x27, 0xb2, 0xb8, 0xcd, 0x31, 0xba, 0x48, 0x75, 0xad,
	0xb2, 0x9a, 0x13, 0x19, 0x0a, 0x40, 0x4d, 0x20, 0x2f, 0xb9, 0xeb, 0xd8, 0x4e, 0x3c, 0x5f, 0x59,
	0x63, 0x25, 0xe5, 0x7e, 0xa6, 0x49, 0xd2, 0x23, 0xc9, 0xcb, 0x45, 0x00, 0x1d, 0x43, 0x5b, 0x0f,
	0x61, 0xad, 0x74, 0xd7, 0x7c, 0x63, 0x77, 0xbb, 0x9a, 0x77, 0x09, 0x8e, 0x8b, 0xf3, 0xed, 0xd8,
	0x4a, 0x1e, 0x39, 0xa8, 0xab, 0x2d, 0xf0, 0xed, 0x38, 0x79, 0x13, 0xf1, 0x09, 0xec, 0xac, 0x89,
	0xaf, 0xae, 0x90, 0x57, 0xb6, 0x55, 0xb6, 0x3d, 0x47, 0x1a, 0x29, 0x8e, 0x7e, 0x00, 0xcd, 0x85,
	0x90, 0x2b, 0xb3, 0xf6, 0x2a, 0x6b, 0x20, 0xd0, 0xd0, 0x30, 0xfa, 0x2d, 0xd8, 0x58, 0x0a, 0xc0,
	0xf2, 0xb8, 0x5e, 0x65, 0x2d, 0xee, 0x84, 0xdd, 0x39, 0x94, 0x7e, 0x04, 0x5b, 0x6b, 0x02, 0xb2,
	0x3c, 0xb8, 0x57, 0x19, 0x55, 0x28, 0x23, 0x83, 0xa1, 0xdf, 0x85, 0xed, 0x75, 0x41, 0xba, 0xbd,
	0x2d, 0x39, 0xb6, 0x34, 0x6e, 0x81, 0xe5, 0x3b, 0x40, 0x57, 0x23, 0x77, 0x7b, 0x47, 0x32, 0x6c,
	0x66, 0x30, 0xa6, 0x44, 0xe0, 0x94, 0xd6, 0x04, 0xf3, 0xf6, 0xae, 0x9a, 0x52, 0x06, 0x75, 0xa8,
	0x30, 0xe8, 0x14, 0x16, 0x03, 0x7c, 0xfb, 0x86, 0x72, 0x0a, 0x0a, 0xaa, 0xad, 0x71, 0xe1, 0x7c,
	0xf4, 0xee, 0x75, 0x2e, 0x53, 0x6e, 0x5e, 0x7a, 0xac, 0xfc, 0x2e, 0xd4, 0x26, 0x3a, 0x19, 0x55,
	0x57, 0x38, 0x8b, 0x66, 0x9b, 0x24, 0xaa, 0x6c, 0x4e, 0x85, 0x69, 0x3a, 0xda, 0xcc, 0x9a, 0xca,
	0xe7, 0x9a, 0x07, 0x49, 0x9d, 0x3f, 0xce, 0xc3, 0xd6, 0x1a, 0x07, 0x99, 0x70, 0x17, 0xe6, 0xdc,
	0xdb, 0x50, 0xf2, 0x43, 0x5b, 0x84, 0xfa, 0xf1, 0x85, 0x6a, 0xfc, 0x76, 0x35, 0xfe, 0x35, 0x1e,
	0xa3, 0x7c, 0x5d, 0x8f, 0x91, 0x75, 0x06, 0x95, 0xb7, 0x71, 0x42, 0x3a, 0x85, 0x7a, 0x37, 0x53,
	0xb7, 0xbc, 0x92, 0xf8, 0x68, 0x1b, 0x2a, 0xaf, 0xc4, 0x71, 0xe4, 0xc4, 0x89, 0x03, 0x4e, 0x9a,
	0x88, 0x71, 0x9d, 0x89, 0xf0, 0xa2, 0xb4, 0xba, 0xa7, 0x9b, 0x9d, 0x3f, 0xcf, 0x43, 0xa5, 0xc7,
	0x63, 0x1e, 0x89, 0x78, 0xcd, 0x59, 0xea, 0x87, 0x8b, 0x15, 0xd5, 0xfc, 0x5e, 0x7e, 0xe9, 0x74,
	0x91, 0x99, 0xe4, 0x62, 0xa5, 0xf5, 0x21, 0xec, 0xa8, 0xa7, 0x45, 0xd2, 0xcb, 0x64, 0x5e, 0x23,
	0x15, 0xf6, 0xf2, 0x98, 0x9f, 0x49, 0xe4, 0xb3, 0x14, 0x27, 0x9f, 0x23, 0x3d, 0x80, 0x2d, 0xe1,
	0xd9, 0x2b, 0x1c, 0x45, 0xc9, 0xb1, 0x29, 0x3c, 0x7b, 0x89, 0xfe, 0x33, 0x68, 0x85, 0x82, 0xbb,
	0xf2, 0xec, 0x90, 0x94, 0x28, 0xf3, 0x17, 0xa5, 0x4a, 0x09, 0xa5, 0x6c, 0xa2, 0xf8, 0x6c, 0x11,
	0x4d, 0xf4, 0x0b, 0x27, 0xf9, 0x4d, 0x77, 0xa1, 0x1c, 0x9d, 0x47, 0xb1, 0x98, 0xea, 0xfa, 0xa4,
	0x6e, 0x75, 0x3e, 0x82, 0xca, 0xc8, 0x77, 0xe4, 0xcb, 0xb5, 0xab, 0xa9, 0xf1, 0xbf, 0xe5, 0xa1,
	0x30, 0xf2, 0x9d, 0x35, 0x6a, 0x9b, 0x50, 0x17, 0x33, 0xbb, 0xf6, 0xdb, 0x54, 0x65, 0xbe, 0x03,
	0xd5, 0xc0, 0x77, 0xd4, 0x55, 0x46, 0x65, 0xe5, 0xb6, 0x56, 0xcf, 0x96, 0x55, 0x02, 0x3d, 0xed,
	0xaf, 0xab, 0xc4, 0x94, 0xa9, 0x80, 0xd4, 0xdf, 0x5c, 0x01, 0xf9, 0x68, 0x21, 0x21, 0xbe, 0xa0,
	0xb6, 0x92, 0x4d, 0x85, 0xd3, 0x6a, 0x48, 0x33, 0x53, 0x0d, 0xe9, 0xfc, 0x65, 0x0e, 0x2a, 0xfa,
	0x3e, 0xfa, 0x8a, 0x12, 0xce, 0x5a, 0x67, 0xf9, 0x6d, 0x14, 0x94, 0x52, 0x7f, 0x59, 0xb9, 0xcc,
	0x5f, 0x76, 0x3e, 0x85, 0x46, 0xf6, 0x4e, 0xe7, 0x6a, 0xb3, 0xed, 0x7c, 0x1f, 0x5a, 0x8b, 0x57,
	0xfd, 0x57, 0xe4, 0xfb, 0xf7, 0x1c, 0x40, 0xd7, 0xf7, 0x3c, 0x7d, 0x33, 0x77, 0x1f, 0xca, 0x7e,
	0xe8, 0x24, 0x6f, 0x4d, 0x2f, 0xf2, 0x83, 0x9a, 0x86, 0x7e, 0x7f, 0xf5, 0xc2, 0xe5, 0x22, 0x96,
	0x85, 0x4b, 0x84, 0x5b, 0x50, 0xb5, 0x67, 0x21, 0x4f, 0xdf, 0xdb, 0x94, 0x58, 0xda, 0xa6, 0xbf,
	0x0f, 0xc4, 0x76, 0xa2, 0xc0, 0xe5, 0xe7, 0x56, 0x4a, 0xa3, 0xdc, 0xf5, 0x86, 0x86, 0xf7, 0x12,
	0xd2, 0x3b, 0xd0, 0x98, 0xf2, 0xd7, 0x73, 0x32, 0xf5, 0xd4, 0xa0, 0x3e, 0xe5, 0xaf, 0x13, 0x92,
	0xce, 0x33, 0x59, 0xd3, 0x0f, 0xb8, 0x77, 0x7e, 0xc5, 0x5d, 0x4f, 0x37, 0xa9, 0x7a, 0xe9, 0x26,
	0xfd, 0x6f, 0x0e, 0x2a, 0x5a, 0x55, 0xbf, 0x46, 0x83, 0xfd, 0xba, 0x2c, 0xf0, 0x0e, 0x34, 0xce,
	0xfc, 0x59, 0x24, 0x2c, 0x6f, 0x36, 0x3d, 0x16, 0xea, 0xa1, 0x63, 0x89, 0xd5, 0x25, 0x6c, 0x20,
	0x41, 0xeb, 0xab, 0xe3, 0x9d, 0x53, 0xd8, 0x5c, 0xb9, 0x58, 0x5a, 0xef, 0xde, 0xa4, 0x0f, 0xd6,
	0xee, 0x4d, 0x3e, 0x0a, 0xbc, 0xaf, 0x1f, 0x4f, 0x14, 0x56, 0xce, 0x85, 0x69, 0x4f, 0xd2, 0xfd,
	0xa8, 0x67, 0x15, 0x3f, 0x84, 0x56, 0x32, 0xd0, 0xba, 0x47, 0xd0, 0xb5, 0x35, 0x8f, 0xa0, 0x6b,
	0xea, 0x11, 0xf4, 0x3f, 0xe4, 0xa0, 0xfe, 0x4b, 0x21, 0x5e, 0x24, 0x41, 0x76, 0x17, 0xca, 0x53,
	0xdf, 0xb3, 0xf9, 0xb9, 0x64, 0xac, 0x32, 0xdd, 0xc2, 0xe0, 0x16, 0xcf, 0x44, 0x84, 0x88, 0xbc,
	0x44, 0x24, 0x4d, 0x7a, 0x1b, 0x6a, 0xaf, 0x84, 0xed, 0x29, 0x5c, 0x41, 0x65, 0xd4, 0x29, 0x40,
	0x3e, 0x29, 0x38, 0x9b, 0x85, 0x12, 0x59, 0x94, 0xc8, 0xb4, 0x8d, 0x63, 0x9d, 0x84, 0x0e, 0x62,
	0xd4, 0x5d, 0xae, 0x6e, 0x21, 0x4f, 0xc4, 0xe3, 0x59, 0x88, 0x18, 0x75, 0x1e, 0x4b, 0xdb, 0x32,
	0x7e, 0xcc, 0xe4, 0xfc, 0xd4, 0x01, 0x4c, 0xb7, 0x3a, 0x7f, 0x9b, 0x87, 0x6a, 0x22, 0x82, 0x2b,
	0x46, 0xf2, 0xcf, 0xa0, 0xf1, 0x4a, 0x88, 0x17, 0x69, 0x42, 0x52, 0x58, 0xb9, 0xd6, 0xcb, 0x08,
	0x86, 0xd5, 0x5f, 0x65, 0xa4, 0xf4, 0x73, 0x68, 0x71, 0xf9, 0x9a, 0x2b, 0x7d, 0x25, 0x56, 0x5c,
	0x2d, 0x15, 0x2f, 0x6c, 0x08, 0x6b, 0x2a, 0x86, 0xe4, 0xa1, 0xd8, 0xe2, 0x85, 0x64, 0xe9, 0x9a,
	0x17, 0x92, 0xeb, 0xce, 0x29, 0xe5, 0x6b, 0x9f, 0x53, 0x3a, 0xfb, 0xb0, 0xb1, 0x7c, 0xc8, 0xf8,
	0x10, 0x5a, 0x52, 0x55, 0x64, 0x5d, 0x4e, 0x6a, 0xa5, 0x92, 0x62, 0x33, 0x85, 0xca, 0xac, 0x40,
	0xaa, 0xec, 0x79, 0x34, 0x57, 0xd9, 0xf3, 0xa8, 0x33, 0x82, 0x8d, 0x7d, 0x5f, 0x3d, 0x87, 0x93,
	0xef, 0xcc, 0x5e, 0xcb, 0x87, 0x41, 0x81, 0xcb, 0x27, 0xc9, 0xfb, 0x7d, 0xd5, 0x90, 0xa7, 0x09,
	0x79, 0x00, 0x99, 0xfb, 0x22, 0x4c, 0x7a, 0x4a, 0xac, 0xa5, 0xc0, 0xa9, 0x3b, 0xfa, 0xcf, 0x32,
	0x54, 0x93, 0x82, 0x48, 0xa6, 0xa0, 0x96, 0x5f, 0x2d, 0xa8, 0xa5, 0xc9, 0xd4, 0x8f, 0xa1, 0x29,
	0xa6, 0xc7, 0xc2, 0xb6, 0x85, 0x6d, 0x65, 0x0c, 0x28, 0xbb, 0xab, 0x03, 0xf5, 0xab, 0xde, 0xd0,
	0x27, 0xc4, 0x32, 0x84, 0x2f, 0xbc, 0xc3, 0x28, 0x5e, 0xe5, 0x1d, 0xc6, 0x1e, 0x14, 0x02, 0xdf,
	0xd1, 0x59, 0x70, 0x6b, 0x31, 0x3d, 0x60, 0x88, 0x5a, 0x4a, 0x97, 0xcb, 0x57, 0x4b, 0x97, 0x33,
	0x31, 0xbf, 0x72, 0x95, 0x57, 0x0f, 0xaa, 0xd8, 0x56, 0xbb, 0xac, 0xd8, 0x96, 0x29, 0x3d, 0xc3,
	0x9b, 0x4b, 0xcf, 0x6f, 0xa3, 0x58, 0x9e, 0xde, 0x26, 0x34, 0xde, 0x54, 0x4f, 0xd9, 0x59, 0xeb,
	0xb6, 0xf5, 0x51, 0xf9, 0x8d, 0x5e, 0x7b, 0x7b, 0x9d, 0xd7, 0x96, 0x41, 0xd3, 0x89, 0x62, 0xee,
	0x4d, 0xd4, 0x51, 0x19, 0x83, 0xa6, 0x6e, 0xa3, 0x33, 0xfb, 0xd5, 0x8c, 0xbb, 0x4e, 0x7c, 0x2e,
	0xdf, 0x80, 0x94, 0x58, 0xd2, 0x94, 0x7f, 0x48, 0x50, 0x01, 0x50, 0xbf, 0x86, 0x5c, 0x3a, 0xd3,
	0x21, 0x86, 0x25, 0x24, 0xeb, 0xae, 0xb5, 0x36, 0xaf, 0x7b, 0xad, 0xf5, 0x11, 0x54, 0x93, 0x93,
	0x9c, 0x3c, 0x53, 0x5f, 0x70, 0xdc, 0x4b, 0x89, 0xd0, 0xa6, 0xf0, 0x60, 0xab, 0xaa, 0xe1, 0x25,
	0xa6, 0x1a, 0xe9, 0x75, 0xca, 0xf6, 0x65, 0xd7, 0x29, 0xe8, 0x3c, 0x91, 0x5a, 0x15, 0xca, 0x4b,
	0x4c, 0xb7, 0x3a, 0xef, 0x43, 0x35, 0x79, 0x59, 0xb2, 0xae, 0x6e, 0x7d, 0xef, 0xbf, 0xf2, 0x50,
	0xcf, 0x58, 0x0d, 0xad, 0x42, 0x71, 0xbf, 0x3f, 0xd0, 0x6f, 0xed, 0xbf, 0x18, 0x1e, 0xb1, 0x81,
	0xf9, 0xdc, 0x1a, 0x19, 0xe3, 0xb1, 0xc9, 0x06, 0x24, 0x8f, 0xc0, 0x67, 0xe6, 0xd3, 0x7e, 0x77,
	0xdf, 0xb4, 0x34, 0x92, 0x14, 0xd2, 0x87, 0xf0, 0xa3, 0x61, 0x7f, 0x30, 0x26, 0x45, 0xda, 0x84,
	0x9a, 0x6c, 0x1b, 0xcc, 0x34, 0xd4, 0x7f, 0x4e, 0x06, 0xe6, 0xf8, 0x97, 0x43, 0xf6, 0x0b, 0x52,
	0xa6, 0x9b, 0xd0, 0x1c, 0x3d, 0x7d, 0x7e, 0xd8, 0xef, 0x1a, 0xfb, 0xd6, 0xc1, 0xb0, 0x67, 0x92,
	0x0a, 0xf6, 0xd9, 0x1d, 0x1e, 0x1c, 0x98, 0xac, 0xdb, 0x4f, 0x80, 0xf2, 0x71, 0x7d, 0x77, 0x38,
	0x18, 0x98, 0xdd, 0x71, 0x7f, 0x38, 0x20, 0x35, 0x7a, 0x13, 0x76, 0x96, 0x66, 0xa3, 0x87, 0x03,
	0xec, 0xbf, 0x3b, 0x3c, 0x18, 0x19, 0x83, 0xe7, 0xa4, 0x4e, 0x6b, 0x50, 0x62, 0xc3, 0xa3, 0xb1,
	0x49, 0x1a, 0xb4, 0x02, 0x85, 0xd1, 0xb0, 0x4f, 0x9a, 0x74, 0x03, 0xea, 0xdd, 0xe1, 0x60, 0xcc,
	0xfa, 0x8f, 0x8e, 0xc6, 0x43, 0x46, 0x08, 0x72, 0x18, 0xbd, 0x1e, 0x33, 0x0f, 0x0f, 0x09, 0xc5,
	0xc6, 0x68, 0xd8, 0x1f, 0x3f, 0x1f, 0x99, 0xe4, 0x06, 0x0e, 0x63, 0xf4, 0x0e, 0xfa, 0x83, 0xfe,
	0xe1, 0x98, 0x19, 0xe3, 0xfe, 0x33, 0xd3, 0x62, 0xe6, 0x13, 0x9c, 0xc1, 0x2e, 0x6d, 0x40, 0xb5,
	0x6b, 0xec, 0x9b, 0x83, 0x9e, 0xc1, 0xc8, 0x4d, 0x9c, 0x1f, 0xca, 0xc9, 0x7a, 0xc2, 0x86, 0x47,
	0x23, 0x72, 0x8b, 0x02, 0x94, 0xfb, 0x07, 0x23, 0xa3, 0x3b, 0x26, 0xef, 0x62, 0x8f, 0x3d, 0x63,
	0x6c, 0x1c, 0x9a, 0x63, 0x72, 0x1b, 0x05, 0x3a, 0x66, 0xfd, 0x11, 0x79, 0xef, 0xde, 0x5f, 0x17,
	0xa1, 0x60, 0x8c, 0xfa, 0x48, 0x2a, 0x9d, 0x65, 0xa4, 0x6a, 0x3d, 0xa3, 0x31, 0x33, 0x1f, 0x9b,
	0xcc, 0x1c, 0x8c, 0xfb, 0xc6, 0x3e, 0xc9, 0xcb, 0xf9, 0xec, 0x1b, 0x83, 0x81, 0xc9, 0x48, 0x11,
	0xf1, 0x8a, 0xd6, 0xf2, 0x04, 0x0f, 0x8f, 0xcf, 0x49, 0x19, 0xd9, 0x0f, 0xc7, 0xc6, 0xf8, 0xe8,
	0x50, 0x89, 0x6e, 0x60, 0xfe, 0xc1, 0xd8, 0xea, 0x99, 0x23, 0x83, 0x8d, 0x8f, 0x98, 0x79, 0x48,
	0xaa, 0xc8, 0x23, 0x81, 0x06, 0x63, 0xfd, 0x67, 0xc6, 0xfe, 0x21, 0xa9, 0xd1, 0x6d, 0x20, 0x29,
	0x89, 0xf5, 0x68, 0x68, 0xb0, 0xde, 0x21, 0x01, 0xf9, 0x6f, 0x0a, 0x94, 0x95, 0x75, 0xd8, 0x7d,
	0x6a, 0xf6, 0x8e, 0xf6, 0xcd, 0x43, 0x52, 0xc7, 0xcd, 0xeb, 0x1f, 0x0e, 0xbb, 0x4f, 0xd9, 0x70,
	0x60, 0x92, 0x26, 0x36, 0x0f, 0xcc, 0xb1, 0x21, 0xd7, 0x43, 0x5a, 0xd8, 0x94, 0xf3, 0xc1, 0xcc,
	0x9e, 0x6c, 0xa0, 0x64, 0x93, 0xbf, 0x45, 0x18, 0xa3, 0x3e, 0x21, 0xd8, 0x65, 0x1c, 0xf2, 0x93,
	0x13, 0x67, 0x62, 0x85, 0x22, 0xf0, 0xc3, 0x38, 0x22, 0xb7, 0x90, 0x29, 0xbd, 0xd1, 0x20, 0x14,
	0x9b, 0x83, 0x83, 0x64, 0x89, 0x5b, 0x28, 0xc9, 0xf4, 0xb9, 0x7b, 0x44, 0xb6, 0x65, 0x5b, 0x0e,
	0x81, 0xf9, 0x25, 0xd9, 0xc1, 0x31, 0xe6, 0x8f, 0xb9, 0x23, 0x72, 0x93, 0xde, 0x80, 0x2d, 0x14,
	0x86, 0x88, 0x62, 0x2b, 0x53, 0xa5, 0x27, 0xef, 0xea, 0x9e, 0x02, 0x97, 0x7b, 0x9e, 0x08, 0xc9,
	0x6d, 0x24, 0x4c, 0xb3, 0x49, 0xcb, 0x89, 0xfc, 0xc9, 0x59, 0xe8, 0x7b, 0x82, 0xbc, 0x87, 0x84,
	0xa7, 0xc2, 0xd7, 0xf7, 0xf3, 0xe4, 0x7d, 0x14, 0xcf, 0x84, 0x87, 0xd6, 0xc4, 0x7f, 0x68, 0x89,
	0xa9, 0x13, 0x45, 0x8e, 0xef, 0x91, 0x6f, 0xa8, 0x81, 0x43, 0x31, 0x89, 0x31, 0x0e, 0x9f, 0x91,
	0x3d, 0xd4, 0x80, 0x33, 0xc1, 0x63, 0x6b, 0xca, 0x03, 0x72, 0x87, 0xde, 0x81, 0xf7, 0xa2, 0x38,
	0x14, 0x22, 0xb6, 0xb4, 0x67, 0xb5, 0xd0, 0xe7, 0x61, 0x6c, 0x9d, 0xf2, 0x38, 0x74, 0x5e, 0x93,
	0x0e, 0x4a, 0xc3, 0xb7, 0x17, 0x67, 0xf9, 0x01, 0x02, 0xa7, 0x3c, 0x9e, 0x9c, 0x21, 0xa5, 0x7a,
	0xbf, 0x44, 0xbe, 0x49, 0x09, 0x34, 0xe4, 0xb3, 0x95, 0x44, 0x68, 0x1f, 0xde, 0xfb, 0xe7, 0x1c,
	0xb4, 0x98, 0x88, 0x02, 0xdf, 0x8b, 0x92, 0xd2, 0x42, 0x15, 0x8a, 0x1e, 0x2e, 0xe0, 0x1d, 0x54,
	0x53, 0xcf, 0xcf, 0xde, 0xd0, 0x9f, 0x39, 0x91, 0x65, 0xf3, 0x73, 0x92, 0xa3, 0xef, 0xc2, 0x0d,
	0xcf, 0xb7, 0x74, 0x0a, 0x83, 0xde, 0x7d, 0x8e, 0xcc, 0xd3, 0x0e, 0xbc, 0x3f, 0x47, 0x4e, 0x9c,
	0x70, 0x32, 0x73, 0xd5, 0x45, 0x41, 0x4a, 0x53, 0xc0, 0x55, 0xc6, 0x22, 0x9c, 0x3a, 0xde, 0x2c,
	0x22, 0x65, 0xba, 0x03, 0x9b, 0xb2, 0xc8, 0xe3, 0xcf, 0x62, 0xcb, 0x3f, 0xb1, 0x8e, 0xfd, 0x99,
	0x67, 0x93, 0x0a, 0x4a, 0x0c, 0xc7, 0xc6, 0x08, 0x92, 0x12, 0x57, 0x69, 0x19, 0xf2, 0xfe, 0x0b,
	0x52, 0x43, 0x26, 0x3d, 0xc6, 0x7c, 0xe7, 0x08, 0xdc, 0xfb, 0x18, 0x1a, 0xd9, 0x87, 0xf2, 0xb8,
	0x9e, 0x80, 0x47, 0x31, 0x79, 0x07, 0x75, 0x5a, 0x31, 0x90, 0x1c, 0x7e, 0x9f, 0xcc, 0x70, 0x55,
	0x24, 0x7f, 0xef, 0x47, 0xd0, 0x5c, 0xa8, 0x95, 0xe0, 0x9e, 0x64, 0xca, 0xcd, 0xe4, 0x1d, 0xb4,
	0x96, 0x57, 0x3c, 0xc4, 0xe4, 0x85, 0xe4, 0xb0, 0xa1, 0x07, 0x24, 0xf9, 0x7b, 0x5f, 0xc0, 0xf6,
	0xba, 0xbf, 0x83, 0x48, 0xeb, 0x34, 0xf7, 0x8d, 0xe7, 0x66, 0x8f, 0xbc, 0x83, 0xee, 0xc2, 0xe8,
	0xf5, 0xcc, 0x9e, 0x62, 0xee, 0x99, 0xfb, 0xe6, 0xd8, 0xec, 0x91, 0x3c, 0xea, 0xe8, 0xd1, 0xa0,
	0xfb, 0xd4, 0x18, 0x3c, 0x31, 0x7b, 0xa4, 0x70, 0xef, 0xa7, 0x50, 0x1d, 0xda, 0xb1, 0xba, 0xfa,
	0x68, 0x42, 0x2d, 0x9a, 0x9c, 0x09, 0x7b, 0xe6, 0x0a, 0x9b, 0xbc, 0x83, 0xba, 0xf4, 0xca, 0x89,
	0xcf, 0xd4, 0xff, 0x2e, 0x48, 0x0e, 0x7b, 0xfc, 0xca, 0xf7, 0xb8, 0x4b, 0xf2, 0xe8, 0x80, 0xb8,
	0xeb, 0x92, 0xc2, 0xbd, 0x9f, 0x43, 0x45, 0xdf, 0xa3, 0xa0, 0x71, 0x3e, 0x32, 0x0e, 0xe7, 0x26,
	0x47, 0x72, 0x28, 0x4b, 0xa3, 0x67, 0x8c, 0xc6, 0x66, 0x6f, 0x0e, 0xcd, 0xe3, 0x36, 0x30, 0xd3,
	0xd8, 0x1f, 0xf7, 0x0f, 0x4c, 0x52, 0xb8, 0xf7, 0x4d, 0x68, 0x2e, 0x1c, 0x0e, 0xb0, 0x6f, 0xc3,
	0xb6, 0x95, 0xe8, 0x98, 0x98, 0xfa, 0x28, 0xba, 0xff, 0x0f, 0x00, 0x00, 0xff, 0xff, 0x3e, 0x9c,
	0x9c, 0x4f, 0x72, 0x39, 0x00, 0x00,
}
